// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message2Clients.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "MessageType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Message2Clients_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Message2Clients_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Message2Clients_2eproto;
namespace protobuf {
class BoolRes;
struct BoolResDefaultTypeInternal;
extern BoolResDefaultTypeInternal _BoolRes_default_instance_;
class CharacterInfoRes;
struct CharacterInfoResDefaultTypeInternal;
extern CharacterInfoResDefaultTypeInternal _CharacterInfoRes_default_instance_;
class CreatCharacterRes;
struct CreatCharacterResDefaultTypeInternal;
extern CreatCharacterResDefaultTypeInternal _CreatCharacterRes_default_instance_;
class EcoRes;
struct EcoResDefaultTypeInternal;
extern EcoResDefaultTypeInternal _EcoRes_default_instance_;
class MessageOfAdditionResource;
struct MessageOfAdditionResourceDefaultTypeInternal;
extern MessageOfAdditionResourceDefaultTypeInternal _MessageOfAdditionResource_default_instance_;
class MessageOfAll;
struct MessageOfAllDefaultTypeInternal;
extern MessageOfAllDefaultTypeInternal _MessageOfAll_default_instance_;
class MessageOfBarracks;
struct MessageOfBarracksDefaultTypeInternal;
extern MessageOfBarracksDefaultTypeInternal _MessageOfBarracks_default_instance_;
class MessageOfCharacter;
struct MessageOfCharacterDefaultTypeInternal;
extern MessageOfCharacterDefaultTypeInternal _MessageOfCharacter_default_instance_;
class MessageOfEconomyResource;
struct MessageOfEconomyResourceDefaultTypeInternal;
extern MessageOfEconomyResourceDefaultTypeInternal _MessageOfEconomyResource_default_instance_;
class MessageOfFarm;
struct MessageOfFarmDefaultTypeInternal;
extern MessageOfFarmDefaultTypeInternal _MessageOfFarm_default_instance_;
class MessageOfMap;
struct MessageOfMapDefaultTypeInternal;
extern MessageOfMapDefaultTypeInternal _MessageOfMap_default_instance_;
class MessageOfMap_Row;
struct MessageOfMap_RowDefaultTypeInternal;
extern MessageOfMap_RowDefaultTypeInternal _MessageOfMap_Row_default_instance_;
class MessageOfMonkeySkill;
struct MessageOfMonkeySkillDefaultTypeInternal;
extern MessageOfMonkeySkillDefaultTypeInternal _MessageOfMonkeySkill_default_instance_;
class MessageOfNews;
struct MessageOfNewsDefaultTypeInternal;
extern MessageOfNewsDefaultTypeInternal _MessageOfNews_default_instance_;
class MessageOfObj;
struct MessageOfObjDefaultTypeInternal;
extern MessageOfObjDefaultTypeInternal _MessageOfObj_default_instance_;
class MessageOfSpring;
struct MessageOfSpringDefaultTypeInternal;
extern MessageOfSpringDefaultTypeInternal _MessageOfSpring_default_instance_;
class MessageOfTeam;
struct MessageOfTeamDefaultTypeInternal;
extern MessageOfTeamDefaultTypeInternal _MessageOfTeam_default_instance_;
class MessageOfTrap;
struct MessageOfTrapDefaultTypeInternal;
extern MessageOfTrapDefaultTypeInternal _MessageOfTrap_default_instance_;
class MessageToClient;
struct MessageToClientDefaultTypeInternal;
extern MessageToClientDefaultTypeInternal _MessageToClient_default_instance_;
class MoveRes;
struct MoveResDefaultTypeInternal;
extern MoveResDefaultTypeInternal _MoveRes_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::BoolRes* Arena::CreateMaybeMessage<::protobuf::BoolRes>(Arena*);
template<> ::protobuf::CharacterInfoRes* Arena::CreateMaybeMessage<::protobuf::CharacterInfoRes>(Arena*);
template<> ::protobuf::CreatCharacterRes* Arena::CreateMaybeMessage<::protobuf::CreatCharacterRes>(Arena*);
template<> ::protobuf::EcoRes* Arena::CreateMaybeMessage<::protobuf::EcoRes>(Arena*);
template<> ::protobuf::MessageOfAdditionResource* Arena::CreateMaybeMessage<::protobuf::MessageOfAdditionResource>(Arena*);
template<> ::protobuf::MessageOfAll* Arena::CreateMaybeMessage<::protobuf::MessageOfAll>(Arena*);
template<> ::protobuf::MessageOfBarracks* Arena::CreateMaybeMessage<::protobuf::MessageOfBarracks>(Arena*);
template<> ::protobuf::MessageOfCharacter* Arena::CreateMaybeMessage<::protobuf::MessageOfCharacter>(Arena*);
template<> ::protobuf::MessageOfEconomyResource* Arena::CreateMaybeMessage<::protobuf::MessageOfEconomyResource>(Arena*);
template<> ::protobuf::MessageOfFarm* Arena::CreateMaybeMessage<::protobuf::MessageOfFarm>(Arena*);
template<> ::protobuf::MessageOfMap* Arena::CreateMaybeMessage<::protobuf::MessageOfMap>(Arena*);
template<> ::protobuf::MessageOfMap_Row* Arena::CreateMaybeMessage<::protobuf::MessageOfMap_Row>(Arena*);
template<> ::protobuf::MessageOfMonkeySkill* Arena::CreateMaybeMessage<::protobuf::MessageOfMonkeySkill>(Arena*);
template<> ::protobuf::MessageOfNews* Arena::CreateMaybeMessage<::protobuf::MessageOfNews>(Arena*);
template<> ::protobuf::MessageOfObj* Arena::CreateMaybeMessage<::protobuf::MessageOfObj>(Arena*);
template<> ::protobuf::MessageOfSpring* Arena::CreateMaybeMessage<::protobuf::MessageOfSpring>(Arena*);
template<> ::protobuf::MessageOfTeam* Arena::CreateMaybeMessage<::protobuf::MessageOfTeam>(Arena*);
template<> ::protobuf::MessageOfTrap* Arena::CreateMaybeMessage<::protobuf::MessageOfTrap>(Arena*);
template<> ::protobuf::MessageToClient* Arena::CreateMaybeMessage<::protobuf::MessageToClient>(Arena*);
template<> ::protobuf::MoveRes* Arena::CreateMaybeMessage<::protobuf::MoveRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class MessageOfMonkeySkill final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMonkeySkill) */ {
 public:
  inline MessageOfMonkeySkill() : MessageOfMonkeySkill(nullptr) {}
  ~MessageOfMonkeySkill() override;
  explicit PROTOBUF_CONSTEXPR MessageOfMonkeySkill(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfMonkeySkill(const MessageOfMonkeySkill& from);
  MessageOfMonkeySkill(MessageOfMonkeySkill&& from) noexcept
    : MessageOfMonkeySkill() {
    *this = ::std::move(from);
  }

  inline MessageOfMonkeySkill& operator=(const MessageOfMonkeySkill& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfMonkeySkill& operator=(MessageOfMonkeySkill&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfMonkeySkill& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfMonkeySkill* internal_default_instance() {
    return reinterpret_cast<const MessageOfMonkeySkill*>(
               &_MessageOfMonkeySkill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MessageOfMonkeySkill& a, MessageOfMonkeySkill& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfMonkeySkill* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfMonkeySkill* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfMonkeySkill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfMonkeySkill>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfMonkeySkill& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfMonkeySkill& from) {
    MessageOfMonkeySkill::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfMonkeySkill* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfMonkeySkill";
  }
  protected:
  explicit MessageOfMonkeySkill(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
    kAngleFieldNumber = 3,
  };
  // int64 team_id = 1;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int64 player_id = 2;
  void clear_player_id();
  int64_t player_id() const;
  void set_player_id(int64_t value);
  private:
  int64_t _internal_player_id() const;
  void _internal_set_player_id(int64_t value);
  public:

  // double angle = 3;
  void clear_angle();
  double angle() const;
  void set_angle(double value);
  private:
  double _internal_angle() const;
  void _internal_set_angle(double value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfMonkeySkill)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t team_id_;
    int64_t player_id_;
    double angle_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfCharacter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfCharacter) */ {
 public:
  inline MessageOfCharacter() : MessageOfCharacter(nullptr) {}
  ~MessageOfCharacter() override;
  explicit PROTOBUF_CONSTEXPR MessageOfCharacter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfCharacter(const MessageOfCharacter& from);
  MessageOfCharacter(MessageOfCharacter&& from) noexcept
    : MessageOfCharacter() {
    *this = ::std::move(from);
  }

  inline MessageOfCharacter& operator=(const MessageOfCharacter& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfCharacter& operator=(MessageOfCharacter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfCharacter& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfCharacter* internal_default_instance() {
    return reinterpret_cast<const MessageOfCharacter*>(
               &_MessageOfCharacter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MessageOfCharacter& a, MessageOfCharacter& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfCharacter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfCharacter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfCharacter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfCharacter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfCharacter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfCharacter& from) {
    MessageOfCharacter::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfCharacter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfCharacter";
  }
  protected:
  explicit MessageOfCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
    kTeamIdFieldNumber = 2,
    kPlayerIdFieldNumber = 3,
    kCharacterTypeFieldNumber = 4,
    kCharacterActiveStateFieldNumber = 5,
    kBlindTimeFieldNumber = 7,
    kStunnedTimeFieldNumber = 9,
    kIsBlindFieldNumber = 6,
    kIsStunnedFieldNumber = 8,
    kIsInvisibleFieldNumber = 10,
    kIsBurnedFieldNumber = 12,
    kCharacterPassiveStateFieldNumber = 16,
    kInvisibleTimeFieldNumber = 11,
    kBurnedTimeFieldNumber = 13,
    kHarmCutFieldNumber = 14,
    kHarmCutTimeFieldNumber = 15,
    kXFieldNumber = 17,
    kYFieldNumber = 18,
    kFacingDirectionFieldNumber = 19,
    kSpeedFieldNumber = 20,
    kViewRangeFieldNumber = 21,
    kCommonAttackCdFieldNumber = 23,
    kCommonAttackFieldNumber = 22,
    kCommonAttackRangeFieldNumber = 24,
    kSkillAttackCdFieldNumber = 25,
    kEconomyDepletionFieldNumber = 26,
    kKillScoreFieldNumber = 27,
    kHpFieldNumber = 28,
    kShieldEquipmentFieldNumber = 29,
    kShoesTimeFieldNumber = 31,
    kShoesEquipmentFieldNumber = 30,
    kIsPurifiedFieldNumber = 32,
    kIsBerserkFieldNumber = 34,
    kPurifiedTimeFieldNumber = 33,
    kBerserkTimeFieldNumber = 35,
    kAttackBuffTimeFieldNumber = 37,
    kSpeedBuffTimeFieldNumber = 38,
    kVisionBuffTimeFieldNumber = 39,
    kAttackBuffNumFieldNumber = 36,
  };
  // int64 guid = 1;
  void clear_guid();
  int64_t guid() const;
  void set_guid(int64_t value);
  private:
  int64_t _internal_guid() const;
  void _internal_set_guid(int64_t value);
  public:

  // int64 team_id = 2;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int64 player_id = 3;
  void clear_player_id();
  int64_t player_id() const;
  void set_player_id(int64_t value);
  private:
  int64_t _internal_player_id() const;
  void _internal_set_player_id(int64_t value);
  public:

  // .protobuf.CharacterType character_type = 4;
  void clear_character_type();
  ::protobuf::CharacterType character_type() const;
  void set_character_type(::protobuf::CharacterType value);
  private:
  ::protobuf::CharacterType _internal_character_type() const;
  void _internal_set_character_type(::protobuf::CharacterType value);
  public:

  // .protobuf.CharacterState character_active_state = 5;
  void clear_character_active_state();
  ::protobuf::CharacterState character_active_state() const;
  void set_character_active_state(::protobuf::CharacterState value);
  private:
  ::protobuf::CharacterState _internal_character_active_state() const;
  void _internal_set_character_active_state(::protobuf::CharacterState value);
  public:

  // int64 blind_time = 7;
  void clear_blind_time();
  int64_t blind_time() const;
  void set_blind_time(int64_t value);
  private:
  int64_t _internal_blind_time() const;
  void _internal_set_blind_time(int64_t value);
  public:

  // int64 stunned_time = 9;
  void clear_stunned_time();
  int64_t stunned_time() const;
  void set_stunned_time(int64_t value);
  private:
  int64_t _internal_stunned_time() const;
  void _internal_set_stunned_time(int64_t value);
  public:

  // bool is_blind = 6;
  void clear_is_blind();
  bool is_blind() const;
  void set_is_blind(bool value);
  private:
  bool _internal_is_blind() const;
  void _internal_set_is_blind(bool value);
  public:

  // bool is_stunned = 8;
  void clear_is_stunned();
  bool is_stunned() const;
  void set_is_stunned(bool value);
  private:
  bool _internal_is_stunned() const;
  void _internal_set_is_stunned(bool value);
  public:

  // bool is_invisible = 10;
  void clear_is_invisible();
  bool is_invisible() const;
  void set_is_invisible(bool value);
  private:
  bool _internal_is_invisible() const;
  void _internal_set_is_invisible(bool value);
  public:

  // bool is_burned = 12;
  void clear_is_burned();
  bool is_burned() const;
  void set_is_burned(bool value);
  private:
  bool _internal_is_burned() const;
  void _internal_set_is_burned(bool value);
  public:

  // .protobuf.CharacterState character_passive_state = 16;
  void clear_character_passive_state();
  ::protobuf::CharacterState character_passive_state() const;
  void set_character_passive_state(::protobuf::CharacterState value);
  private:
  ::protobuf::CharacterState _internal_character_passive_state() const;
  void _internal_set_character_passive_state(::protobuf::CharacterState value);
  public:

  // int64 invisible_time = 11;
  void clear_invisible_time();
  int64_t invisible_time() const;
  void set_invisible_time(int64_t value);
  private:
  int64_t _internal_invisible_time() const;
  void _internal_set_invisible_time(int64_t value);
  public:

  // int64 burned_time = 13;
  void clear_burned_time();
  int64_t burned_time() const;
  void set_burned_time(int64_t value);
  private:
  int64_t _internal_burned_time() const;
  void _internal_set_burned_time(int64_t value);
  public:

  // double harm_cut = 14;
  void clear_harm_cut();
  double harm_cut() const;
  void set_harm_cut(double value);
  private:
  double _internal_harm_cut() const;
  void _internal_set_harm_cut(double value);
  public:

  // int64 harm_cut_time = 15;
  void clear_harm_cut_time();
  int64_t harm_cut_time() const;
  void set_harm_cut_time(int64_t value);
  private:
  int64_t _internal_harm_cut_time() const;
  void _internal_set_harm_cut_time(int64_t value);
  public:

  // int32 x = 17;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 18;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // double facing_direction = 19;
  void clear_facing_direction();
  double facing_direction() const;
  void set_facing_direction(double value);
  private:
  double _internal_facing_direction() const;
  void _internal_set_facing_direction(double value);
  public:

  // int32 speed = 20;
  void clear_speed();
  int32_t speed() const;
  void set_speed(int32_t value);
  private:
  int32_t _internal_speed() const;
  void _internal_set_speed(int32_t value);
  public:

  // int32 view_range = 21;
  void clear_view_range();
  int32_t view_range() const;
  void set_view_range(int32_t value);
  private:
  int32_t _internal_view_range() const;
  void _internal_set_view_range(int32_t value);
  public:

  // int64 common_attack_cd = 23;
  void clear_common_attack_cd();
  int64_t common_attack_cd() const;
  void set_common_attack_cd(int64_t value);
  private:
  int64_t _internal_common_attack_cd() const;
  void _internal_set_common_attack_cd(int64_t value);
  public:

  // int32 common_attack = 22;
  void clear_common_attack();
  int32_t common_attack() const;
  void set_common_attack(int32_t value);
  private:
  int32_t _internal_common_attack() const;
  void _internal_set_common_attack(int32_t value);
  public:

  // int32 common_attack_range = 24;
  void clear_common_attack_range();
  int32_t common_attack_range() const;
  void set_common_attack_range(int32_t value);
  private:
  int32_t _internal_common_attack_range() const;
  void _internal_set_common_attack_range(int32_t value);
  public:

  // int64 skill_attack_cd = 25;
  void clear_skill_attack_cd();
  int64_t skill_attack_cd() const;
  void set_skill_attack_cd(int64_t value);
  private:
  int64_t _internal_skill_attack_cd() const;
  void _internal_set_skill_attack_cd(int64_t value);
  public:

  // int32 economy_depletion = 26;
  void clear_economy_depletion();
  int32_t economy_depletion() const;
  void set_economy_depletion(int32_t value);
  private:
  int32_t _internal_economy_depletion() const;
  void _internal_set_economy_depletion(int32_t value);
  public:

  // int32 kill_score = 27;
  void clear_kill_score();
  int32_t kill_score() const;
  void set_kill_score(int32_t value);
  private:
  int32_t _internal_kill_score() const;
  void _internal_set_kill_score(int32_t value);
  public:

  // int32 hp = 28;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // int32 shield_equipment = 29;
  void clear_shield_equipment();
  int32_t shield_equipment() const;
  void set_shield_equipment(int32_t value);
  private:
  int32_t _internal_shield_equipment() const;
  void _internal_set_shield_equipment(int32_t value);
  public:

  // int64 shoes_time = 31;
  void clear_shoes_time();
  int64_t shoes_time() const;
  void set_shoes_time(int64_t value);
  private:
  int64_t _internal_shoes_time() const;
  void _internal_set_shoes_time(int64_t value);
  public:

  // int32 shoes_equipment = 30;
  void clear_shoes_equipment();
  int32_t shoes_equipment() const;
  void set_shoes_equipment(int32_t value);
  private:
  int32_t _internal_shoes_equipment() const;
  void _internal_set_shoes_equipment(int32_t value);
  public:

  // bool is_purified = 32;
  void clear_is_purified();
  bool is_purified() const;
  void set_is_purified(bool value);
  private:
  bool _internal_is_purified() const;
  void _internal_set_is_purified(bool value);
  public:

  // bool is_berserk = 34;
  void clear_is_berserk();
  bool is_berserk() const;
  void set_is_berserk(bool value);
  private:
  bool _internal_is_berserk() const;
  void _internal_set_is_berserk(bool value);
  public:

  // int64 purified_time = 33;
  void clear_purified_time();
  int64_t purified_time() const;
  void set_purified_time(int64_t value);
  private:
  int64_t _internal_purified_time() const;
  void _internal_set_purified_time(int64_t value);
  public:

  // int64 berserk_time = 35;
  void clear_berserk_time();
  int64_t berserk_time() const;
  void set_berserk_time(int64_t value);
  private:
  int64_t _internal_berserk_time() const;
  void _internal_set_berserk_time(int64_t value);
  public:

  // int64 attack_buff_time = 37;
  void clear_attack_buff_time();
  int64_t attack_buff_time() const;
  void set_attack_buff_time(int64_t value);
  private:
  int64_t _internal_attack_buff_time() const;
  void _internal_set_attack_buff_time(int64_t value);
  public:

  // int64 speed_buff_time = 38;
  void clear_speed_buff_time();
  int64_t speed_buff_time() const;
  void set_speed_buff_time(int64_t value);
  private:
  int64_t _internal_speed_buff_time() const;
  void _internal_set_speed_buff_time(int64_t value);
  public:

  // int64 vision_buff_time = 39;
  void clear_vision_buff_time();
  int64_t vision_buff_time() const;
  void set_vision_buff_time(int64_t value);
  private:
  int64_t _internal_vision_buff_time() const;
  void _internal_set_vision_buff_time(int64_t value);
  public:

  // int32 attack_buff_num = 36;
  void clear_attack_buff_num();
  int32_t attack_buff_num() const;
  void set_attack_buff_num(int32_t value);
  private:
  int32_t _internal_attack_buff_num() const;
  void _internal_set_attack_buff_num(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfCharacter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t guid_;
    int64_t team_id_;
    int64_t player_id_;
    int character_type_;
    int character_active_state_;
    int64_t blind_time_;
    int64_t stunned_time_;
    bool is_blind_;
    bool is_stunned_;
    bool is_invisible_;
    bool is_burned_;
    int character_passive_state_;
    int64_t invisible_time_;
    int64_t burned_time_;
    double harm_cut_;
    int64_t harm_cut_time_;
    int32_t x_;
    int32_t y_;
    double facing_direction_;
    int32_t speed_;
    int32_t view_range_;
    int64_t common_attack_cd_;
    int32_t common_attack_;
    int32_t common_attack_range_;
    int64_t skill_attack_cd_;
    int32_t economy_depletion_;
    int32_t kill_score_;
    int32_t hp_;
    int32_t shield_equipment_;
    int64_t shoes_time_;
    int32_t shoes_equipment_;
    bool is_purified_;
    bool is_berserk_;
    int64_t purified_time_;
    int64_t berserk_time_;
    int64_t attack_buff_time_;
    int64_t speed_buff_time_;
    int64_t vision_buff_time_;
    int32_t attack_buff_num_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfBarracks final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfBarracks) */ {
 public:
  inline MessageOfBarracks() : MessageOfBarracks(nullptr) {}
  ~MessageOfBarracks() override;
  explicit PROTOBUF_CONSTEXPR MessageOfBarracks(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfBarracks(const MessageOfBarracks& from);
  MessageOfBarracks(MessageOfBarracks&& from) noexcept
    : MessageOfBarracks() {
    *this = ::std::move(from);
  }

  inline MessageOfBarracks& operator=(const MessageOfBarracks& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfBarracks& operator=(MessageOfBarracks&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfBarracks& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfBarracks* internal_default_instance() {
    return reinterpret_cast<const MessageOfBarracks*>(
               &_MessageOfBarracks_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MessageOfBarracks& a, MessageOfBarracks& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfBarracks* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfBarracks* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfBarracks* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfBarracks>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfBarracks& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfBarracks& from) {
    MessageOfBarracks::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfBarracks* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfBarracks";
  }
  protected:
  explicit MessageOfBarracks(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kTeamIdFieldNumber = 4,
    kHpFieldNumber = 3,
    kIdFieldNumber = 5,
  };
  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 2;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int64 team_id = 4;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int32 hp = 3;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // int32 id = 5;
  void clear_id();
  int32_t id() const;
  void set_id(int32_t value);
  private:
  int32_t _internal_id() const;
  void _internal_set_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfBarracks)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t x_;
    int32_t y_;
    int64_t team_id_;
    int32_t hp_;
    int32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfSpring final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfSpring) */ {
 public:
  inline MessageOfSpring() : MessageOfSpring(nullptr) {}
  ~MessageOfSpring() override;
  explicit PROTOBUF_CONSTEXPR MessageOfSpring(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfSpring(const MessageOfSpring& from);
  MessageOfSpring(MessageOfSpring&& from) noexcept
    : MessageOfSpring() {
    *this = ::std::move(from);
  }

  inline MessageOfSpring& operator=(const MessageOfSpring& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfSpring& operator=(MessageOfSpring&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfSpring& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfSpring* internal_default_instance() {
    return reinterpret_cast<const MessageOfSpring*>(
               &_MessageOfSpring_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MessageOfSpring& a, MessageOfSpring& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfSpring* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfSpring* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfSpring* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfSpring>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfSpring& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfSpring& from) {
    MessageOfSpring::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfSpring* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfSpring";
  }
  protected:
  explicit MessageOfSpring(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kTeamIdFieldNumber = 4,
    kHpFieldNumber = 3,
    kIdFieldNumber = 5,
  };
  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 2;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int64 team_id = 4;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int32 hp = 3;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // int32 id = 5;
  void clear_id();
  int32_t id() const;
  void set_id(int32_t value);
  private:
  int32_t _internal_id() const;
  void _internal_set_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfSpring)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t x_;
    int32_t y_;
    int64_t team_id_;
    int32_t hp_;
    int32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfFarm final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfFarm) */ {
 public:
  inline MessageOfFarm() : MessageOfFarm(nullptr) {}
  ~MessageOfFarm() override;
  explicit PROTOBUF_CONSTEXPR MessageOfFarm(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfFarm(const MessageOfFarm& from);
  MessageOfFarm(MessageOfFarm&& from) noexcept
    : MessageOfFarm() {
    *this = ::std::move(from);
  }

  inline MessageOfFarm& operator=(const MessageOfFarm& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfFarm& operator=(MessageOfFarm&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfFarm& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfFarm* internal_default_instance() {
    return reinterpret_cast<const MessageOfFarm*>(
               &_MessageOfFarm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MessageOfFarm& a, MessageOfFarm& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfFarm* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfFarm* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfFarm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfFarm>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfFarm& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfFarm& from) {
    MessageOfFarm::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfFarm* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfFarm";
  }
  protected:
  explicit MessageOfFarm(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kTeamIdFieldNumber = 4,
    kHpFieldNumber = 3,
    kIdFieldNumber = 5,
  };
  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 2;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int64 team_id = 4;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int32 hp = 3;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // int32 id = 5;
  void clear_id();
  int32_t id() const;
  void set_id(int32_t value);
  private:
  int32_t _internal_id() const;
  void _internal_set_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfFarm)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t x_;
    int32_t y_;
    int64_t team_id_;
    int32_t hp_;
    int32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfTrap final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfTrap) */ {
 public:
  inline MessageOfTrap() : MessageOfTrap(nullptr) {}
  ~MessageOfTrap() override;
  explicit PROTOBUF_CONSTEXPR MessageOfTrap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfTrap(const MessageOfTrap& from);
  MessageOfTrap(MessageOfTrap&& from) noexcept
    : MessageOfTrap() {
    *this = ::std::move(from);
  }

  inline MessageOfTrap& operator=(const MessageOfTrap& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfTrap& operator=(MessageOfTrap&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfTrap& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfTrap* internal_default_instance() {
    return reinterpret_cast<const MessageOfTrap*>(
               &_MessageOfTrap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MessageOfTrap& a, MessageOfTrap& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfTrap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfTrap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfTrap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfTrap>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfTrap& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfTrap& from) {
    MessageOfTrap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfTrap* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfTrap";
  }
  protected:
  explicit MessageOfTrap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrapTypeFieldNumber = 1,
    kXFieldNumber = 2,
    kTeamIdFieldNumber = 4,
    kYFieldNumber = 3,
    kIdFieldNumber = 5,
  };
  // .protobuf.TrapType trap_type = 1;
  void clear_trap_type();
  ::protobuf::TrapType trap_type() const;
  void set_trap_type(::protobuf::TrapType value);
  private:
  ::protobuf::TrapType _internal_trap_type() const;
  void _internal_set_trap_type(::protobuf::TrapType value);
  public:

  // int32 x = 2;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int64 team_id = 4;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int32 y = 3;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int32 id = 5;
  void clear_id();
  int32_t id() const;
  void set_id(int32_t value);
  private:
  int32_t _internal_id() const;
  void _internal_set_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfTrap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int trap_type_;
    int32_t x_;
    int64_t team_id_;
    int32_t y_;
    int32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfEconomyResource final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfEconomyResource) */ {
 public:
  inline MessageOfEconomyResource() : MessageOfEconomyResource(nullptr) {}
  ~MessageOfEconomyResource() override;
  explicit PROTOBUF_CONSTEXPR MessageOfEconomyResource(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfEconomyResource(const MessageOfEconomyResource& from);
  MessageOfEconomyResource(MessageOfEconomyResource&& from) noexcept
    : MessageOfEconomyResource() {
    *this = ::std::move(from);
  }

  inline MessageOfEconomyResource& operator=(const MessageOfEconomyResource& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfEconomyResource& operator=(MessageOfEconomyResource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfEconomyResource& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfEconomyResource* internal_default_instance() {
    return reinterpret_cast<const MessageOfEconomyResource*>(
               &_MessageOfEconomyResource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MessageOfEconomyResource& a, MessageOfEconomyResource& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfEconomyResource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfEconomyResource* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfEconomyResource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfEconomyResource>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfEconomyResource& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfEconomyResource& from) {
    MessageOfEconomyResource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfEconomyResource* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfEconomyResource";
  }
  protected:
  explicit MessageOfEconomyResource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEconomyResourceTypeFieldNumber = 1,
    kEconomyResourceStateFieldNumber = 2,
    kXFieldNumber = 3,
    kYFieldNumber = 4,
    kProcessFieldNumber = 5,
    kIdFieldNumber = 6,
  };
  // .protobuf.EconomyResourceType economy_resource_type = 1;
  void clear_economy_resource_type();
  ::protobuf::EconomyResourceType economy_resource_type() const;
  void set_economy_resource_type(::protobuf::EconomyResourceType value);
  private:
  ::protobuf::EconomyResourceType _internal_economy_resource_type() const;
  void _internal_set_economy_resource_type(::protobuf::EconomyResourceType value);
  public:

  // .protobuf.EconomyResourceState economy_resource_state = 2;
  void clear_economy_resource_state();
  ::protobuf::EconomyResourceState economy_resource_state() const;
  void set_economy_resource_state(::protobuf::EconomyResourceState value);
  private:
  ::protobuf::EconomyResourceState _internal_economy_resource_state() const;
  void _internal_set_economy_resource_state(::protobuf::EconomyResourceState value);
  public:

  // int32 x = 3;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 4;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int32 process = 5;
  void clear_process();
  int32_t process() const;
  void set_process(int32_t value);
  private:
  int32_t _internal_process() const;
  void _internal_set_process(int32_t value);
  public:

  // int32 id = 6;
  void clear_id();
  int32_t id() const;
  void set_id(int32_t value);
  private:
  int32_t _internal_id() const;
  void _internal_set_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfEconomyResource)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int economy_resource_type_;
    int economy_resource_state_;
    int32_t x_;
    int32_t y_;
    int32_t process_;
    int32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfAdditionResource final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfAdditionResource) */ {
 public:
  inline MessageOfAdditionResource() : MessageOfAdditionResource(nullptr) {}
  ~MessageOfAdditionResource() override;
  explicit PROTOBUF_CONSTEXPR MessageOfAdditionResource(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfAdditionResource(const MessageOfAdditionResource& from);
  MessageOfAdditionResource(MessageOfAdditionResource&& from) noexcept
    : MessageOfAdditionResource() {
    *this = ::std::move(from);
  }

  inline MessageOfAdditionResource& operator=(const MessageOfAdditionResource& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfAdditionResource& operator=(MessageOfAdditionResource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfAdditionResource& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfAdditionResource* internal_default_instance() {
    return reinterpret_cast<const MessageOfAdditionResource*>(
               &_MessageOfAdditionResource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MessageOfAdditionResource& a, MessageOfAdditionResource& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfAdditionResource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfAdditionResource* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfAdditionResource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfAdditionResource>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfAdditionResource& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfAdditionResource& from) {
    MessageOfAdditionResource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfAdditionResource* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfAdditionResource";
  }
  protected:
  explicit MessageOfAdditionResource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAdditionResourceTypeFieldNumber = 1,
    kAdditionResourceStateFieldNumber = 2,
    kXFieldNumber = 3,
    kYFieldNumber = 4,
    kHpFieldNumber = 5,
    kIdFieldNumber = 6,
  };
  // .protobuf.AdditionResourceType addition_resource_type = 1;
  void clear_addition_resource_type();
  ::protobuf::AdditionResourceType addition_resource_type() const;
  void set_addition_resource_type(::protobuf::AdditionResourceType value);
  private:
  ::protobuf::AdditionResourceType _internal_addition_resource_type() const;
  void _internal_set_addition_resource_type(::protobuf::AdditionResourceType value);
  public:

  // .protobuf.AdditionResourceState addition_resource_state = 2;
  void clear_addition_resource_state();
  ::protobuf::AdditionResourceState addition_resource_state() const;
  void set_addition_resource_state(::protobuf::AdditionResourceState value);
  private:
  ::protobuf::AdditionResourceState _internal_addition_resource_state() const;
  void _internal_set_addition_resource_state(::protobuf::AdditionResourceState value);
  public:

  // int32 x = 3;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 4;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int32 hp = 5;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // int32 id = 6;
  void clear_id();
  int32_t id() const;
  void set_id(int32_t value);
  private:
  int32_t _internal_id() const;
  void _internal_set_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfAdditionResource)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int addition_resource_type_;
    int addition_resource_state_;
    int32_t x_;
    int32_t y_;
    int32_t hp_;
    int32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfMap_Row final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMap.Row) */ {
 public:
  inline MessageOfMap_Row() : MessageOfMap_Row(nullptr) {}
  ~MessageOfMap_Row() override;
  explicit PROTOBUF_CONSTEXPR MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfMap_Row(const MessageOfMap_Row& from);
  MessageOfMap_Row(MessageOfMap_Row&& from) noexcept
    : MessageOfMap_Row() {
    *this = ::std::move(from);
  }

  inline MessageOfMap_Row& operator=(const MessageOfMap_Row& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfMap_Row& operator=(MessageOfMap_Row&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfMap_Row& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfMap_Row* internal_default_instance() {
    return reinterpret_cast<const MessageOfMap_Row*>(
               &_MessageOfMap_Row_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MessageOfMap_Row& a, MessageOfMap_Row& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfMap_Row* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfMap_Row* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfMap_Row* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfMap_Row>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfMap_Row& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfMap_Row& from) {
    MessageOfMap_Row::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfMap_Row* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfMap.Row";
  }
  protected:
  explicit MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kColsFieldNumber = 1,
  };
  // repeated .protobuf.PlaceType cols = 1;
  int cols_size() const;
  private:
  int _internal_cols_size() const;
  public:
  void clear_cols();
  private:
  ::protobuf::PlaceType _internal_cols(int index) const;
  void _internal_add_cols(::protobuf::PlaceType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_cols();
  public:
  ::protobuf::PlaceType cols(int index) const;
  void set_cols(int index, ::protobuf::PlaceType value);
  void add_cols(::protobuf::PlaceType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& cols() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_cols();

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfMap.Row)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> cols_;
    mutable std::atomic<int> _cols_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfMap final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMap) */ {
 public:
  inline MessageOfMap() : MessageOfMap(nullptr) {}
  ~MessageOfMap() override;
  explicit PROTOBUF_CONSTEXPR MessageOfMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfMap(const MessageOfMap& from);
  MessageOfMap(MessageOfMap&& from) noexcept
    : MessageOfMap() {
    *this = ::std::move(from);
  }

  inline MessageOfMap& operator=(const MessageOfMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfMap& operator=(MessageOfMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfMap* internal_default_instance() {
    return reinterpret_cast<const MessageOfMap*>(
               &_MessageOfMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MessageOfMap& a, MessageOfMap& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfMap>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfMap& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfMap& from) {
    MessageOfMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfMap* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfMap";
  }
  protected:
  explicit MessageOfMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageOfMap_Row Row;

  // accessors -------------------------------------------------------

  enum : int {
    kRowsFieldNumber = 3,
    kHeightFieldNumber = 1,
    kWidthFieldNumber = 2,
  };
  // repeated .protobuf.MessageOfMap.Row rows = 3;
  int rows_size() const;
  private:
  int _internal_rows_size() const;
  public:
  void clear_rows();
  ::protobuf::MessageOfMap_Row* mutable_rows(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfMap_Row >*
      mutable_rows();
  private:
  const ::protobuf::MessageOfMap_Row& _internal_rows(int index) const;
  ::protobuf::MessageOfMap_Row* _internal_add_rows();
  public:
  const ::protobuf::MessageOfMap_Row& rows(int index) const;
  ::protobuf::MessageOfMap_Row* add_rows();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfMap_Row >&
      rows() const;

  // uint32 height = 1;
  void clear_height();
  uint32_t height() const;
  void set_height(uint32_t value);
  private:
  uint32_t _internal_height() const;
  void _internal_set_height(uint32_t value);
  public:

  // uint32 width = 2;
  void clear_width();
  uint32_t width() const;
  void set_width(uint32_t value);
  private:
  uint32_t _internal_width() const;
  void _internal_set_width(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfMap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfMap_Row > rows_;
    uint32_t height_;
    uint32_t width_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfTeam final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfTeam) */ {
 public:
  inline MessageOfTeam() : MessageOfTeam(nullptr) {}
  ~MessageOfTeam() override;
  explicit PROTOBUF_CONSTEXPR MessageOfTeam(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfTeam(const MessageOfTeam& from);
  MessageOfTeam(MessageOfTeam&& from) noexcept
    : MessageOfTeam() {
    *this = ::std::move(from);
  }

  inline MessageOfTeam& operator=(const MessageOfTeam& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfTeam& operator=(MessageOfTeam&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfTeam& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfTeam* internal_default_instance() {
    return reinterpret_cast<const MessageOfTeam*>(
               &_MessageOfTeam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MessageOfTeam& a, MessageOfTeam& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfTeam* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfTeam* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfTeam* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfTeam>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfTeam& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfTeam& from) {
    MessageOfTeam::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfTeam* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfTeam";
  }
  protected:
  explicit MessageOfTeam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
    kScoreFieldNumber = 3,
    kEnergyFieldNumber = 4,
  };
  // int64 team_id = 1;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int64 player_id = 2;
  void clear_player_id();
  int64_t player_id() const;
  void set_player_id(int64_t value);
  private:
  int64_t _internal_player_id() const;
  void _internal_set_player_id(int64_t value);
  public:

  // int64 score = 3;
  void clear_score();
  int64_t score() const;
  void set_score(int64_t value);
  private:
  int64_t _internal_score() const;
  void _internal_set_score(int64_t value);
  public:

  // int64 energy = 4;
  void clear_energy();
  int64_t energy() const;
  void set_energy(int64_t value);
  private:
  int64_t _internal_energy() const;
  void _internal_set_energy(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfTeam)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t team_id_;
    int64_t player_id_;
    int64_t score_;
    int64_t energy_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfObj final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfObj) */ {
 public:
  inline MessageOfObj() : MessageOfObj(nullptr) {}
  ~MessageOfObj() override;
  explicit PROTOBUF_CONSTEXPR MessageOfObj(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfObj(const MessageOfObj& from);
  MessageOfObj(MessageOfObj&& from) noexcept
    : MessageOfObj() {
    *this = ::std::move(from);
  }

  inline MessageOfObj& operator=(const MessageOfObj& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfObj& operator=(MessageOfObj&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfObj& default_instance() {
    return *internal_default_instance();
  }
  enum MessageOfObjCase {
    kCharacterMessage = 1,
    kBarracksMessage = 2,
    kSpringMessage = 3,
    kFarmMessage = 4,
    kTrapMessage = 5,
    kEconomyResourceMessage = 6,
    kAdditionResourceMessage = 7,
    kMapMessage = 8,
    kNewsMessage = 9,
    kTeamMessage = 10,
    MESSAGE_OF_OBJ_NOT_SET = 0,
  };

  static inline const MessageOfObj* internal_default_instance() {
    return reinterpret_cast<const MessageOfObj*>(
               &_MessageOfObj_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MessageOfObj& a, MessageOfObj& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfObj* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfObj* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfObj* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfObj>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfObj& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfObj& from) {
    MessageOfObj::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfObj* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfObj";
  }
  protected:
  explicit MessageOfObj(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterMessageFieldNumber = 1,
    kBarracksMessageFieldNumber = 2,
    kSpringMessageFieldNumber = 3,
    kFarmMessageFieldNumber = 4,
    kTrapMessageFieldNumber = 5,
    kEconomyResourceMessageFieldNumber = 6,
    kAdditionResourceMessageFieldNumber = 7,
    kMapMessageFieldNumber = 8,
    kNewsMessageFieldNumber = 9,
    kTeamMessageFieldNumber = 10,
  };
  // .protobuf.MessageOfCharacter character_message = 1;
  bool has_character_message() const;
  private:
  bool _internal_has_character_message() const;
  public:
  void clear_character_message();
  const ::protobuf::MessageOfCharacter& character_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfCharacter* release_character_message();
  ::protobuf::MessageOfCharacter* mutable_character_message();
  void set_allocated_character_message(::protobuf::MessageOfCharacter* character_message);
  private:
  const ::protobuf::MessageOfCharacter& _internal_character_message() const;
  ::protobuf::MessageOfCharacter* _internal_mutable_character_message();
  public:
  void unsafe_arena_set_allocated_character_message(
      ::protobuf::MessageOfCharacter* character_message);
  ::protobuf::MessageOfCharacter* unsafe_arena_release_character_message();

  // .protobuf.MessageOfBarracks barracks_message = 2;
  bool has_barracks_message() const;
  private:
  bool _internal_has_barracks_message() const;
  public:
  void clear_barracks_message();
  const ::protobuf::MessageOfBarracks& barracks_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfBarracks* release_barracks_message();
  ::protobuf::MessageOfBarracks* mutable_barracks_message();
  void set_allocated_barracks_message(::protobuf::MessageOfBarracks* barracks_message);
  private:
  const ::protobuf::MessageOfBarracks& _internal_barracks_message() const;
  ::protobuf::MessageOfBarracks* _internal_mutable_barracks_message();
  public:
  void unsafe_arena_set_allocated_barracks_message(
      ::protobuf::MessageOfBarracks* barracks_message);
  ::protobuf::MessageOfBarracks* unsafe_arena_release_barracks_message();

  // .protobuf.MessageOfSpring spring_message = 3;
  bool has_spring_message() const;
  private:
  bool _internal_has_spring_message() const;
  public:
  void clear_spring_message();
  const ::protobuf::MessageOfSpring& spring_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfSpring* release_spring_message();
  ::protobuf::MessageOfSpring* mutable_spring_message();
  void set_allocated_spring_message(::protobuf::MessageOfSpring* spring_message);
  private:
  const ::protobuf::MessageOfSpring& _internal_spring_message() const;
  ::protobuf::MessageOfSpring* _internal_mutable_spring_message();
  public:
  void unsafe_arena_set_allocated_spring_message(
      ::protobuf::MessageOfSpring* spring_message);
  ::protobuf::MessageOfSpring* unsafe_arena_release_spring_message();

  // .protobuf.MessageOfFarm farm_message = 4;
  bool has_farm_message() const;
  private:
  bool _internal_has_farm_message() const;
  public:
  void clear_farm_message();
  const ::protobuf::MessageOfFarm& farm_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfFarm* release_farm_message();
  ::protobuf::MessageOfFarm* mutable_farm_message();
  void set_allocated_farm_message(::protobuf::MessageOfFarm* farm_message);
  private:
  const ::protobuf::MessageOfFarm& _internal_farm_message() const;
  ::protobuf::MessageOfFarm* _internal_mutable_farm_message();
  public:
  void unsafe_arena_set_allocated_farm_message(
      ::protobuf::MessageOfFarm* farm_message);
  ::protobuf::MessageOfFarm* unsafe_arena_release_farm_message();

  // .protobuf.MessageOfTrap trap_message = 5;
  bool has_trap_message() const;
  private:
  bool _internal_has_trap_message() const;
  public:
  void clear_trap_message();
  const ::protobuf::MessageOfTrap& trap_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfTrap* release_trap_message();
  ::protobuf::MessageOfTrap* mutable_trap_message();
  void set_allocated_trap_message(::protobuf::MessageOfTrap* trap_message);
  private:
  const ::protobuf::MessageOfTrap& _internal_trap_message() const;
  ::protobuf::MessageOfTrap* _internal_mutable_trap_message();
  public:
  void unsafe_arena_set_allocated_trap_message(
      ::protobuf::MessageOfTrap* trap_message);
  ::protobuf::MessageOfTrap* unsafe_arena_release_trap_message();

  // .protobuf.MessageOfEconomyResource economy_resource_message = 6;
  bool has_economy_resource_message() const;
  private:
  bool _internal_has_economy_resource_message() const;
  public:
  void clear_economy_resource_message();
  const ::protobuf::MessageOfEconomyResource& economy_resource_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfEconomyResource* release_economy_resource_message();
  ::protobuf::MessageOfEconomyResource* mutable_economy_resource_message();
  void set_allocated_economy_resource_message(::protobuf::MessageOfEconomyResource* economy_resource_message);
  private:
  const ::protobuf::MessageOfEconomyResource& _internal_economy_resource_message() const;
  ::protobuf::MessageOfEconomyResource* _internal_mutable_economy_resource_message();
  public:
  void unsafe_arena_set_allocated_economy_resource_message(
      ::protobuf::MessageOfEconomyResource* economy_resource_message);
  ::protobuf::MessageOfEconomyResource* unsafe_arena_release_economy_resource_message();

  // .protobuf.MessageOfAdditionResource addition_resource_message = 7;
  bool has_addition_resource_message() const;
  private:
  bool _internal_has_addition_resource_message() const;
  public:
  void clear_addition_resource_message();
  const ::protobuf::MessageOfAdditionResource& addition_resource_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfAdditionResource* release_addition_resource_message();
  ::protobuf::MessageOfAdditionResource* mutable_addition_resource_message();
  void set_allocated_addition_resource_message(::protobuf::MessageOfAdditionResource* addition_resource_message);
  private:
  const ::protobuf::MessageOfAdditionResource& _internal_addition_resource_message() const;
  ::protobuf::MessageOfAdditionResource* _internal_mutable_addition_resource_message();
  public:
  void unsafe_arena_set_allocated_addition_resource_message(
      ::protobuf::MessageOfAdditionResource* addition_resource_message);
  ::protobuf::MessageOfAdditionResource* unsafe_arena_release_addition_resource_message();

  // .protobuf.MessageOfMap map_message = 8;
  bool has_map_message() const;
  private:
  bool _internal_has_map_message() const;
  public:
  void clear_map_message();
  const ::protobuf::MessageOfMap& map_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfMap* release_map_message();
  ::protobuf::MessageOfMap* mutable_map_message();
  void set_allocated_map_message(::protobuf::MessageOfMap* map_message);
  private:
  const ::protobuf::MessageOfMap& _internal_map_message() const;
  ::protobuf::MessageOfMap* _internal_mutable_map_message();
  public:
  void unsafe_arena_set_allocated_map_message(
      ::protobuf::MessageOfMap* map_message);
  ::protobuf::MessageOfMap* unsafe_arena_release_map_message();

  // .protobuf.MessageOfNews news_message = 9;
  bool has_news_message() const;
  private:
  bool _internal_has_news_message() const;
  public:
  void clear_news_message();
  const ::protobuf::MessageOfNews& news_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfNews* release_news_message();
  ::protobuf::MessageOfNews* mutable_news_message();
  void set_allocated_news_message(::protobuf::MessageOfNews* news_message);
  private:
  const ::protobuf::MessageOfNews& _internal_news_message() const;
  ::protobuf::MessageOfNews* _internal_mutable_news_message();
  public:
  void unsafe_arena_set_allocated_news_message(
      ::protobuf::MessageOfNews* news_message);
  ::protobuf::MessageOfNews* unsafe_arena_release_news_message();

  // .protobuf.MessageOfTeam team_message = 10;
  bool has_team_message() const;
  private:
  bool _internal_has_team_message() const;
  public:
  void clear_team_message();
  const ::protobuf::MessageOfTeam& team_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfTeam* release_team_message();
  ::protobuf::MessageOfTeam* mutable_team_message();
  void set_allocated_team_message(::protobuf::MessageOfTeam* team_message);
  private:
  const ::protobuf::MessageOfTeam& _internal_team_message() const;
  ::protobuf::MessageOfTeam* _internal_mutable_team_message();
  public:
  void unsafe_arena_set_allocated_team_message(
      ::protobuf::MessageOfTeam* team_message);
  ::protobuf::MessageOfTeam* unsafe_arena_release_team_message();

  void clear_message_of_obj();
  MessageOfObjCase message_of_obj_case() const;
  // @@protoc_insertion_point(class_scope:protobuf.MessageOfObj)
 private:
  class _Internal;
  void set_has_character_message();
  void set_has_barracks_message();
  void set_has_spring_message();
  void set_has_farm_message();
  void set_has_trap_message();
  void set_has_economy_resource_message();
  void set_has_addition_resource_message();
  void set_has_map_message();
  void set_has_news_message();
  void set_has_team_message();

  inline bool has_message_of_obj() const;
  inline void clear_has_message_of_obj();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union MessageOfObjUnion {
      constexpr MessageOfObjUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::protobuf::MessageOfCharacter* character_message_;
      ::protobuf::MessageOfBarracks* barracks_message_;
      ::protobuf::MessageOfSpring* spring_message_;
      ::protobuf::MessageOfFarm* farm_message_;
      ::protobuf::MessageOfTrap* trap_message_;
      ::protobuf::MessageOfEconomyResource* economy_resource_message_;
      ::protobuf::MessageOfAdditionResource* addition_resource_message_;
      ::protobuf::MessageOfMap* map_message_;
      ::protobuf::MessageOfNews* news_message_;
      ::protobuf::MessageOfTeam* team_message_;
    } message_of_obj_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfAll final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfAll) */ {
 public:
  inline MessageOfAll() : MessageOfAll(nullptr) {}
  ~MessageOfAll() override;
  explicit PROTOBUF_CONSTEXPR MessageOfAll(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfAll(const MessageOfAll& from);
  MessageOfAll(MessageOfAll&& from) noexcept
    : MessageOfAll() {
    *this = ::std::move(from);
  }

  inline MessageOfAll& operator=(const MessageOfAll& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfAll& operator=(MessageOfAll&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfAll& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfAll* internal_default_instance() {
    return reinterpret_cast<const MessageOfAll*>(
               &_MessageOfAll_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MessageOfAll& a, MessageOfAll& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfAll* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfAll* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfAll* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfAll>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfAll& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfAll& from) {
    MessageOfAll::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfAll* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfAll";
  }
  protected:
  explicit MessageOfAll(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameTimeFieldNumber = 1,
    kBuddhistsTeamScoreFieldNumber = 2,
    kMonstersTeamScoreFieldNumber = 3,
    kBuddhistsTeamEconomyFieldNumber = 4,
    kMonstersTeamEconomyFieldNumber = 5,
    kBuddhistsHeroHpFieldNumber = 6,
    kMonstersHeroHpFieldNumber = 7,
  };
  // int32 game_time = 1;
  void clear_game_time();
  int32_t game_time() const;
  void set_game_time(int32_t value);
  private:
  int32_t _internal_game_time() const;
  void _internal_set_game_time(int32_t value);
  public:

  // int32 buddhists_team_score = 2;
  void clear_buddhists_team_score();
  int32_t buddhists_team_score() const;
  void set_buddhists_team_score(int32_t value);
  private:
  int32_t _internal_buddhists_team_score() const;
  void _internal_set_buddhists_team_score(int32_t value);
  public:

  // int32 monsters_team_score = 3;
  void clear_monsters_team_score();
  int32_t monsters_team_score() const;
  void set_monsters_team_score(int32_t value);
  private:
  int32_t _internal_monsters_team_score() const;
  void _internal_set_monsters_team_score(int32_t value);
  public:

  // int32 buddhists_team_economy = 4;
  void clear_buddhists_team_economy();
  int32_t buddhists_team_economy() const;
  void set_buddhists_team_economy(int32_t value);
  private:
  int32_t _internal_buddhists_team_economy() const;
  void _internal_set_buddhists_team_economy(int32_t value);
  public:

  // int32 monsters_team_economy = 5;
  void clear_monsters_team_economy();
  int32_t monsters_team_economy() const;
  void set_monsters_team_economy(int32_t value);
  private:
  int32_t _internal_monsters_team_economy() const;
  void _internal_set_monsters_team_economy(int32_t value);
  public:

  // int32 buddhists_hero_hp = 6;
  void clear_buddhists_hero_hp();
  int32_t buddhists_hero_hp() const;
  void set_buddhists_hero_hp(int32_t value);
  private:
  int32_t _internal_buddhists_hero_hp() const;
  void _internal_set_buddhists_hero_hp(int32_t value);
  public:

  // int32 monsters_hero_hp = 7;
  void clear_monsters_hero_hp();
  int32_t monsters_hero_hp() const;
  void set_monsters_hero_hp(int32_t value);
  private:
  int32_t _internal_monsters_hero_hp() const;
  void _internal_set_monsters_hero_hp(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageOfAll)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t game_time_;
    int32_t buddhists_team_score_;
    int32_t monsters_team_score_;
    int32_t buddhists_team_economy_;
    int32_t monsters_team_economy_;
    int32_t buddhists_hero_hp_;
    int32_t monsters_hero_hp_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageToClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageToClient) */ {
 public:
  inline MessageToClient() : MessageToClient(nullptr) {}
  ~MessageToClient() override;
  explicit PROTOBUF_CONSTEXPR MessageToClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageToClient(const MessageToClient& from);
  MessageToClient(MessageToClient&& from) noexcept
    : MessageToClient() {
    *this = ::std::move(from);
  }

  inline MessageToClient& operator=(const MessageToClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageToClient& operator=(MessageToClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageToClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageToClient* internal_default_instance() {
    return reinterpret_cast<const MessageToClient*>(
               &_MessageToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MessageToClient& a, MessageToClient& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageToClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageToClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageToClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageToClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageToClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageToClient& from) {
    MessageToClient::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageToClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageToClient";
  }
  protected:
  explicit MessageToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjMessageFieldNumber = 1,
    kAllMessageFieldNumber = 3,
    kGameStateFieldNumber = 2,
  };
  // repeated .protobuf.MessageOfObj obj_message = 1;
  int obj_message_size() const;
  private:
  int _internal_obj_message_size() const;
  public:
  void clear_obj_message();
  ::protobuf::MessageOfObj* mutable_obj_message(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfObj >*
      mutable_obj_message();
  private:
  const ::protobuf::MessageOfObj& _internal_obj_message(int index) const;
  ::protobuf::MessageOfObj* _internal_add_obj_message();
  public:
  const ::protobuf::MessageOfObj& obj_message(int index) const;
  ::protobuf::MessageOfObj* add_obj_message();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfObj >&
      obj_message() const;

  // .protobuf.MessageOfAll all_message = 3;
  bool has_all_message() const;
  private:
  bool _internal_has_all_message() const;
  public:
  void clear_all_message();
  const ::protobuf::MessageOfAll& all_message() const;
  PROTOBUF_NODISCARD ::protobuf::MessageOfAll* release_all_message();
  ::protobuf::MessageOfAll* mutable_all_message();
  void set_allocated_all_message(::protobuf::MessageOfAll* all_message);
  private:
  const ::protobuf::MessageOfAll& _internal_all_message() const;
  ::protobuf::MessageOfAll* _internal_mutable_all_message();
  public:
  void unsafe_arena_set_allocated_all_message(
      ::protobuf::MessageOfAll* all_message);
  ::protobuf::MessageOfAll* unsafe_arena_release_all_message();

  // .protobuf.GameState game_state = 2;
  void clear_game_state();
  ::protobuf::GameState game_state() const;
  void set_game_state(::protobuf::GameState value);
  private:
  ::protobuf::GameState _internal_game_state() const;
  void _internal_set_game_state(::protobuf::GameState value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MessageToClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfObj > obj_message_;
    ::protobuf::MessageOfAll* all_message_;
    int game_state_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MoveRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MoveRes) */ {
 public:
  inline MoveRes() : MoveRes(nullptr) {}
  ~MoveRes() override;
  explicit PROTOBUF_CONSTEXPR MoveRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MoveRes(const MoveRes& from);
  MoveRes(MoveRes&& from) noexcept
    : MoveRes() {
    *this = ::std::move(from);
  }

  inline MoveRes& operator=(const MoveRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveRes& operator=(MoveRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveRes* internal_default_instance() {
    return reinterpret_cast<const MoveRes*>(
               &_MoveRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MoveRes& a, MoveRes& b) {
    a.Swap(&b);
  }
  inline void Swap(MoveRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MoveRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MoveRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MoveRes& from) {
    MoveRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MoveRes";
  }
  protected:
  explicit MoveRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActualSpeedFieldNumber = 1,
    kActualAngleFieldNumber = 2,
    kActSuccessFieldNumber = 3,
  };
  // int64 actual_speed = 1;
  void clear_actual_speed();
  int64_t actual_speed() const;
  void set_actual_speed(int64_t value);
  private:
  int64_t _internal_actual_speed() const;
  void _internal_set_actual_speed(int64_t value);
  public:

  // double actual_angle = 2;
  void clear_actual_angle();
  double actual_angle() const;
  void set_actual_angle(double value);
  private:
  double _internal_actual_angle() const;
  void _internal_set_actual_angle(double value);
  public:

  // bool act_success = 3;
  void clear_act_success();
  bool act_success() const;
  void set_act_success(bool value);
  private:
  bool _internal_act_success() const;
  void _internal_set_act_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MoveRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t actual_speed_;
    double actual_angle_;
    bool act_success_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class CreatCharacterRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.CreatCharacterRes) */ {
 public:
  inline CreatCharacterRes() : CreatCharacterRes(nullptr) {}
  ~CreatCharacterRes() override;
  explicit PROTOBUF_CONSTEXPR CreatCharacterRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreatCharacterRes(const CreatCharacterRes& from);
  CreatCharacterRes(CreatCharacterRes&& from) noexcept
    : CreatCharacterRes() {
    *this = ::std::move(from);
  }

  inline CreatCharacterRes& operator=(const CreatCharacterRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatCharacterRes& operator=(CreatCharacterRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreatCharacterRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreatCharacterRes* internal_default_instance() {
    return reinterpret_cast<const CreatCharacterRes*>(
               &_CreatCharacterRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CreatCharacterRes& a, CreatCharacterRes& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatCharacterRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatCharacterRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreatCharacterRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreatCharacterRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreatCharacterRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreatCharacterRes& from) {
    CreatCharacterRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatCharacterRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.CreatCharacterRes";
  }
  protected:
  explicit CreatCharacterRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 2,
    kActSuccessFieldNumber = 1,
  };
  // int64 player_id = 2;
  void clear_player_id();
  int64_t player_id() const;
  void set_player_id(int64_t value);
  private:
  int64_t _internal_player_id() const;
  void _internal_set_player_id(int64_t value);
  public:

  // bool act_success = 1;
  void clear_act_success();
  bool act_success() const;
  void set_act_success(bool value);
  private:
  bool _internal_act_success() const;
  void _internal_set_act_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.CreatCharacterRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t player_id_;
    bool act_success_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class BoolRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.BoolRes) */ {
 public:
  inline BoolRes() : BoolRes(nullptr) {}
  ~BoolRes() override;
  explicit PROTOBUF_CONSTEXPR BoolRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BoolRes(const BoolRes& from);
  BoolRes(BoolRes&& from) noexcept
    : BoolRes() {
    *this = ::std::move(from);
  }

  inline BoolRes& operator=(const BoolRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoolRes& operator=(BoolRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoolRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoolRes* internal_default_instance() {
    return reinterpret_cast<const BoolRes*>(
               &_BoolRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(BoolRes& a, BoolRes& b) {
    a.Swap(&b);
  }
  inline void Swap(BoolRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoolRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoolRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BoolRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BoolRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BoolRes& from) {
    BoolRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoolRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.BoolRes";
  }
  protected:
  explicit BoolRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActSuccessFieldNumber = 1,
  };
  // bool act_success = 1;
  void clear_act_success();
  bool act_success() const;
  void set_act_success(bool value);
  private:
  bool _internal_act_success() const;
  void _internal_set_act_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.BoolRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool act_success_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class CharacterInfoRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.CharacterInfoRes) */ {
 public:
  inline CharacterInfoRes() : CharacterInfoRes(nullptr) {}
  ~CharacterInfoRes() override;
  explicit PROTOBUF_CONSTEXPR CharacterInfoRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CharacterInfoRes(const CharacterInfoRes& from);
  CharacterInfoRes(CharacterInfoRes&& from) noexcept
    : CharacterInfoRes() {
    *this = ::std::move(from);
  }

  inline CharacterInfoRes& operator=(const CharacterInfoRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacterInfoRes& operator=(CharacterInfoRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CharacterInfoRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const CharacterInfoRes* internal_default_instance() {
    return reinterpret_cast<const CharacterInfoRes*>(
               &_CharacterInfoRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CharacterInfoRes& a, CharacterInfoRes& b) {
    a.Swap(&b);
  }
  inline void Swap(CharacterInfoRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CharacterInfoRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CharacterInfoRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CharacterInfoRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CharacterInfoRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CharacterInfoRes& from) {
    CharacterInfoRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterInfoRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.CharacterInfoRes";
  }
  protected:
  explicit CharacterInfoRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterInfoFieldNumber = 1,
  };
  // repeated .protobuf.MessageOfCharacter Character_info = 1;
  int character_info_size() const;
  private:
  int _internal_character_info_size() const;
  public:
  void clear_character_info();
  ::protobuf::MessageOfCharacter* mutable_character_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfCharacter >*
      mutable_character_info();
  private:
  const ::protobuf::MessageOfCharacter& _internal_character_info(int index) const;
  ::protobuf::MessageOfCharacter* _internal_add_character_info();
  public:
  const ::protobuf::MessageOfCharacter& character_info(int index) const;
  ::protobuf::MessageOfCharacter* add_character_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfCharacter >&
      character_info() const;

  // @@protoc_insertion_point(class_scope:protobuf.CharacterInfoRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfCharacter > character_info_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class EcoRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.EcoRes) */ {
 public:
  inline EcoRes() : EcoRes(nullptr) {}
  ~EcoRes() override;
  explicit PROTOBUF_CONSTEXPR EcoRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EcoRes(const EcoRes& from);
  EcoRes(EcoRes&& from) noexcept
    : EcoRes() {
    *this = ::std::move(from);
  }

  inline EcoRes& operator=(const EcoRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline EcoRes& operator=(EcoRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EcoRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const EcoRes* internal_default_instance() {
    return reinterpret_cast<const EcoRes*>(
               &_EcoRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(EcoRes& a, EcoRes& b) {
    a.Swap(&b);
  }
  inline void Swap(EcoRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EcoRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EcoRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EcoRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EcoRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EcoRes& from) {
    EcoRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EcoRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.EcoRes";
  }
  protected:
  explicit EcoRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEconomyFieldNumber = 1,
  };
  // int64 economy = 1;
  void clear_economy();
  int64_t economy() const;
  void set_economy(int64_t value);
  private:
  int64_t _internal_economy() const;
  void _internal_set_economy(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.EcoRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t economy_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfNews final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfNews) */ {
 public:
  inline MessageOfNews() : MessageOfNews(nullptr) {}
  ~MessageOfNews() override;
  explicit PROTOBUF_CONSTEXPR MessageOfNews(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfNews(const MessageOfNews& from);
  MessageOfNews(MessageOfNews&& from) noexcept
    : MessageOfNews() {
    *this = ::std::move(from);
  }

  inline MessageOfNews& operator=(const MessageOfNews& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfNews& operator=(MessageOfNews&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfNews& default_instance() {
    return *internal_default_instance();
  }
  enum NewsCase {
    kTextMessage = 1,
    kBinaryMessage = 2,
    NEWS_NOT_SET = 0,
  };

  static inline const MessageOfNews* internal_default_instance() {
    return reinterpret_cast<const MessageOfNews*>(
               &_MessageOfNews_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MessageOfNews& a, MessageOfNews& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfNews* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfNews* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfNews* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfNews>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfNews& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageOfNews& from) {
    MessageOfNews::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfNews* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MessageOfNews";
  }
  protected:
  explicit MessageOfNews(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromIdFieldNumber = 3,
    kToIdFieldNumber = 4,
    kTeamIdFieldNumber = 5,
    kTextMessageFieldNumber = 1,
    kBinaryMessageFieldNumber = 2,
  };
  // int64 from_id = 3;
  void clear_from_id();
  int64_t from_id() const;
  void set_from_id(int64_t value);
  private:
  int64_t _internal_from_id() const;
  void _internal_set_from_id(int64_t value);
  public:

  // int64 to_id = 4;
  void clear_to_id();
  int64_t to_id() const;
  void set_to_id(int64_t value);
  private:
  int64_t _internal_to_id() const;
  void _internal_set_to_id(int64_t value);
  public:

  // int64 team_id = 5;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // string text_message = 1;
  bool has_text_message() const;
  private:
  bool _internal_has_text_message() const;
  public:
  void clear_text_message();
  const std::string& text_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_text_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_text_message();
  PROTOBUF_NODISCARD std::string* release_text_message();
  void set_allocated_text_message(std::string* text_message);
  private:
  const std::string& _internal_text_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text_message(const std::string& value);
  std::string* _internal_mutable_text_message();
  public:

  // bytes binary_message = 2;
  bool has_binary_message() const;
  private:
  bool _internal_has_binary_message() const;
  public:
  void clear_binary_message();
  const std::string& binary_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_binary_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_binary_message();
  PROTOBUF_NODISCARD std::string* release_binary_message();
  void set_allocated_binary_message(std::string* binary_message);
  private:
  const std::string& _internal_binary_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_binary_message(const std::string& value);
  std::string* _internal_mutable_binary_message();
  public:

  void clear_news();
  NewsCase news_case() const;
  // @@protoc_insertion_point(class_scope:protobuf.MessageOfNews)
 private:
  class _Internal;
  void set_has_text_message();
  void set_has_binary_message();

  inline bool has_news() const;
  inline void clear_has_news();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t from_id_;
    int64_t to_id_;
    int64_t team_id_;
    union NewsUnion {
      constexpr NewsUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_message_;
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr binary_message_;
    } news_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageOfMonkeySkill

// int64 team_id = 1;
inline void MessageOfMonkeySkill::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MessageOfMonkeySkill::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MessageOfMonkeySkill::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfMonkeySkill.team_id)
  return _internal_team_id();
}
inline void MessageOfMonkeySkill::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MessageOfMonkeySkill::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfMonkeySkill.team_id)
}

// int64 player_id = 2;
inline void MessageOfMonkeySkill::clear_player_id() {
  _impl_.player_id_ = int64_t{0};
}
inline int64_t MessageOfMonkeySkill::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int64_t MessageOfMonkeySkill::player_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfMonkeySkill.player_id)
  return _internal_player_id();
}
inline void MessageOfMonkeySkill::_internal_set_player_id(int64_t value) {
  
  _impl_.player_id_ = value;
}
inline void MessageOfMonkeySkill::set_player_id(int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfMonkeySkill.player_id)
}

// double angle = 3;
inline void MessageOfMonkeySkill::clear_angle() {
  _impl_.angle_ = 0;
}
inline double MessageOfMonkeySkill::_internal_angle() const {
  return _impl_.angle_;
}
inline double MessageOfMonkeySkill::angle() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfMonkeySkill.angle)
  return _internal_angle();
}
inline void MessageOfMonkeySkill::_internal_set_angle(double value) {
  
  _impl_.angle_ = value;
}
inline void MessageOfMonkeySkill::set_angle(double value) {
  _internal_set_angle(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfMonkeySkill.angle)
}

// -------------------------------------------------------------------

// MessageOfCharacter

// int64 guid = 1;
inline void MessageOfCharacter::clear_guid() {
  _impl_.guid_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_guid() const {
  return _impl_.guid_;
}
inline int64_t MessageOfCharacter::guid() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.guid)
  return _internal_guid();
}
inline void MessageOfCharacter::_internal_set_guid(int64_t value) {
  
  _impl_.guid_ = value;
}
inline void MessageOfCharacter::set_guid(int64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.guid)
}

// int64 team_id = 2;
inline void MessageOfCharacter::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MessageOfCharacter::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.team_id)
  return _internal_team_id();
}
inline void MessageOfCharacter::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MessageOfCharacter::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.team_id)
}

// int64 player_id = 3;
inline void MessageOfCharacter::clear_player_id() {
  _impl_.player_id_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int64_t MessageOfCharacter::player_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.player_id)
  return _internal_player_id();
}
inline void MessageOfCharacter::_internal_set_player_id(int64_t value) {
  
  _impl_.player_id_ = value;
}
inline void MessageOfCharacter::set_player_id(int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.player_id)
}

// .protobuf.CharacterType character_type = 4;
inline void MessageOfCharacter::clear_character_type() {
  _impl_.character_type_ = 0;
}
inline ::protobuf::CharacterType MessageOfCharacter::_internal_character_type() const {
  return static_cast< ::protobuf::CharacterType >(_impl_.character_type_);
}
inline ::protobuf::CharacterType MessageOfCharacter::character_type() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.character_type)
  return _internal_character_type();
}
inline void MessageOfCharacter::_internal_set_character_type(::protobuf::CharacterType value) {
  
  _impl_.character_type_ = value;
}
inline void MessageOfCharacter::set_character_type(::protobuf::CharacterType value) {
  _internal_set_character_type(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.character_type)
}

// .protobuf.CharacterState character_active_state = 5;
inline void MessageOfCharacter::clear_character_active_state() {
  _impl_.character_active_state_ = 0;
}
inline ::protobuf::CharacterState MessageOfCharacter::_internal_character_active_state() const {
  return static_cast< ::protobuf::CharacterState >(_impl_.character_active_state_);
}
inline ::protobuf::CharacterState MessageOfCharacter::character_active_state() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.character_active_state)
  return _internal_character_active_state();
}
inline void MessageOfCharacter::_internal_set_character_active_state(::protobuf::CharacterState value) {
  
  _impl_.character_active_state_ = value;
}
inline void MessageOfCharacter::set_character_active_state(::protobuf::CharacterState value) {
  _internal_set_character_active_state(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.character_active_state)
}

// bool is_blind = 6;
inline void MessageOfCharacter::clear_is_blind() {
  _impl_.is_blind_ = false;
}
inline bool MessageOfCharacter::_internal_is_blind() const {
  return _impl_.is_blind_;
}
inline bool MessageOfCharacter::is_blind() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.is_blind)
  return _internal_is_blind();
}
inline void MessageOfCharacter::_internal_set_is_blind(bool value) {
  
  _impl_.is_blind_ = value;
}
inline void MessageOfCharacter::set_is_blind(bool value) {
  _internal_set_is_blind(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.is_blind)
}

// int64 blind_time = 7;
inline void MessageOfCharacter::clear_blind_time() {
  _impl_.blind_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_blind_time() const {
  return _impl_.blind_time_;
}
inline int64_t MessageOfCharacter::blind_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.blind_time)
  return _internal_blind_time();
}
inline void MessageOfCharacter::_internal_set_blind_time(int64_t value) {
  
  _impl_.blind_time_ = value;
}
inline void MessageOfCharacter::set_blind_time(int64_t value) {
  _internal_set_blind_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.blind_time)
}

// bool is_stunned = 8;
inline void MessageOfCharacter::clear_is_stunned() {
  _impl_.is_stunned_ = false;
}
inline bool MessageOfCharacter::_internal_is_stunned() const {
  return _impl_.is_stunned_;
}
inline bool MessageOfCharacter::is_stunned() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.is_stunned)
  return _internal_is_stunned();
}
inline void MessageOfCharacter::_internal_set_is_stunned(bool value) {
  
  _impl_.is_stunned_ = value;
}
inline void MessageOfCharacter::set_is_stunned(bool value) {
  _internal_set_is_stunned(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.is_stunned)
}

// int64 stunned_time = 9;
inline void MessageOfCharacter::clear_stunned_time() {
  _impl_.stunned_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_stunned_time() const {
  return _impl_.stunned_time_;
}
inline int64_t MessageOfCharacter::stunned_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.stunned_time)
  return _internal_stunned_time();
}
inline void MessageOfCharacter::_internal_set_stunned_time(int64_t value) {
  
  _impl_.stunned_time_ = value;
}
inline void MessageOfCharacter::set_stunned_time(int64_t value) {
  _internal_set_stunned_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.stunned_time)
}

// bool is_invisible = 10;
inline void MessageOfCharacter::clear_is_invisible() {
  _impl_.is_invisible_ = false;
}
inline bool MessageOfCharacter::_internal_is_invisible() const {
  return _impl_.is_invisible_;
}
inline bool MessageOfCharacter::is_invisible() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.is_invisible)
  return _internal_is_invisible();
}
inline void MessageOfCharacter::_internal_set_is_invisible(bool value) {
  
  _impl_.is_invisible_ = value;
}
inline void MessageOfCharacter::set_is_invisible(bool value) {
  _internal_set_is_invisible(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.is_invisible)
}

// int64 invisible_time = 11;
inline void MessageOfCharacter::clear_invisible_time() {
  _impl_.invisible_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_invisible_time() const {
  return _impl_.invisible_time_;
}
inline int64_t MessageOfCharacter::invisible_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.invisible_time)
  return _internal_invisible_time();
}
inline void MessageOfCharacter::_internal_set_invisible_time(int64_t value) {
  
  _impl_.invisible_time_ = value;
}
inline void MessageOfCharacter::set_invisible_time(int64_t value) {
  _internal_set_invisible_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.invisible_time)
}

// bool is_burned = 12;
inline void MessageOfCharacter::clear_is_burned() {
  _impl_.is_burned_ = false;
}
inline bool MessageOfCharacter::_internal_is_burned() const {
  return _impl_.is_burned_;
}
inline bool MessageOfCharacter::is_burned() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.is_burned)
  return _internal_is_burned();
}
inline void MessageOfCharacter::_internal_set_is_burned(bool value) {
  
  _impl_.is_burned_ = value;
}
inline void MessageOfCharacter::set_is_burned(bool value) {
  _internal_set_is_burned(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.is_burned)
}

// int64 burned_time = 13;
inline void MessageOfCharacter::clear_burned_time() {
  _impl_.burned_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_burned_time() const {
  return _impl_.burned_time_;
}
inline int64_t MessageOfCharacter::burned_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.burned_time)
  return _internal_burned_time();
}
inline void MessageOfCharacter::_internal_set_burned_time(int64_t value) {
  
  _impl_.burned_time_ = value;
}
inline void MessageOfCharacter::set_burned_time(int64_t value) {
  _internal_set_burned_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.burned_time)
}

// double harm_cut = 14;
inline void MessageOfCharacter::clear_harm_cut() {
  _impl_.harm_cut_ = 0;
}
inline double MessageOfCharacter::_internal_harm_cut() const {
  return _impl_.harm_cut_;
}
inline double MessageOfCharacter::harm_cut() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.harm_cut)
  return _internal_harm_cut();
}
inline void MessageOfCharacter::_internal_set_harm_cut(double value) {
  
  _impl_.harm_cut_ = value;
}
inline void MessageOfCharacter::set_harm_cut(double value) {
  _internal_set_harm_cut(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.harm_cut)
}

// int64 harm_cut_time = 15;
inline void MessageOfCharacter::clear_harm_cut_time() {
  _impl_.harm_cut_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_harm_cut_time() const {
  return _impl_.harm_cut_time_;
}
inline int64_t MessageOfCharacter::harm_cut_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.harm_cut_time)
  return _internal_harm_cut_time();
}
inline void MessageOfCharacter::_internal_set_harm_cut_time(int64_t value) {
  
  _impl_.harm_cut_time_ = value;
}
inline void MessageOfCharacter::set_harm_cut_time(int64_t value) {
  _internal_set_harm_cut_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.harm_cut_time)
}

// .protobuf.CharacterState character_passive_state = 16;
inline void MessageOfCharacter::clear_character_passive_state() {
  _impl_.character_passive_state_ = 0;
}
inline ::protobuf::CharacterState MessageOfCharacter::_internal_character_passive_state() const {
  return static_cast< ::protobuf::CharacterState >(_impl_.character_passive_state_);
}
inline ::protobuf::CharacterState MessageOfCharacter::character_passive_state() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.character_passive_state)
  return _internal_character_passive_state();
}
inline void MessageOfCharacter::_internal_set_character_passive_state(::protobuf::CharacterState value) {
  
  _impl_.character_passive_state_ = value;
}
inline void MessageOfCharacter::set_character_passive_state(::protobuf::CharacterState value) {
  _internal_set_character_passive_state(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.character_passive_state)
}

// int32 x = 17;
inline void MessageOfCharacter::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t MessageOfCharacter::_internal_x() const {
  return _impl_.x_;
}
inline int32_t MessageOfCharacter::x() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.x)
  return _internal_x();
}
inline void MessageOfCharacter::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void MessageOfCharacter::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.x)
}

// int32 y = 18;
inline void MessageOfCharacter::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t MessageOfCharacter::_internal_y() const {
  return _impl_.y_;
}
inline int32_t MessageOfCharacter::y() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.y)
  return _internal_y();
}
inline void MessageOfCharacter::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void MessageOfCharacter::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.y)
}

// double facing_direction = 19;
inline void MessageOfCharacter::clear_facing_direction() {
  _impl_.facing_direction_ = 0;
}
inline double MessageOfCharacter::_internal_facing_direction() const {
  return _impl_.facing_direction_;
}
inline double MessageOfCharacter::facing_direction() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.facing_direction)
  return _internal_facing_direction();
}
inline void MessageOfCharacter::_internal_set_facing_direction(double value) {
  
  _impl_.facing_direction_ = value;
}
inline void MessageOfCharacter::set_facing_direction(double value) {
  _internal_set_facing_direction(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.facing_direction)
}

// int32 speed = 20;
inline void MessageOfCharacter::clear_speed() {
  _impl_.speed_ = 0;
}
inline int32_t MessageOfCharacter::_internal_speed() const {
  return _impl_.speed_;
}
inline int32_t MessageOfCharacter::speed() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.speed)
  return _internal_speed();
}
inline void MessageOfCharacter::_internal_set_speed(int32_t value) {
  
  _impl_.speed_ = value;
}
inline void MessageOfCharacter::set_speed(int32_t value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.speed)
}

// int32 view_range = 21;
inline void MessageOfCharacter::clear_view_range() {
  _impl_.view_range_ = 0;
}
inline int32_t MessageOfCharacter::_internal_view_range() const {
  return _impl_.view_range_;
}
inline int32_t MessageOfCharacter::view_range() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.view_range)
  return _internal_view_range();
}
inline void MessageOfCharacter::_internal_set_view_range(int32_t value) {
  
  _impl_.view_range_ = value;
}
inline void MessageOfCharacter::set_view_range(int32_t value) {
  _internal_set_view_range(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.view_range)
}

// int32 common_attack = 22;
inline void MessageOfCharacter::clear_common_attack() {
  _impl_.common_attack_ = 0;
}
inline int32_t MessageOfCharacter::_internal_common_attack() const {
  return _impl_.common_attack_;
}
inline int32_t MessageOfCharacter::common_attack() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.common_attack)
  return _internal_common_attack();
}
inline void MessageOfCharacter::_internal_set_common_attack(int32_t value) {
  
  _impl_.common_attack_ = value;
}
inline void MessageOfCharacter::set_common_attack(int32_t value) {
  _internal_set_common_attack(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.common_attack)
}

// int64 common_attack_cd = 23;
inline void MessageOfCharacter::clear_common_attack_cd() {
  _impl_.common_attack_cd_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_common_attack_cd() const {
  return _impl_.common_attack_cd_;
}
inline int64_t MessageOfCharacter::common_attack_cd() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.common_attack_cd)
  return _internal_common_attack_cd();
}
inline void MessageOfCharacter::_internal_set_common_attack_cd(int64_t value) {
  
  _impl_.common_attack_cd_ = value;
}
inline void MessageOfCharacter::set_common_attack_cd(int64_t value) {
  _internal_set_common_attack_cd(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.common_attack_cd)
}

// int32 common_attack_range = 24;
inline void MessageOfCharacter::clear_common_attack_range() {
  _impl_.common_attack_range_ = 0;
}
inline int32_t MessageOfCharacter::_internal_common_attack_range() const {
  return _impl_.common_attack_range_;
}
inline int32_t MessageOfCharacter::common_attack_range() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.common_attack_range)
  return _internal_common_attack_range();
}
inline void MessageOfCharacter::_internal_set_common_attack_range(int32_t value) {
  
  _impl_.common_attack_range_ = value;
}
inline void MessageOfCharacter::set_common_attack_range(int32_t value) {
  _internal_set_common_attack_range(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.common_attack_range)
}

// int64 skill_attack_cd = 25;
inline void MessageOfCharacter::clear_skill_attack_cd() {
  _impl_.skill_attack_cd_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_skill_attack_cd() const {
  return _impl_.skill_attack_cd_;
}
inline int64_t MessageOfCharacter::skill_attack_cd() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.skill_attack_cd)
  return _internal_skill_attack_cd();
}
inline void MessageOfCharacter::_internal_set_skill_attack_cd(int64_t value) {
  
  _impl_.skill_attack_cd_ = value;
}
inline void MessageOfCharacter::set_skill_attack_cd(int64_t value) {
  _internal_set_skill_attack_cd(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.skill_attack_cd)
}

// int32 economy_depletion = 26;
inline void MessageOfCharacter::clear_economy_depletion() {
  _impl_.economy_depletion_ = 0;
}
inline int32_t MessageOfCharacter::_internal_economy_depletion() const {
  return _impl_.economy_depletion_;
}
inline int32_t MessageOfCharacter::economy_depletion() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.economy_depletion)
  return _internal_economy_depletion();
}
inline void MessageOfCharacter::_internal_set_economy_depletion(int32_t value) {
  
  _impl_.economy_depletion_ = value;
}
inline void MessageOfCharacter::set_economy_depletion(int32_t value) {
  _internal_set_economy_depletion(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.economy_depletion)
}

// int32 kill_score = 27;
inline void MessageOfCharacter::clear_kill_score() {
  _impl_.kill_score_ = 0;
}
inline int32_t MessageOfCharacter::_internal_kill_score() const {
  return _impl_.kill_score_;
}
inline int32_t MessageOfCharacter::kill_score() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.kill_score)
  return _internal_kill_score();
}
inline void MessageOfCharacter::_internal_set_kill_score(int32_t value) {
  
  _impl_.kill_score_ = value;
}
inline void MessageOfCharacter::set_kill_score(int32_t value) {
  _internal_set_kill_score(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.kill_score)
}

// int32 hp = 28;
inline void MessageOfCharacter::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t MessageOfCharacter::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t MessageOfCharacter::hp() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.hp)
  return _internal_hp();
}
inline void MessageOfCharacter::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void MessageOfCharacter::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.hp)
}

// int32 shield_equipment = 29;
inline void MessageOfCharacter::clear_shield_equipment() {
  _impl_.shield_equipment_ = 0;
}
inline int32_t MessageOfCharacter::_internal_shield_equipment() const {
  return _impl_.shield_equipment_;
}
inline int32_t MessageOfCharacter::shield_equipment() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.shield_equipment)
  return _internal_shield_equipment();
}
inline void MessageOfCharacter::_internal_set_shield_equipment(int32_t value) {
  
  _impl_.shield_equipment_ = value;
}
inline void MessageOfCharacter::set_shield_equipment(int32_t value) {
  _internal_set_shield_equipment(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.shield_equipment)
}

// int32 shoes_equipment = 30;
inline void MessageOfCharacter::clear_shoes_equipment() {
  _impl_.shoes_equipment_ = 0;
}
inline int32_t MessageOfCharacter::_internal_shoes_equipment() const {
  return _impl_.shoes_equipment_;
}
inline int32_t MessageOfCharacter::shoes_equipment() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.shoes_equipment)
  return _internal_shoes_equipment();
}
inline void MessageOfCharacter::_internal_set_shoes_equipment(int32_t value) {
  
  _impl_.shoes_equipment_ = value;
}
inline void MessageOfCharacter::set_shoes_equipment(int32_t value) {
  _internal_set_shoes_equipment(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.shoes_equipment)
}

// int64 shoes_time = 31;
inline void MessageOfCharacter::clear_shoes_time() {
  _impl_.shoes_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_shoes_time() const {
  return _impl_.shoes_time_;
}
inline int64_t MessageOfCharacter::shoes_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.shoes_time)
  return _internal_shoes_time();
}
inline void MessageOfCharacter::_internal_set_shoes_time(int64_t value) {
  
  _impl_.shoes_time_ = value;
}
inline void MessageOfCharacter::set_shoes_time(int64_t value) {
  _internal_set_shoes_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.shoes_time)
}

// bool is_purified = 32;
inline void MessageOfCharacter::clear_is_purified() {
  _impl_.is_purified_ = false;
}
inline bool MessageOfCharacter::_internal_is_purified() const {
  return _impl_.is_purified_;
}
inline bool MessageOfCharacter::is_purified() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.is_purified)
  return _internal_is_purified();
}
inline void MessageOfCharacter::_internal_set_is_purified(bool value) {
  
  _impl_.is_purified_ = value;
}
inline void MessageOfCharacter::set_is_purified(bool value) {
  _internal_set_is_purified(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.is_purified)
}

// int64 purified_time = 33;
inline void MessageOfCharacter::clear_purified_time() {
  _impl_.purified_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_purified_time() const {
  return _impl_.purified_time_;
}
inline int64_t MessageOfCharacter::purified_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.purified_time)
  return _internal_purified_time();
}
inline void MessageOfCharacter::_internal_set_purified_time(int64_t value) {
  
  _impl_.purified_time_ = value;
}
inline void MessageOfCharacter::set_purified_time(int64_t value) {
  _internal_set_purified_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.purified_time)
}

// bool is_berserk = 34;
inline void MessageOfCharacter::clear_is_berserk() {
  _impl_.is_berserk_ = false;
}
inline bool MessageOfCharacter::_internal_is_berserk() const {
  return _impl_.is_berserk_;
}
inline bool MessageOfCharacter::is_berserk() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.is_berserk)
  return _internal_is_berserk();
}
inline void MessageOfCharacter::_internal_set_is_berserk(bool value) {
  
  _impl_.is_berserk_ = value;
}
inline void MessageOfCharacter::set_is_berserk(bool value) {
  _internal_set_is_berserk(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.is_berserk)
}

// int64 berserk_time = 35;
inline void MessageOfCharacter::clear_berserk_time() {
  _impl_.berserk_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_berserk_time() const {
  return _impl_.berserk_time_;
}
inline int64_t MessageOfCharacter::berserk_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.berserk_time)
  return _internal_berserk_time();
}
inline void MessageOfCharacter::_internal_set_berserk_time(int64_t value) {
  
  _impl_.berserk_time_ = value;
}
inline void MessageOfCharacter::set_berserk_time(int64_t value) {
  _internal_set_berserk_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.berserk_time)
}

// int32 attack_buff_num = 36;
inline void MessageOfCharacter::clear_attack_buff_num() {
  _impl_.attack_buff_num_ = 0;
}
inline int32_t MessageOfCharacter::_internal_attack_buff_num() const {
  return _impl_.attack_buff_num_;
}
inline int32_t MessageOfCharacter::attack_buff_num() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.attack_buff_num)
  return _internal_attack_buff_num();
}
inline void MessageOfCharacter::_internal_set_attack_buff_num(int32_t value) {
  
  _impl_.attack_buff_num_ = value;
}
inline void MessageOfCharacter::set_attack_buff_num(int32_t value) {
  _internal_set_attack_buff_num(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.attack_buff_num)
}

// int64 attack_buff_time = 37;
inline void MessageOfCharacter::clear_attack_buff_time() {
  _impl_.attack_buff_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_attack_buff_time() const {
  return _impl_.attack_buff_time_;
}
inline int64_t MessageOfCharacter::attack_buff_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.attack_buff_time)
  return _internal_attack_buff_time();
}
inline void MessageOfCharacter::_internal_set_attack_buff_time(int64_t value) {
  
  _impl_.attack_buff_time_ = value;
}
inline void MessageOfCharacter::set_attack_buff_time(int64_t value) {
  _internal_set_attack_buff_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.attack_buff_time)
}

// int64 speed_buff_time = 38;
inline void MessageOfCharacter::clear_speed_buff_time() {
  _impl_.speed_buff_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_speed_buff_time() const {
  return _impl_.speed_buff_time_;
}
inline int64_t MessageOfCharacter::speed_buff_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.speed_buff_time)
  return _internal_speed_buff_time();
}
inline void MessageOfCharacter::_internal_set_speed_buff_time(int64_t value) {
  
  _impl_.speed_buff_time_ = value;
}
inline void MessageOfCharacter::set_speed_buff_time(int64_t value) {
  _internal_set_speed_buff_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.speed_buff_time)
}

// int64 vision_buff_time = 39;
inline void MessageOfCharacter::clear_vision_buff_time() {
  _impl_.vision_buff_time_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_vision_buff_time() const {
  return _impl_.vision_buff_time_;
}
inline int64_t MessageOfCharacter::vision_buff_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfCharacter.vision_buff_time)
  return _internal_vision_buff_time();
}
inline void MessageOfCharacter::_internal_set_vision_buff_time(int64_t value) {
  
  _impl_.vision_buff_time_ = value;
}
inline void MessageOfCharacter::set_vision_buff_time(int64_t value) {
  _internal_set_vision_buff_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfCharacter.vision_buff_time)
}

// -------------------------------------------------------------------

// MessageOfBarracks

// int32 x = 1;
inline void MessageOfBarracks::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t MessageOfBarracks::_internal_x() const {
  return _impl_.x_;
}
inline int32_t MessageOfBarracks::x() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfBarracks.x)
  return _internal_x();
}
inline void MessageOfBarracks::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void MessageOfBarracks::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfBarracks.x)
}

// int32 y = 2;
inline void MessageOfBarracks::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t MessageOfBarracks::_internal_y() const {
  return _impl_.y_;
}
inline int32_t MessageOfBarracks::y() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfBarracks.y)
  return _internal_y();
}
inline void MessageOfBarracks::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void MessageOfBarracks::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfBarracks.y)
}

// int32 hp = 3;
inline void MessageOfBarracks::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t MessageOfBarracks::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t MessageOfBarracks::hp() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfBarracks.hp)
  return _internal_hp();
}
inline void MessageOfBarracks::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void MessageOfBarracks::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfBarracks.hp)
}

// int64 team_id = 4;
inline void MessageOfBarracks::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MessageOfBarracks::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MessageOfBarracks::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfBarracks.team_id)
  return _internal_team_id();
}
inline void MessageOfBarracks::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MessageOfBarracks::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfBarracks.team_id)
}

// int32 id = 5;
inline void MessageOfBarracks::clear_id() {
  _impl_.id_ = 0;
}
inline int32_t MessageOfBarracks::_internal_id() const {
  return _impl_.id_;
}
inline int32_t MessageOfBarracks::id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfBarracks.id)
  return _internal_id();
}
inline void MessageOfBarracks::_internal_set_id(int32_t value) {
  
  _impl_.id_ = value;
}
inline void MessageOfBarracks::set_id(int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfBarracks.id)
}

// -------------------------------------------------------------------

// MessageOfSpring

// int32 x = 1;
inline void MessageOfSpring::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t MessageOfSpring::_internal_x() const {
  return _impl_.x_;
}
inline int32_t MessageOfSpring::x() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfSpring.x)
  return _internal_x();
}
inline void MessageOfSpring::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void MessageOfSpring::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfSpring.x)
}

// int32 y = 2;
inline void MessageOfSpring::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t MessageOfSpring::_internal_y() const {
  return _impl_.y_;
}
inline int32_t MessageOfSpring::y() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfSpring.y)
  return _internal_y();
}
inline void MessageOfSpring::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void MessageOfSpring::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfSpring.y)
}

// int32 hp = 3;
inline void MessageOfSpring::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t MessageOfSpring::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t MessageOfSpring::hp() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfSpring.hp)
  return _internal_hp();
}
inline void MessageOfSpring::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void MessageOfSpring::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfSpring.hp)
}

// int64 team_id = 4;
inline void MessageOfSpring::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MessageOfSpring::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MessageOfSpring::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfSpring.team_id)
  return _internal_team_id();
}
inline void MessageOfSpring::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MessageOfSpring::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfSpring.team_id)
}

// int32 id = 5;
inline void MessageOfSpring::clear_id() {
  _impl_.id_ = 0;
}
inline int32_t MessageOfSpring::_internal_id() const {
  return _impl_.id_;
}
inline int32_t MessageOfSpring::id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfSpring.id)
  return _internal_id();
}
inline void MessageOfSpring::_internal_set_id(int32_t value) {
  
  _impl_.id_ = value;
}
inline void MessageOfSpring::set_id(int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfSpring.id)
}

// -------------------------------------------------------------------

// MessageOfFarm

// int32 x = 1;
inline void MessageOfFarm::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t MessageOfFarm::_internal_x() const {
  return _impl_.x_;
}
inline int32_t MessageOfFarm::x() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfFarm.x)
  return _internal_x();
}
inline void MessageOfFarm::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void MessageOfFarm::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfFarm.x)
}

// int32 y = 2;
inline void MessageOfFarm::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t MessageOfFarm::_internal_y() const {
  return _impl_.y_;
}
inline int32_t MessageOfFarm::y() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfFarm.y)
  return _internal_y();
}
inline void MessageOfFarm::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void MessageOfFarm::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfFarm.y)
}

// int32 hp = 3;
inline void MessageOfFarm::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t MessageOfFarm::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t MessageOfFarm::hp() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfFarm.hp)
  return _internal_hp();
}
inline void MessageOfFarm::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void MessageOfFarm::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfFarm.hp)
}

// int64 team_id = 4;
inline void MessageOfFarm::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MessageOfFarm::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MessageOfFarm::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfFarm.team_id)
  return _internal_team_id();
}
inline void MessageOfFarm::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MessageOfFarm::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfFarm.team_id)
}

// int32 id = 5;
inline void MessageOfFarm::clear_id() {
  _impl_.id_ = 0;
}
inline int32_t MessageOfFarm::_internal_id() const {
  return _impl_.id_;
}
inline int32_t MessageOfFarm::id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfFarm.id)
  return _internal_id();
}
inline void MessageOfFarm::_internal_set_id(int32_t value) {
  
  _impl_.id_ = value;
}
inline void MessageOfFarm::set_id(int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfFarm.id)
}

// -------------------------------------------------------------------

// MessageOfTrap

// .protobuf.TrapType trap_type = 1;
inline void MessageOfTrap::clear_trap_type() {
  _impl_.trap_type_ = 0;
}
inline ::protobuf::TrapType MessageOfTrap::_internal_trap_type() const {
  return static_cast< ::protobuf::TrapType >(_impl_.trap_type_);
}
inline ::protobuf::TrapType MessageOfTrap::trap_type() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTrap.trap_type)
  return _internal_trap_type();
}
inline void MessageOfTrap::_internal_set_trap_type(::protobuf::TrapType value) {
  
  _impl_.trap_type_ = value;
}
inline void MessageOfTrap::set_trap_type(::protobuf::TrapType value) {
  _internal_set_trap_type(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTrap.trap_type)
}

// int32 x = 2;
inline void MessageOfTrap::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t MessageOfTrap::_internal_x() const {
  return _impl_.x_;
}
inline int32_t MessageOfTrap::x() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTrap.x)
  return _internal_x();
}
inline void MessageOfTrap::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void MessageOfTrap::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTrap.x)
}

// int32 y = 3;
inline void MessageOfTrap::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t MessageOfTrap::_internal_y() const {
  return _impl_.y_;
}
inline int32_t MessageOfTrap::y() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTrap.y)
  return _internal_y();
}
inline void MessageOfTrap::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void MessageOfTrap::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTrap.y)
}

// int64 team_id = 4;
inline void MessageOfTrap::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MessageOfTrap::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MessageOfTrap::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTrap.team_id)
  return _internal_team_id();
}
inline void MessageOfTrap::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MessageOfTrap::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTrap.team_id)
}

// int32 id = 5;
inline void MessageOfTrap::clear_id() {
  _impl_.id_ = 0;
}
inline int32_t MessageOfTrap::_internal_id() const {
  return _impl_.id_;
}
inline int32_t MessageOfTrap::id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTrap.id)
  return _internal_id();
}
inline void MessageOfTrap::_internal_set_id(int32_t value) {
  
  _impl_.id_ = value;
}
inline void MessageOfTrap::set_id(int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTrap.id)
}

// -------------------------------------------------------------------

// MessageOfEconomyResource

// .protobuf.EconomyResourceType economy_resource_type = 1;
inline void MessageOfEconomyResource::clear_economy_resource_type() {
  _impl_.economy_resource_type_ = 0;
}
inline ::protobuf::EconomyResourceType MessageOfEconomyResource::_internal_economy_resource_type() const {
  return static_cast< ::protobuf::EconomyResourceType >(_impl_.economy_resource_type_);
}
inline ::protobuf::EconomyResourceType MessageOfEconomyResource::economy_resource_type() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfEconomyResource.economy_resource_type)
  return _internal_economy_resource_type();
}
inline void MessageOfEconomyResource::_internal_set_economy_resource_type(::protobuf::EconomyResourceType value) {
  
  _impl_.economy_resource_type_ = value;
}
inline void MessageOfEconomyResource::set_economy_resource_type(::protobuf::EconomyResourceType value) {
  _internal_set_economy_resource_type(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfEconomyResource.economy_resource_type)
}

// .protobuf.EconomyResourceState economy_resource_state = 2;
inline void MessageOfEconomyResource::clear_economy_resource_state() {
  _impl_.economy_resource_state_ = 0;
}
inline ::protobuf::EconomyResourceState MessageOfEconomyResource::_internal_economy_resource_state() const {
  return static_cast< ::protobuf::EconomyResourceState >(_impl_.economy_resource_state_);
}
inline ::protobuf::EconomyResourceState MessageOfEconomyResource::economy_resource_state() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfEconomyResource.economy_resource_state)
  return _internal_economy_resource_state();
}
inline void MessageOfEconomyResource::_internal_set_economy_resource_state(::protobuf::EconomyResourceState value) {
  
  _impl_.economy_resource_state_ = value;
}
inline void MessageOfEconomyResource::set_economy_resource_state(::protobuf::EconomyResourceState value) {
  _internal_set_economy_resource_state(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfEconomyResource.economy_resource_state)
}

// int32 x = 3;
inline void MessageOfEconomyResource::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t MessageOfEconomyResource::_internal_x() const {
  return _impl_.x_;
}
inline int32_t MessageOfEconomyResource::x() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfEconomyResource.x)
  return _internal_x();
}
inline void MessageOfEconomyResource::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void MessageOfEconomyResource::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfEconomyResource.x)
}

// int32 y = 4;
inline void MessageOfEconomyResource::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t MessageOfEconomyResource::_internal_y() const {
  return _impl_.y_;
}
inline int32_t MessageOfEconomyResource::y() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfEconomyResource.y)
  return _internal_y();
}
inline void MessageOfEconomyResource::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void MessageOfEconomyResource::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfEconomyResource.y)
}

// int32 process = 5;
inline void MessageOfEconomyResource::clear_process() {
  _impl_.process_ = 0;
}
inline int32_t MessageOfEconomyResource::_internal_process() const {
  return _impl_.process_;
}
inline int32_t MessageOfEconomyResource::process() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfEconomyResource.process)
  return _internal_process();
}
inline void MessageOfEconomyResource::_internal_set_process(int32_t value) {
  
  _impl_.process_ = value;
}
inline void MessageOfEconomyResource::set_process(int32_t value) {
  _internal_set_process(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfEconomyResource.process)
}

// int32 id = 6;
inline void MessageOfEconomyResource::clear_id() {
  _impl_.id_ = 0;
}
inline int32_t MessageOfEconomyResource::_internal_id() const {
  return _impl_.id_;
}
inline int32_t MessageOfEconomyResource::id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfEconomyResource.id)
  return _internal_id();
}
inline void MessageOfEconomyResource::_internal_set_id(int32_t value) {
  
  _impl_.id_ = value;
}
inline void MessageOfEconomyResource::set_id(int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfEconomyResource.id)
}

// -------------------------------------------------------------------

// MessageOfAdditionResource

// .protobuf.AdditionResourceType addition_resource_type = 1;
inline void MessageOfAdditionResource::clear_addition_resource_type() {
  _impl_.addition_resource_type_ = 0;
}
inline ::protobuf::AdditionResourceType MessageOfAdditionResource::_internal_addition_resource_type() const {
  return static_cast< ::protobuf::AdditionResourceType >(_impl_.addition_resource_type_);
}
inline ::protobuf::AdditionResourceType MessageOfAdditionResource::addition_resource_type() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAdditionResource.addition_resource_type)
  return _internal_addition_resource_type();
}
inline void MessageOfAdditionResource::_internal_set_addition_resource_type(::protobuf::AdditionResourceType value) {
  
  _impl_.addition_resource_type_ = value;
}
inline void MessageOfAdditionResource::set_addition_resource_type(::protobuf::AdditionResourceType value) {
  _internal_set_addition_resource_type(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAdditionResource.addition_resource_type)
}

// .protobuf.AdditionResourceState addition_resource_state = 2;
inline void MessageOfAdditionResource::clear_addition_resource_state() {
  _impl_.addition_resource_state_ = 0;
}
inline ::protobuf::AdditionResourceState MessageOfAdditionResource::_internal_addition_resource_state() const {
  return static_cast< ::protobuf::AdditionResourceState >(_impl_.addition_resource_state_);
}
inline ::protobuf::AdditionResourceState MessageOfAdditionResource::addition_resource_state() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAdditionResource.addition_resource_state)
  return _internal_addition_resource_state();
}
inline void MessageOfAdditionResource::_internal_set_addition_resource_state(::protobuf::AdditionResourceState value) {
  
  _impl_.addition_resource_state_ = value;
}
inline void MessageOfAdditionResource::set_addition_resource_state(::protobuf::AdditionResourceState value) {
  _internal_set_addition_resource_state(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAdditionResource.addition_resource_state)
}

// int32 x = 3;
inline void MessageOfAdditionResource::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t MessageOfAdditionResource::_internal_x() const {
  return _impl_.x_;
}
inline int32_t MessageOfAdditionResource::x() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAdditionResource.x)
  return _internal_x();
}
inline void MessageOfAdditionResource::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void MessageOfAdditionResource::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAdditionResource.x)
}

// int32 y = 4;
inline void MessageOfAdditionResource::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t MessageOfAdditionResource::_internal_y() const {
  return _impl_.y_;
}
inline int32_t MessageOfAdditionResource::y() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAdditionResource.y)
  return _internal_y();
}
inline void MessageOfAdditionResource::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void MessageOfAdditionResource::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAdditionResource.y)
}

// int32 hp = 5;
inline void MessageOfAdditionResource::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t MessageOfAdditionResource::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t MessageOfAdditionResource::hp() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAdditionResource.hp)
  return _internal_hp();
}
inline void MessageOfAdditionResource::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void MessageOfAdditionResource::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAdditionResource.hp)
}

// int32 id = 6;
inline void MessageOfAdditionResource::clear_id() {
  _impl_.id_ = 0;
}
inline int32_t MessageOfAdditionResource::_internal_id() const {
  return _impl_.id_;
}
inline int32_t MessageOfAdditionResource::id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAdditionResource.id)
  return _internal_id();
}
inline void MessageOfAdditionResource::_internal_set_id(int32_t value) {
  
  _impl_.id_ = value;
}
inline void MessageOfAdditionResource::set_id(int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAdditionResource.id)
}

// -------------------------------------------------------------------

// MessageOfMap_Row

// repeated .protobuf.PlaceType cols = 1;
inline int MessageOfMap_Row::_internal_cols_size() const {
  return _impl_.cols_.size();
}
inline int MessageOfMap_Row::cols_size() const {
  return _internal_cols_size();
}
inline void MessageOfMap_Row::clear_cols() {
  _impl_.cols_.Clear();
}
inline ::protobuf::PlaceType MessageOfMap_Row::_internal_cols(int index) const {
  return static_cast< ::protobuf::PlaceType >(_impl_.cols_.Get(index));
}
inline ::protobuf::PlaceType MessageOfMap_Row::cols(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.Row.cols)
  return _internal_cols(index);
}
inline void MessageOfMap_Row::set_cols(int index, ::protobuf::PlaceType value) {
  _impl_.cols_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfMap.Row.cols)
}
inline void MessageOfMap_Row::_internal_add_cols(::protobuf::PlaceType value) {
  _impl_.cols_.Add(value);
}
inline void MessageOfMap_Row::add_cols(::protobuf::PlaceType value) {
  _internal_add_cols(value);
  // @@protoc_insertion_point(field_add:protobuf.MessageOfMap.Row.cols)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
MessageOfMap_Row::cols() const {
  // @@protoc_insertion_point(field_list:protobuf.MessageOfMap.Row.cols)
  return _impl_.cols_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
MessageOfMap_Row::_internal_mutable_cols() {
  return &_impl_.cols_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
MessageOfMap_Row::mutable_cols() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfMap.Row.cols)
  return _internal_mutable_cols();
}

// -------------------------------------------------------------------

// MessageOfMap

// uint32 height = 1;
inline void MessageOfMap::clear_height() {
  _impl_.height_ = 0u;
}
inline uint32_t MessageOfMap::_internal_height() const {
  return _impl_.height_;
}
inline uint32_t MessageOfMap::height() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.height)
  return _internal_height();
}
inline void MessageOfMap::_internal_set_height(uint32_t value) {
  
  _impl_.height_ = value;
}
inline void MessageOfMap::set_height(uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfMap.height)
}

// uint32 width = 2;
inline void MessageOfMap::clear_width() {
  _impl_.width_ = 0u;
}
inline uint32_t MessageOfMap::_internal_width() const {
  return _impl_.width_;
}
inline uint32_t MessageOfMap::width() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.width)
  return _internal_width();
}
inline void MessageOfMap::_internal_set_width(uint32_t value) {
  
  _impl_.width_ = value;
}
inline void MessageOfMap::set_width(uint32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfMap.width)
}

// repeated .protobuf.MessageOfMap.Row rows = 3;
inline int MessageOfMap::_internal_rows_size() const {
  return _impl_.rows_.size();
}
inline int MessageOfMap::rows_size() const {
  return _internal_rows_size();
}
inline void MessageOfMap::clear_rows() {
  _impl_.rows_.Clear();
}
inline ::protobuf::MessageOfMap_Row* MessageOfMap::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfMap.rows)
  return _impl_.rows_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfMap_Row >*
MessageOfMap::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfMap.rows)
  return &_impl_.rows_;
}
inline const ::protobuf::MessageOfMap_Row& MessageOfMap::_internal_rows(int index) const {
  return _impl_.rows_.Get(index);
}
inline const ::protobuf::MessageOfMap_Row& MessageOfMap::rows(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.rows)
  return _internal_rows(index);
}
inline ::protobuf::MessageOfMap_Row* MessageOfMap::_internal_add_rows() {
  return _impl_.rows_.Add();
}
inline ::protobuf::MessageOfMap_Row* MessageOfMap::add_rows() {
  ::protobuf::MessageOfMap_Row* _add = _internal_add_rows();
  // @@protoc_insertion_point(field_add:protobuf.MessageOfMap.rows)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfMap_Row >&
MessageOfMap::rows() const {
  // @@protoc_insertion_point(field_list:protobuf.MessageOfMap.rows)
  return _impl_.rows_;
}

// -------------------------------------------------------------------

// MessageOfTeam

// int64 team_id = 1;
inline void MessageOfTeam::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MessageOfTeam::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MessageOfTeam::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTeam.team_id)
  return _internal_team_id();
}
inline void MessageOfTeam::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MessageOfTeam::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTeam.team_id)
}

// int64 player_id = 2;
inline void MessageOfTeam::clear_player_id() {
  _impl_.player_id_ = int64_t{0};
}
inline int64_t MessageOfTeam::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int64_t MessageOfTeam::player_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTeam.player_id)
  return _internal_player_id();
}
inline void MessageOfTeam::_internal_set_player_id(int64_t value) {
  
  _impl_.player_id_ = value;
}
inline void MessageOfTeam::set_player_id(int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTeam.player_id)
}

// int64 score = 3;
inline void MessageOfTeam::clear_score() {
  _impl_.score_ = int64_t{0};
}
inline int64_t MessageOfTeam::_internal_score() const {
  return _impl_.score_;
}
inline int64_t MessageOfTeam::score() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTeam.score)
  return _internal_score();
}
inline void MessageOfTeam::_internal_set_score(int64_t value) {
  
  _impl_.score_ = value;
}
inline void MessageOfTeam::set_score(int64_t value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTeam.score)
}

// int64 energy = 4;
inline void MessageOfTeam::clear_energy() {
  _impl_.energy_ = int64_t{0};
}
inline int64_t MessageOfTeam::_internal_energy() const {
  return _impl_.energy_;
}
inline int64_t MessageOfTeam::energy() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfTeam.energy)
  return _internal_energy();
}
inline void MessageOfTeam::_internal_set_energy(int64_t value) {
  
  _impl_.energy_ = value;
}
inline void MessageOfTeam::set_energy(int64_t value) {
  _internal_set_energy(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfTeam.energy)
}

// -------------------------------------------------------------------

// MessageOfObj

// .protobuf.MessageOfCharacter character_message = 1;
inline bool MessageOfObj::_internal_has_character_message() const {
  return message_of_obj_case() == kCharacterMessage;
}
inline bool MessageOfObj::has_character_message() const {
  return _internal_has_character_message();
}
inline void MessageOfObj::set_has_character_message() {
  _impl_._oneof_case_[0] = kCharacterMessage;
}
inline void MessageOfObj::clear_character_message() {
  if (_internal_has_character_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.character_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfCharacter* MessageOfObj::release_character_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.character_message)
  if (_internal_has_character_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfCharacter* temp = _impl_.message_of_obj_.character_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.character_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfCharacter& MessageOfObj::_internal_character_message() const {
  return _internal_has_character_message()
      ? *_impl_.message_of_obj_.character_message_
      : reinterpret_cast< ::protobuf::MessageOfCharacter&>(::protobuf::_MessageOfCharacter_default_instance_);
}
inline const ::protobuf::MessageOfCharacter& MessageOfObj::character_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.character_message)
  return _internal_character_message();
}
inline ::protobuf::MessageOfCharacter* MessageOfObj::unsafe_arena_release_character_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.character_message)
  if (_internal_has_character_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfCharacter* temp = _impl_.message_of_obj_.character_message_;
    _impl_.message_of_obj_.character_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_character_message(::protobuf::MessageOfCharacter* character_message) {
  clear_message_of_obj();
  if (character_message) {
    set_has_character_message();
    _impl_.message_of_obj_.character_message_ = character_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.character_message)
}
inline ::protobuf::MessageOfCharacter* MessageOfObj::_internal_mutable_character_message() {
  if (!_internal_has_character_message()) {
    clear_message_of_obj();
    set_has_character_message();
    _impl_.message_of_obj_.character_message_ = CreateMaybeMessage< ::protobuf::MessageOfCharacter >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.character_message_;
}
inline ::protobuf::MessageOfCharacter* MessageOfObj::mutable_character_message() {
  ::protobuf::MessageOfCharacter* _msg = _internal_mutable_character_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.character_message)
  return _msg;
}

// .protobuf.MessageOfBarracks barracks_message = 2;
inline bool MessageOfObj::_internal_has_barracks_message() const {
  return message_of_obj_case() == kBarracksMessage;
}
inline bool MessageOfObj::has_barracks_message() const {
  return _internal_has_barracks_message();
}
inline void MessageOfObj::set_has_barracks_message() {
  _impl_._oneof_case_[0] = kBarracksMessage;
}
inline void MessageOfObj::clear_barracks_message() {
  if (_internal_has_barracks_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.barracks_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfBarracks* MessageOfObj::release_barracks_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.barracks_message)
  if (_internal_has_barracks_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfBarracks* temp = _impl_.message_of_obj_.barracks_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.barracks_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfBarracks& MessageOfObj::_internal_barracks_message() const {
  return _internal_has_barracks_message()
      ? *_impl_.message_of_obj_.barracks_message_
      : reinterpret_cast< ::protobuf::MessageOfBarracks&>(::protobuf::_MessageOfBarracks_default_instance_);
}
inline const ::protobuf::MessageOfBarracks& MessageOfObj::barracks_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.barracks_message)
  return _internal_barracks_message();
}
inline ::protobuf::MessageOfBarracks* MessageOfObj::unsafe_arena_release_barracks_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.barracks_message)
  if (_internal_has_barracks_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfBarracks* temp = _impl_.message_of_obj_.barracks_message_;
    _impl_.message_of_obj_.barracks_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_barracks_message(::protobuf::MessageOfBarracks* barracks_message) {
  clear_message_of_obj();
  if (barracks_message) {
    set_has_barracks_message();
    _impl_.message_of_obj_.barracks_message_ = barracks_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.barracks_message)
}
inline ::protobuf::MessageOfBarracks* MessageOfObj::_internal_mutable_barracks_message() {
  if (!_internal_has_barracks_message()) {
    clear_message_of_obj();
    set_has_barracks_message();
    _impl_.message_of_obj_.barracks_message_ = CreateMaybeMessage< ::protobuf::MessageOfBarracks >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.barracks_message_;
}
inline ::protobuf::MessageOfBarracks* MessageOfObj::mutable_barracks_message() {
  ::protobuf::MessageOfBarracks* _msg = _internal_mutable_barracks_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.barracks_message)
  return _msg;
}

// .protobuf.MessageOfSpring spring_message = 3;
inline bool MessageOfObj::_internal_has_spring_message() const {
  return message_of_obj_case() == kSpringMessage;
}
inline bool MessageOfObj::has_spring_message() const {
  return _internal_has_spring_message();
}
inline void MessageOfObj::set_has_spring_message() {
  _impl_._oneof_case_[0] = kSpringMessage;
}
inline void MessageOfObj::clear_spring_message() {
  if (_internal_has_spring_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.spring_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfSpring* MessageOfObj::release_spring_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.spring_message)
  if (_internal_has_spring_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfSpring* temp = _impl_.message_of_obj_.spring_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.spring_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfSpring& MessageOfObj::_internal_spring_message() const {
  return _internal_has_spring_message()
      ? *_impl_.message_of_obj_.spring_message_
      : reinterpret_cast< ::protobuf::MessageOfSpring&>(::protobuf::_MessageOfSpring_default_instance_);
}
inline const ::protobuf::MessageOfSpring& MessageOfObj::spring_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.spring_message)
  return _internal_spring_message();
}
inline ::protobuf::MessageOfSpring* MessageOfObj::unsafe_arena_release_spring_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.spring_message)
  if (_internal_has_spring_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfSpring* temp = _impl_.message_of_obj_.spring_message_;
    _impl_.message_of_obj_.spring_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_spring_message(::protobuf::MessageOfSpring* spring_message) {
  clear_message_of_obj();
  if (spring_message) {
    set_has_spring_message();
    _impl_.message_of_obj_.spring_message_ = spring_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.spring_message)
}
inline ::protobuf::MessageOfSpring* MessageOfObj::_internal_mutable_spring_message() {
  if (!_internal_has_spring_message()) {
    clear_message_of_obj();
    set_has_spring_message();
    _impl_.message_of_obj_.spring_message_ = CreateMaybeMessage< ::protobuf::MessageOfSpring >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.spring_message_;
}
inline ::protobuf::MessageOfSpring* MessageOfObj::mutable_spring_message() {
  ::protobuf::MessageOfSpring* _msg = _internal_mutable_spring_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.spring_message)
  return _msg;
}

// .protobuf.MessageOfFarm farm_message = 4;
inline bool MessageOfObj::_internal_has_farm_message() const {
  return message_of_obj_case() == kFarmMessage;
}
inline bool MessageOfObj::has_farm_message() const {
  return _internal_has_farm_message();
}
inline void MessageOfObj::set_has_farm_message() {
  _impl_._oneof_case_[0] = kFarmMessage;
}
inline void MessageOfObj::clear_farm_message() {
  if (_internal_has_farm_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.farm_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfFarm* MessageOfObj::release_farm_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.farm_message)
  if (_internal_has_farm_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfFarm* temp = _impl_.message_of_obj_.farm_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.farm_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfFarm& MessageOfObj::_internal_farm_message() const {
  return _internal_has_farm_message()
      ? *_impl_.message_of_obj_.farm_message_
      : reinterpret_cast< ::protobuf::MessageOfFarm&>(::protobuf::_MessageOfFarm_default_instance_);
}
inline const ::protobuf::MessageOfFarm& MessageOfObj::farm_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.farm_message)
  return _internal_farm_message();
}
inline ::protobuf::MessageOfFarm* MessageOfObj::unsafe_arena_release_farm_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.farm_message)
  if (_internal_has_farm_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfFarm* temp = _impl_.message_of_obj_.farm_message_;
    _impl_.message_of_obj_.farm_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_farm_message(::protobuf::MessageOfFarm* farm_message) {
  clear_message_of_obj();
  if (farm_message) {
    set_has_farm_message();
    _impl_.message_of_obj_.farm_message_ = farm_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.farm_message)
}
inline ::protobuf::MessageOfFarm* MessageOfObj::_internal_mutable_farm_message() {
  if (!_internal_has_farm_message()) {
    clear_message_of_obj();
    set_has_farm_message();
    _impl_.message_of_obj_.farm_message_ = CreateMaybeMessage< ::protobuf::MessageOfFarm >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.farm_message_;
}
inline ::protobuf::MessageOfFarm* MessageOfObj::mutable_farm_message() {
  ::protobuf::MessageOfFarm* _msg = _internal_mutable_farm_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.farm_message)
  return _msg;
}

// .protobuf.MessageOfTrap trap_message = 5;
inline bool MessageOfObj::_internal_has_trap_message() const {
  return message_of_obj_case() == kTrapMessage;
}
inline bool MessageOfObj::has_trap_message() const {
  return _internal_has_trap_message();
}
inline void MessageOfObj::set_has_trap_message() {
  _impl_._oneof_case_[0] = kTrapMessage;
}
inline void MessageOfObj::clear_trap_message() {
  if (_internal_has_trap_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.trap_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfTrap* MessageOfObj::release_trap_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.trap_message)
  if (_internal_has_trap_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfTrap* temp = _impl_.message_of_obj_.trap_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.trap_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfTrap& MessageOfObj::_internal_trap_message() const {
  return _internal_has_trap_message()
      ? *_impl_.message_of_obj_.trap_message_
      : reinterpret_cast< ::protobuf::MessageOfTrap&>(::protobuf::_MessageOfTrap_default_instance_);
}
inline const ::protobuf::MessageOfTrap& MessageOfObj::trap_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.trap_message)
  return _internal_trap_message();
}
inline ::protobuf::MessageOfTrap* MessageOfObj::unsafe_arena_release_trap_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.trap_message)
  if (_internal_has_trap_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfTrap* temp = _impl_.message_of_obj_.trap_message_;
    _impl_.message_of_obj_.trap_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_trap_message(::protobuf::MessageOfTrap* trap_message) {
  clear_message_of_obj();
  if (trap_message) {
    set_has_trap_message();
    _impl_.message_of_obj_.trap_message_ = trap_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.trap_message)
}
inline ::protobuf::MessageOfTrap* MessageOfObj::_internal_mutable_trap_message() {
  if (!_internal_has_trap_message()) {
    clear_message_of_obj();
    set_has_trap_message();
    _impl_.message_of_obj_.trap_message_ = CreateMaybeMessage< ::protobuf::MessageOfTrap >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.trap_message_;
}
inline ::protobuf::MessageOfTrap* MessageOfObj::mutable_trap_message() {
  ::protobuf::MessageOfTrap* _msg = _internal_mutable_trap_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.trap_message)
  return _msg;
}

// .protobuf.MessageOfEconomyResource economy_resource_message = 6;
inline bool MessageOfObj::_internal_has_economy_resource_message() const {
  return message_of_obj_case() == kEconomyResourceMessage;
}
inline bool MessageOfObj::has_economy_resource_message() const {
  return _internal_has_economy_resource_message();
}
inline void MessageOfObj::set_has_economy_resource_message() {
  _impl_._oneof_case_[0] = kEconomyResourceMessage;
}
inline void MessageOfObj::clear_economy_resource_message() {
  if (_internal_has_economy_resource_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.economy_resource_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfEconomyResource* MessageOfObj::release_economy_resource_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.economy_resource_message)
  if (_internal_has_economy_resource_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfEconomyResource* temp = _impl_.message_of_obj_.economy_resource_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.economy_resource_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfEconomyResource& MessageOfObj::_internal_economy_resource_message() const {
  return _internal_has_economy_resource_message()
      ? *_impl_.message_of_obj_.economy_resource_message_
      : reinterpret_cast< ::protobuf::MessageOfEconomyResource&>(::protobuf::_MessageOfEconomyResource_default_instance_);
}
inline const ::protobuf::MessageOfEconomyResource& MessageOfObj::economy_resource_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.economy_resource_message)
  return _internal_economy_resource_message();
}
inline ::protobuf::MessageOfEconomyResource* MessageOfObj::unsafe_arena_release_economy_resource_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.economy_resource_message)
  if (_internal_has_economy_resource_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfEconomyResource* temp = _impl_.message_of_obj_.economy_resource_message_;
    _impl_.message_of_obj_.economy_resource_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_economy_resource_message(::protobuf::MessageOfEconomyResource* economy_resource_message) {
  clear_message_of_obj();
  if (economy_resource_message) {
    set_has_economy_resource_message();
    _impl_.message_of_obj_.economy_resource_message_ = economy_resource_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.economy_resource_message)
}
inline ::protobuf::MessageOfEconomyResource* MessageOfObj::_internal_mutable_economy_resource_message() {
  if (!_internal_has_economy_resource_message()) {
    clear_message_of_obj();
    set_has_economy_resource_message();
    _impl_.message_of_obj_.economy_resource_message_ = CreateMaybeMessage< ::protobuf::MessageOfEconomyResource >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.economy_resource_message_;
}
inline ::protobuf::MessageOfEconomyResource* MessageOfObj::mutable_economy_resource_message() {
  ::protobuf::MessageOfEconomyResource* _msg = _internal_mutable_economy_resource_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.economy_resource_message)
  return _msg;
}

// .protobuf.MessageOfAdditionResource addition_resource_message = 7;
inline bool MessageOfObj::_internal_has_addition_resource_message() const {
  return message_of_obj_case() == kAdditionResourceMessage;
}
inline bool MessageOfObj::has_addition_resource_message() const {
  return _internal_has_addition_resource_message();
}
inline void MessageOfObj::set_has_addition_resource_message() {
  _impl_._oneof_case_[0] = kAdditionResourceMessage;
}
inline void MessageOfObj::clear_addition_resource_message() {
  if (_internal_has_addition_resource_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.addition_resource_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfAdditionResource* MessageOfObj::release_addition_resource_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.addition_resource_message)
  if (_internal_has_addition_resource_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfAdditionResource* temp = _impl_.message_of_obj_.addition_resource_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.addition_resource_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfAdditionResource& MessageOfObj::_internal_addition_resource_message() const {
  return _internal_has_addition_resource_message()
      ? *_impl_.message_of_obj_.addition_resource_message_
      : reinterpret_cast< ::protobuf::MessageOfAdditionResource&>(::protobuf::_MessageOfAdditionResource_default_instance_);
}
inline const ::protobuf::MessageOfAdditionResource& MessageOfObj::addition_resource_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.addition_resource_message)
  return _internal_addition_resource_message();
}
inline ::protobuf::MessageOfAdditionResource* MessageOfObj::unsafe_arena_release_addition_resource_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.addition_resource_message)
  if (_internal_has_addition_resource_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfAdditionResource* temp = _impl_.message_of_obj_.addition_resource_message_;
    _impl_.message_of_obj_.addition_resource_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_addition_resource_message(::protobuf::MessageOfAdditionResource* addition_resource_message) {
  clear_message_of_obj();
  if (addition_resource_message) {
    set_has_addition_resource_message();
    _impl_.message_of_obj_.addition_resource_message_ = addition_resource_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.addition_resource_message)
}
inline ::protobuf::MessageOfAdditionResource* MessageOfObj::_internal_mutable_addition_resource_message() {
  if (!_internal_has_addition_resource_message()) {
    clear_message_of_obj();
    set_has_addition_resource_message();
    _impl_.message_of_obj_.addition_resource_message_ = CreateMaybeMessage< ::protobuf::MessageOfAdditionResource >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.addition_resource_message_;
}
inline ::protobuf::MessageOfAdditionResource* MessageOfObj::mutable_addition_resource_message() {
  ::protobuf::MessageOfAdditionResource* _msg = _internal_mutable_addition_resource_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.addition_resource_message)
  return _msg;
}

// .protobuf.MessageOfMap map_message = 8;
inline bool MessageOfObj::_internal_has_map_message() const {
  return message_of_obj_case() == kMapMessage;
}
inline bool MessageOfObj::has_map_message() const {
  return _internal_has_map_message();
}
inline void MessageOfObj::set_has_map_message() {
  _impl_._oneof_case_[0] = kMapMessage;
}
inline void MessageOfObj::clear_map_message() {
  if (_internal_has_map_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.map_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfMap* MessageOfObj::release_map_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.map_message)
  if (_internal_has_map_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfMap* temp = _impl_.message_of_obj_.map_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.map_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfMap& MessageOfObj::_internal_map_message() const {
  return _internal_has_map_message()
      ? *_impl_.message_of_obj_.map_message_
      : reinterpret_cast< ::protobuf::MessageOfMap&>(::protobuf::_MessageOfMap_default_instance_);
}
inline const ::protobuf::MessageOfMap& MessageOfObj::map_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.map_message)
  return _internal_map_message();
}
inline ::protobuf::MessageOfMap* MessageOfObj::unsafe_arena_release_map_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.map_message)
  if (_internal_has_map_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfMap* temp = _impl_.message_of_obj_.map_message_;
    _impl_.message_of_obj_.map_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_map_message(::protobuf::MessageOfMap* map_message) {
  clear_message_of_obj();
  if (map_message) {
    set_has_map_message();
    _impl_.message_of_obj_.map_message_ = map_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.map_message)
}
inline ::protobuf::MessageOfMap* MessageOfObj::_internal_mutable_map_message() {
  if (!_internal_has_map_message()) {
    clear_message_of_obj();
    set_has_map_message();
    _impl_.message_of_obj_.map_message_ = CreateMaybeMessage< ::protobuf::MessageOfMap >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.map_message_;
}
inline ::protobuf::MessageOfMap* MessageOfObj::mutable_map_message() {
  ::protobuf::MessageOfMap* _msg = _internal_mutable_map_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.map_message)
  return _msg;
}

// .protobuf.MessageOfNews news_message = 9;
inline bool MessageOfObj::_internal_has_news_message() const {
  return message_of_obj_case() == kNewsMessage;
}
inline bool MessageOfObj::has_news_message() const {
  return _internal_has_news_message();
}
inline void MessageOfObj::set_has_news_message() {
  _impl_._oneof_case_[0] = kNewsMessage;
}
inline void MessageOfObj::clear_news_message() {
  if (_internal_has_news_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.news_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfNews* MessageOfObj::release_news_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.news_message)
  if (_internal_has_news_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfNews* temp = _impl_.message_of_obj_.news_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.news_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfNews& MessageOfObj::_internal_news_message() const {
  return _internal_has_news_message()
      ? *_impl_.message_of_obj_.news_message_
      : reinterpret_cast< ::protobuf::MessageOfNews&>(::protobuf::_MessageOfNews_default_instance_);
}
inline const ::protobuf::MessageOfNews& MessageOfObj::news_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.news_message)
  return _internal_news_message();
}
inline ::protobuf::MessageOfNews* MessageOfObj::unsafe_arena_release_news_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.news_message)
  if (_internal_has_news_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfNews* temp = _impl_.message_of_obj_.news_message_;
    _impl_.message_of_obj_.news_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_news_message(::protobuf::MessageOfNews* news_message) {
  clear_message_of_obj();
  if (news_message) {
    set_has_news_message();
    _impl_.message_of_obj_.news_message_ = news_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.news_message)
}
inline ::protobuf::MessageOfNews* MessageOfObj::_internal_mutable_news_message() {
  if (!_internal_has_news_message()) {
    clear_message_of_obj();
    set_has_news_message();
    _impl_.message_of_obj_.news_message_ = CreateMaybeMessage< ::protobuf::MessageOfNews >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.news_message_;
}
inline ::protobuf::MessageOfNews* MessageOfObj::mutable_news_message() {
  ::protobuf::MessageOfNews* _msg = _internal_mutable_news_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.news_message)
  return _msg;
}

// .protobuf.MessageOfTeam team_message = 10;
inline bool MessageOfObj::_internal_has_team_message() const {
  return message_of_obj_case() == kTeamMessage;
}
inline bool MessageOfObj::has_team_message() const {
  return _internal_has_team_message();
}
inline void MessageOfObj::set_has_team_message() {
  _impl_._oneof_case_[0] = kTeamMessage;
}
inline void MessageOfObj::clear_team_message() {
  if (_internal_has_team_message()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.message_of_obj_.team_message_;
    }
    clear_has_message_of_obj();
  }
}
inline ::protobuf::MessageOfTeam* MessageOfObj::release_team_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.team_message)
  if (_internal_has_team_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfTeam* temp = _impl_.message_of_obj_.team_message_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_of_obj_.team_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf::MessageOfTeam& MessageOfObj::_internal_team_message() const {
  return _internal_has_team_message()
      ? *_impl_.message_of_obj_.team_message_
      : reinterpret_cast< ::protobuf::MessageOfTeam&>(::protobuf::_MessageOfTeam_default_instance_);
}
inline const ::protobuf::MessageOfTeam& MessageOfObj::team_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.team_message)
  return _internal_team_message();
}
inline ::protobuf::MessageOfTeam* MessageOfObj::unsafe_arena_release_team_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.team_message)
  if (_internal_has_team_message()) {
    clear_has_message_of_obj();
    ::protobuf::MessageOfTeam* temp = _impl_.message_of_obj_.team_message_;
    _impl_.message_of_obj_.team_message_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageOfObj::unsafe_arena_set_allocated_team_message(::protobuf::MessageOfTeam* team_message) {
  clear_message_of_obj();
  if (team_message) {
    set_has_team_message();
    _impl_.message_of_obj_.team_message_ = team_message;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.team_message)
}
inline ::protobuf::MessageOfTeam* MessageOfObj::_internal_mutable_team_message() {
  if (!_internal_has_team_message()) {
    clear_message_of_obj();
    set_has_team_message();
    _impl_.message_of_obj_.team_message_ = CreateMaybeMessage< ::protobuf::MessageOfTeam >(GetArenaForAllocation());
  }
  return _impl_.message_of_obj_.team_message_;
}
inline ::protobuf::MessageOfTeam* MessageOfObj::mutable_team_message() {
  ::protobuf::MessageOfTeam* _msg = _internal_mutable_team_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.team_message)
  return _msg;
}

inline bool MessageOfObj::has_message_of_obj() const {
  return message_of_obj_case() != MESSAGE_OF_OBJ_NOT_SET;
}
inline void MessageOfObj::clear_has_message_of_obj() {
  _impl_._oneof_case_[0] = MESSAGE_OF_OBJ_NOT_SET;
}
inline MessageOfObj::MessageOfObjCase MessageOfObj::message_of_obj_case() const {
  return MessageOfObj::MessageOfObjCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// MessageOfAll

// int32 game_time = 1;
inline void MessageOfAll::clear_game_time() {
  _impl_.game_time_ = 0;
}
inline int32_t MessageOfAll::_internal_game_time() const {
  return _impl_.game_time_;
}
inline int32_t MessageOfAll::game_time() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.game_time)
  return _internal_game_time();
}
inline void MessageOfAll::_internal_set_game_time(int32_t value) {
  
  _impl_.game_time_ = value;
}
inline void MessageOfAll::set_game_time(int32_t value) {
  _internal_set_game_time(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.game_time)
}

// int32 buddhists_team_score = 2;
inline void MessageOfAll::clear_buddhists_team_score() {
  _impl_.buddhists_team_score_ = 0;
}
inline int32_t MessageOfAll::_internal_buddhists_team_score() const {
  return _impl_.buddhists_team_score_;
}
inline int32_t MessageOfAll::buddhists_team_score() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.buddhists_team_score)
  return _internal_buddhists_team_score();
}
inline void MessageOfAll::_internal_set_buddhists_team_score(int32_t value) {
  
  _impl_.buddhists_team_score_ = value;
}
inline void MessageOfAll::set_buddhists_team_score(int32_t value) {
  _internal_set_buddhists_team_score(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.buddhists_team_score)
}

// int32 monsters_team_score = 3;
inline void MessageOfAll::clear_monsters_team_score() {
  _impl_.monsters_team_score_ = 0;
}
inline int32_t MessageOfAll::_internal_monsters_team_score() const {
  return _impl_.monsters_team_score_;
}
inline int32_t MessageOfAll::monsters_team_score() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.monsters_team_score)
  return _internal_monsters_team_score();
}
inline void MessageOfAll::_internal_set_monsters_team_score(int32_t value) {
  
  _impl_.monsters_team_score_ = value;
}
inline void MessageOfAll::set_monsters_team_score(int32_t value) {
  _internal_set_monsters_team_score(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.monsters_team_score)
}

// int32 buddhists_team_economy = 4;
inline void MessageOfAll::clear_buddhists_team_economy() {
  _impl_.buddhists_team_economy_ = 0;
}
inline int32_t MessageOfAll::_internal_buddhists_team_economy() const {
  return _impl_.buddhists_team_economy_;
}
inline int32_t MessageOfAll::buddhists_team_economy() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.buddhists_team_economy)
  return _internal_buddhists_team_economy();
}
inline void MessageOfAll::_internal_set_buddhists_team_economy(int32_t value) {
  
  _impl_.buddhists_team_economy_ = value;
}
inline void MessageOfAll::set_buddhists_team_economy(int32_t value) {
  _internal_set_buddhists_team_economy(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.buddhists_team_economy)
}

// int32 monsters_team_economy = 5;
inline void MessageOfAll::clear_monsters_team_economy() {
  _impl_.monsters_team_economy_ = 0;
}
inline int32_t MessageOfAll::_internal_monsters_team_economy() const {
  return _impl_.monsters_team_economy_;
}
inline int32_t MessageOfAll::monsters_team_economy() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.monsters_team_economy)
  return _internal_monsters_team_economy();
}
inline void MessageOfAll::_internal_set_monsters_team_economy(int32_t value) {
  
  _impl_.monsters_team_economy_ = value;
}
inline void MessageOfAll::set_monsters_team_economy(int32_t value) {
  _internal_set_monsters_team_economy(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.monsters_team_economy)
}

// int32 buddhists_hero_hp = 6;
inline void MessageOfAll::clear_buddhists_hero_hp() {
  _impl_.buddhists_hero_hp_ = 0;
}
inline int32_t MessageOfAll::_internal_buddhists_hero_hp() const {
  return _impl_.buddhists_hero_hp_;
}
inline int32_t MessageOfAll::buddhists_hero_hp() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.buddhists_hero_hp)
  return _internal_buddhists_hero_hp();
}
inline void MessageOfAll::_internal_set_buddhists_hero_hp(int32_t value) {
  
  _impl_.buddhists_hero_hp_ = value;
}
inline void MessageOfAll::set_buddhists_hero_hp(int32_t value) {
  _internal_set_buddhists_hero_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.buddhists_hero_hp)
}

// int32 monsters_hero_hp = 7;
inline void MessageOfAll::clear_monsters_hero_hp() {
  _impl_.monsters_hero_hp_ = 0;
}
inline int32_t MessageOfAll::_internal_monsters_hero_hp() const {
  return _impl_.monsters_hero_hp_;
}
inline int32_t MessageOfAll::monsters_hero_hp() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.monsters_hero_hp)
  return _internal_monsters_hero_hp();
}
inline void MessageOfAll::_internal_set_monsters_hero_hp(int32_t value) {
  
  _impl_.monsters_hero_hp_ = value;
}
inline void MessageOfAll::set_monsters_hero_hp(int32_t value) {
  _internal_set_monsters_hero_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.monsters_hero_hp)
}

// -------------------------------------------------------------------

// MessageToClient

// repeated .protobuf.MessageOfObj obj_message = 1;
inline int MessageToClient::_internal_obj_message_size() const {
  return _impl_.obj_message_.size();
}
inline int MessageToClient::obj_message_size() const {
  return _internal_obj_message_size();
}
inline void MessageToClient::clear_obj_message() {
  _impl_.obj_message_.Clear();
}
inline ::protobuf::MessageOfObj* MessageToClient::mutable_obj_message(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.obj_message)
  return _impl_.obj_message_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfObj >*
MessageToClient::mutable_obj_message() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MessageToClient.obj_message)
  return &_impl_.obj_message_;
}
inline const ::protobuf::MessageOfObj& MessageToClient::_internal_obj_message(int index) const {
  return _impl_.obj_message_.Get(index);
}
inline const ::protobuf::MessageOfObj& MessageToClient::obj_message(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MessageToClient.obj_message)
  return _internal_obj_message(index);
}
inline ::protobuf::MessageOfObj* MessageToClient::_internal_add_obj_message() {
  return _impl_.obj_message_.Add();
}
inline ::protobuf::MessageOfObj* MessageToClient::add_obj_message() {
  ::protobuf::MessageOfObj* _add = _internal_add_obj_message();
  // @@protoc_insertion_point(field_add:protobuf.MessageToClient.obj_message)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfObj >&
MessageToClient::obj_message() const {
  // @@protoc_insertion_point(field_list:protobuf.MessageToClient.obj_message)
  return _impl_.obj_message_;
}

// .protobuf.GameState game_state = 2;
inline void MessageToClient::clear_game_state() {
  _impl_.game_state_ = 0;
}
inline ::protobuf::GameState MessageToClient::_internal_game_state() const {
  return static_cast< ::protobuf::GameState >(_impl_.game_state_);
}
inline ::protobuf::GameState MessageToClient::game_state() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageToClient.game_state)
  return _internal_game_state();
}
inline void MessageToClient::_internal_set_game_state(::protobuf::GameState value) {
  
  _impl_.game_state_ = value;
}
inline void MessageToClient::set_game_state(::protobuf::GameState value) {
  _internal_set_game_state(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageToClient.game_state)
}

// .protobuf.MessageOfAll all_message = 3;
inline bool MessageToClient::_internal_has_all_message() const {
  return this != internal_default_instance() && _impl_.all_message_ != nullptr;
}
inline bool MessageToClient::has_all_message() const {
  return _internal_has_all_message();
}
inline void MessageToClient::clear_all_message() {
  if (GetArenaForAllocation() == nullptr && _impl_.all_message_ != nullptr) {
    delete _impl_.all_message_;
  }
  _impl_.all_message_ = nullptr;
}
inline const ::protobuf::MessageOfAll& MessageToClient::_internal_all_message() const {
  const ::protobuf::MessageOfAll* p = _impl_.all_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf::MessageOfAll&>(
      ::protobuf::_MessageOfAll_default_instance_);
}
inline const ::protobuf::MessageOfAll& MessageToClient::all_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageToClient.all_message)
  return _internal_all_message();
}
inline void MessageToClient::unsafe_arena_set_allocated_all_message(
    ::protobuf::MessageOfAll* all_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.all_message_);
  }
  _impl_.all_message_ = all_message;
  if (all_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageToClient.all_message)
}
inline ::protobuf::MessageOfAll* MessageToClient::release_all_message() {
  
  ::protobuf::MessageOfAll* temp = _impl_.all_message_;
  _impl_.all_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf::MessageOfAll* MessageToClient::unsafe_arena_release_all_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageToClient.all_message)
  
  ::protobuf::MessageOfAll* temp = _impl_.all_message_;
  _impl_.all_message_ = nullptr;
  return temp;
}
inline ::protobuf::MessageOfAll* MessageToClient::_internal_mutable_all_message() {
  
  if (_impl_.all_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf::MessageOfAll>(GetArenaForAllocation());
    _impl_.all_message_ = p;
  }
  return _impl_.all_message_;
}
inline ::protobuf::MessageOfAll* MessageToClient::mutable_all_message() {
  ::protobuf::MessageOfAll* _msg = _internal_mutable_all_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.all_message)
  return _msg;
}
inline void MessageToClient::set_allocated_all_message(::protobuf::MessageOfAll* all_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.all_message_;
  }
  if (all_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(all_message);
    if (message_arena != submessage_arena) {
      all_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, all_message, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.all_message_ = all_message;
  // @@protoc_insertion_point(field_set_allocated:protobuf.MessageToClient.all_message)
}

// -------------------------------------------------------------------

// MoveRes

// int64 actual_speed = 1;
inline void MoveRes::clear_actual_speed() {
  _impl_.actual_speed_ = int64_t{0};
}
inline int64_t MoveRes::_internal_actual_speed() const {
  return _impl_.actual_speed_;
}
inline int64_t MoveRes::actual_speed() const {
  // @@protoc_insertion_point(field_get:protobuf.MoveRes.actual_speed)
  return _internal_actual_speed();
}
inline void MoveRes::_internal_set_actual_speed(int64_t value) {
  
  _impl_.actual_speed_ = value;
}
inline void MoveRes::set_actual_speed(int64_t value) {
  _internal_set_actual_speed(value);
  // @@protoc_insertion_point(field_set:protobuf.MoveRes.actual_speed)
}

// double actual_angle = 2;
inline void MoveRes::clear_actual_angle() {
  _impl_.actual_angle_ = 0;
}
inline double MoveRes::_internal_actual_angle() const {
  return _impl_.actual_angle_;
}
inline double MoveRes::actual_angle() const {
  // @@protoc_insertion_point(field_get:protobuf.MoveRes.actual_angle)
  return _internal_actual_angle();
}
inline void MoveRes::_internal_set_actual_angle(double value) {
  
  _impl_.actual_angle_ = value;
}
inline void MoveRes::set_actual_angle(double value) {
  _internal_set_actual_angle(value);
  // @@protoc_insertion_point(field_set:protobuf.MoveRes.actual_angle)
}

// bool act_success = 3;
inline void MoveRes::clear_act_success() {
  _impl_.act_success_ = false;
}
inline bool MoveRes::_internal_act_success() const {
  return _impl_.act_success_;
}
inline bool MoveRes::act_success() const {
  // @@protoc_insertion_point(field_get:protobuf.MoveRes.act_success)
  return _internal_act_success();
}
inline void MoveRes::_internal_set_act_success(bool value) {
  
  _impl_.act_success_ = value;
}
inline void MoveRes::set_act_success(bool value) {
  _internal_set_act_success(value);
  // @@protoc_insertion_point(field_set:protobuf.MoveRes.act_success)
}

// -------------------------------------------------------------------

// CreatCharacterRes

// bool act_success = 1;
inline void CreatCharacterRes::clear_act_success() {
  _impl_.act_success_ = false;
}
inline bool CreatCharacterRes::_internal_act_success() const {
  return _impl_.act_success_;
}
inline bool CreatCharacterRes::act_success() const {
  // @@protoc_insertion_point(field_get:protobuf.CreatCharacterRes.act_success)
  return _internal_act_success();
}
inline void CreatCharacterRes::_internal_set_act_success(bool value) {
  
  _impl_.act_success_ = value;
}
inline void CreatCharacterRes::set_act_success(bool value) {
  _internal_set_act_success(value);
  // @@protoc_insertion_point(field_set:protobuf.CreatCharacterRes.act_success)
}

// int64 player_id = 2;
inline void CreatCharacterRes::clear_player_id() {
  _impl_.player_id_ = int64_t{0};
}
inline int64_t CreatCharacterRes::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int64_t CreatCharacterRes::player_id() const {
  // @@protoc_insertion_point(field_get:protobuf.CreatCharacterRes.player_id)
  return _internal_player_id();
}
inline void CreatCharacterRes::_internal_set_player_id(int64_t value) {
  
  _impl_.player_id_ = value;
}
inline void CreatCharacterRes::set_player_id(int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:protobuf.CreatCharacterRes.player_id)
}

// -------------------------------------------------------------------

// BoolRes

// bool act_success = 1;
inline void BoolRes::clear_act_success() {
  _impl_.act_success_ = false;
}
inline bool BoolRes::_internal_act_success() const {
  return _impl_.act_success_;
}
inline bool BoolRes::act_success() const {
  // @@protoc_insertion_point(field_get:protobuf.BoolRes.act_success)
  return _internal_act_success();
}
inline void BoolRes::_internal_set_act_success(bool value) {
  
  _impl_.act_success_ = value;
}
inline void BoolRes::set_act_success(bool value) {
  _internal_set_act_success(value);
  // @@protoc_insertion_point(field_set:protobuf.BoolRes.act_success)
}

// -------------------------------------------------------------------

// CharacterInfoRes

// repeated .protobuf.MessageOfCharacter Character_info = 1;
inline int CharacterInfoRes::_internal_character_info_size() const {
  return _impl_.character_info_.size();
}
inline int CharacterInfoRes::character_info_size() const {
  return _internal_character_info_size();
}
inline void CharacterInfoRes::clear_character_info() {
  _impl_.character_info_.Clear();
}
inline ::protobuf::MessageOfCharacter* CharacterInfoRes::mutable_character_info(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.CharacterInfoRes.Character_info)
  return _impl_.character_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfCharacter >*
CharacterInfoRes::mutable_character_info() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.CharacterInfoRes.Character_info)
  return &_impl_.character_info_;
}
inline const ::protobuf::MessageOfCharacter& CharacterInfoRes::_internal_character_info(int index) const {
  return _impl_.character_info_.Get(index);
}
inline const ::protobuf::MessageOfCharacter& CharacterInfoRes::character_info(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.CharacterInfoRes.Character_info)
  return _internal_character_info(index);
}
inline ::protobuf::MessageOfCharacter* CharacterInfoRes::_internal_add_character_info() {
  return _impl_.character_info_.Add();
}
inline ::protobuf::MessageOfCharacter* CharacterInfoRes::add_character_info() {
  ::protobuf::MessageOfCharacter* _add = _internal_add_character_info();
  // @@protoc_insertion_point(field_add:protobuf.CharacterInfoRes.Character_info)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::MessageOfCharacter >&
CharacterInfoRes::character_info() const {
  // @@protoc_insertion_point(field_list:protobuf.CharacterInfoRes.Character_info)
  return _impl_.character_info_;
}

// -------------------------------------------------------------------

// EcoRes

// int64 economy = 1;
inline void EcoRes::clear_economy() {
  _impl_.economy_ = int64_t{0};
}
inline int64_t EcoRes::_internal_economy() const {
  return _impl_.economy_;
}
inline int64_t EcoRes::economy() const {
  // @@protoc_insertion_point(field_get:protobuf.EcoRes.economy)
  return _internal_economy();
}
inline void EcoRes::_internal_set_economy(int64_t value) {
  
  _impl_.economy_ = value;
}
inline void EcoRes::set_economy(int64_t value) {
  _internal_set_economy(value);
  // @@protoc_insertion_point(field_set:protobuf.EcoRes.economy)
}

// -------------------------------------------------------------------

// MessageOfNews

// string text_message = 1;
inline bool MessageOfNews::_internal_has_text_message() const {
  return news_case() == kTextMessage;
}
inline bool MessageOfNews::has_text_message() const {
  return _internal_has_text_message();
}
inline void MessageOfNews::set_has_text_message() {
  _impl_._oneof_case_[0] = kTextMessage;
}
inline void MessageOfNews::clear_text_message() {
  if (_internal_has_text_message()) {
    _impl_.news_.text_message_.Destroy();
    clear_has_news();
  }
}
inline const std::string& MessageOfNews::text_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfNews.text_message)
  return _internal_text_message();
}
template <typename ArgT0, typename... ArgT>
inline void MessageOfNews::set_text_message(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_text_message()) {
    clear_news();
    set_has_text_message();
    _impl_.news_.text_message_.InitDefault();
  }
  _impl_.news_.text_message_.Set( static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf.MessageOfNews.text_message)
}
inline std::string* MessageOfNews::mutable_text_message() {
  std::string* _s = _internal_mutable_text_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfNews.text_message)
  return _s;
}
inline const std::string& MessageOfNews::_internal_text_message() const {
  if (_internal_has_text_message()) {
    return _impl_.news_.text_message_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void MessageOfNews::_internal_set_text_message(const std::string& value) {
  if (!_internal_has_text_message()) {
    clear_news();
    set_has_text_message();
    _impl_.news_.text_message_.InitDefault();
  }
  _impl_.news_.text_message_.Set(value, GetArenaForAllocation());
}
inline std::string* MessageOfNews::_internal_mutable_text_message() {
  if (!_internal_has_text_message()) {
    clear_news();
    set_has_text_message();
    _impl_.news_.text_message_.InitDefault();
  }
  return _impl_.news_.text_message_.Mutable(      GetArenaForAllocation());
}
inline std::string* MessageOfNews::release_text_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfNews.text_message)
  if (_internal_has_text_message()) {
    clear_has_news();
    return _impl_.news_.text_message_.Release();
  } else {
    return nullptr;
  }
}
inline void MessageOfNews::set_allocated_text_message(std::string* text_message) {
  if (has_news()) {
    clear_news();
  }
  if (text_message != nullptr) {
    set_has_text_message();
    _impl_.news_.text_message_.InitAllocated(text_message, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfNews.text_message)
}

// bytes binary_message = 2;
inline bool MessageOfNews::_internal_has_binary_message() const {
  return news_case() == kBinaryMessage;
}
inline bool MessageOfNews::has_binary_message() const {
  return _internal_has_binary_message();
}
inline void MessageOfNews::set_has_binary_message() {
  _impl_._oneof_case_[0] = kBinaryMessage;
}
inline void MessageOfNews::clear_binary_message() {
  if (_internal_has_binary_message()) {
    _impl_.news_.binary_message_.Destroy();
    clear_has_news();
  }
}
inline const std::string& MessageOfNews::binary_message() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfNews.binary_message)
  return _internal_binary_message();
}
template <typename ArgT0, typename... ArgT>
inline void MessageOfNews::set_binary_message(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_binary_message()) {
    clear_news();
    set_has_binary_message();
    _impl_.news_.binary_message_.InitDefault();
  }
  _impl_.news_.binary_message_.SetBytes( static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf.MessageOfNews.binary_message)
}
inline std::string* MessageOfNews::mutable_binary_message() {
  std::string* _s = _internal_mutable_binary_message();
  // @@protoc_insertion_point(field_mutable:protobuf.MessageOfNews.binary_message)
  return _s;
}
inline const std::string& MessageOfNews::_internal_binary_message() const {
  if (_internal_has_binary_message()) {
    return _impl_.news_.binary_message_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void MessageOfNews::_internal_set_binary_message(const std::string& value) {
  if (!_internal_has_binary_message()) {
    clear_news();
    set_has_binary_message();
    _impl_.news_.binary_message_.InitDefault();
  }
  _impl_.news_.binary_message_.Set(value, GetArenaForAllocation());
}
inline std::string* MessageOfNews::_internal_mutable_binary_message() {
  if (!_internal_has_binary_message()) {
    clear_news();
    set_has_binary_message();
    _impl_.news_.binary_message_.InitDefault();
  }
  return _impl_.news_.binary_message_.Mutable(      GetArenaForAllocation());
}
inline std::string* MessageOfNews::release_binary_message() {
  // @@protoc_insertion_point(field_release:protobuf.MessageOfNews.binary_message)
  if (_internal_has_binary_message()) {
    clear_has_news();
    return _impl_.news_.binary_message_.Release();
  } else {
    return nullptr;
  }
}
inline void MessageOfNews::set_allocated_binary_message(std::string* binary_message) {
  if (has_news()) {
    clear_news();
  }
  if (binary_message != nullptr) {
    set_has_binary_message();
    _impl_.news_.binary_message_.InitAllocated(binary_message, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfNews.binary_message)
}

// int64 from_id = 3;
inline void MessageOfNews::clear_from_id() {
  _impl_.from_id_ = int64_t{0};
}
inline int64_t MessageOfNews::_internal_from_id() const {
  return _impl_.from_id_;
}
inline int64_t MessageOfNews::from_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfNews.from_id)
  return _internal_from_id();
}
inline void MessageOfNews::_internal_set_from_id(int64_t value) {
  
  _impl_.from_id_ = value;
}
inline void MessageOfNews::set_from_id(int64_t value) {
  _internal_set_from_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfNews.from_id)
}

// int64 to_id = 4;
inline void MessageOfNews::clear_to_id() {
  _impl_.to_id_ = int64_t{0};
}
inline int64_t MessageOfNews::_internal_to_id() const {
  return _impl_.to_id_;
}
inline int64_t MessageOfNews::to_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfNews.to_id)
  return _internal_to_id();
}
inline void MessageOfNews::_internal_set_to_id(int64_t value) {
  
  _impl_.to_id_ = value;
}
inline void MessageOfNews::set_to_id(int64_t value) {
  _internal_set_to_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfNews.to_id)
}

// int64 team_id = 5;
inline void MessageOfNews::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MessageOfNews::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MessageOfNews::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MessageOfNews.team_id)
  return _internal_team_id();
}
inline void MessageOfNews::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MessageOfNews::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MessageOfNews.team_id)
}

inline bool MessageOfNews::has_news() const {
  return news_case() != NEWS_NOT_SET;
}
inline void MessageOfNews::clear_has_news() {
  _impl_._oneof_case_[0] = NEWS_NOT_SET;
}
inline MessageOfNews::NewsCase MessageOfNews::news_case() const {
  return MessageOfNews::NewsCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
