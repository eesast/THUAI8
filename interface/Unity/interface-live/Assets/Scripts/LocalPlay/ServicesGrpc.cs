#if !UNITY_WEBGL
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Services.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Protobuf {
  public static partial class AvailableService
  {
    static readonly string __ServiceName = "protobuf.AvailableService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.IDMsg> __Marshaller_protobuf_IDMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.IDMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.BoolRes> __Marshaller_protobuf_BoolRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.BoolRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.CharacterMsg> __Marshaller_protobuf_CharacterMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.CharacterMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.MessageToClient> __Marshaller_protobuf_MessageToClient = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.MessageToClient.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.NullRequest> __Marshaller_protobuf_NullRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.NullRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.MessageOfMap> __Marshaller_protobuf_MessageOfMap = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.MessageOfMap.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.MoveMsg> __Marshaller_protobuf_MoveMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.MoveMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.MoveRes> __Marshaller_protobuf_MoveRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.MoveRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.RecoverMsg> __Marshaller_protobuf_RecoverMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.RecoverMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.ConstructMsg> __Marshaller_protobuf_ConstructMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.ConstructMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.ConstructTrapMsg> __Marshaller_protobuf_ConstructTrapMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.ConstructTrapMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.EquipMsg> __Marshaller_protobuf_EquipMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.EquipMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.AttackMsg> __Marshaller_protobuf_AttackMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.AttackMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.CastMsg> __Marshaller_protobuf_CastMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.CastMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.AttackConstructionMsg> __Marshaller_protobuf_AttackConstructionMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.AttackConstructionMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.AttackAdditionResourceMsg> __Marshaller_protobuf_AttackAdditionResourceMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.AttackAdditionResourceMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.SendMsg> __Marshaller_protobuf_SendMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.SendMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.CreatCharacterMsg> __Marshaller_protobuf_CreatCharacterMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.CreatCharacterMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.CreatCharacterRes> __Marshaller_protobuf_CreatCharacterRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.CreatCharacterRes.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_TryConnection = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TryConnection",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.CharacterMsg, global::Protobuf.MessageToClient> __Method_AddCharacter = new grpc::Method<global::Protobuf.CharacterMsg, global::Protobuf.MessageToClient>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "AddCharacter",
        __Marshaller_protobuf_CharacterMsg,
        __Marshaller_protobuf_MessageToClient);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.NullRequest, global::Protobuf.MessageOfMap> __Method_GetMap = new grpc::Method<global::Protobuf.NullRequest, global::Protobuf.MessageOfMap>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMap",
        __Marshaller_protobuf_NullRequest,
        __Marshaller_protobuf_MessageOfMap);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.MoveMsg, global::Protobuf.MoveRes> __Method_Move = new grpc::Method<global::Protobuf.MoveMsg, global::Protobuf.MoveRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Move",
        __Marshaller_protobuf_MoveMsg,
        __Marshaller_protobuf_MoveRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.RecoverMsg, global::Protobuf.BoolRes> __Method_Recover = new grpc::Method<global::Protobuf.RecoverMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Recover",
        __Marshaller_protobuf_RecoverMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_Produce = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Produce",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.ConstructMsg, global::Protobuf.BoolRes> __Method_Rebuild = new grpc::Method<global::Protobuf.ConstructMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Rebuild",
        __Marshaller_protobuf_ConstructMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.ConstructMsg, global::Protobuf.BoolRes> __Method_Construct = new grpc::Method<global::Protobuf.ConstructMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Construct",
        __Marshaller_protobuf_ConstructMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.ConstructTrapMsg, global::Protobuf.BoolRes> __Method_ConstructTrap = new grpc::Method<global::Protobuf.ConstructTrapMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConstructTrap",
        __Marshaller_protobuf_ConstructTrapMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.EquipMsg, global::Protobuf.BoolRes> __Method_Equip = new grpc::Method<global::Protobuf.EquipMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Equip",
        __Marshaller_protobuf_EquipMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.AttackMsg, global::Protobuf.BoolRes> __Method_Attack = new grpc::Method<global::Protobuf.AttackMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Attack",
        __Marshaller_protobuf_AttackMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.CastMsg, global::Protobuf.BoolRes> __Method_Cast = new grpc::Method<global::Protobuf.CastMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Cast",
        __Marshaller_protobuf_CastMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.AttackConstructionMsg, global::Protobuf.BoolRes> __Method_AttackConstruction = new grpc::Method<global::Protobuf.AttackConstructionMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AttackConstruction",
        __Marshaller_protobuf_AttackConstructionMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.AttackAdditionResourceMsg, global::Protobuf.BoolRes> __Method_AttackAdditionResource = new grpc::Method<global::Protobuf.AttackAdditionResourceMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AttackAdditionResource",
        __Marshaller_protobuf_AttackAdditionResourceMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.SendMsg, global::Protobuf.BoolRes> __Method_Send = new grpc::Method<global::Protobuf.SendMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Send",
        __Marshaller_protobuf_SendMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.CreatCharacterMsg, global::Protobuf.BoolRes> __Method_CreatCharacter = new grpc::Method<global::Protobuf.CreatCharacterMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatCharacter",
        __Marshaller_protobuf_CreatCharacterMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.CreatCharacterMsg, global::Protobuf.CreatCharacterRes> __Method_CreatCharacterRID = new grpc::Method<global::Protobuf.CreatCharacterMsg, global::Protobuf.CreatCharacterRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatCharacterRID",
        __Marshaller_protobuf_CreatCharacterMsg,
        __Marshaller_protobuf_CreatCharacterRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_EndAllAction = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EndAllAction",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Protobuf.ServicesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AvailableService</summary>
    [grpc::BindServiceMethod(typeof(AvailableService), "BindService")]
    public abstract partial class AvailableServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> TryConnection(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 游戏开局调用一次的服务
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task AddCharacter(global::Protobuf.CharacterMsg request, grpc::IServerStreamWriter<global::Protobuf.MessageToClient> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.MessageOfMap> GetMap(global::Protobuf.NullRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 游戏过程中普通角色执行操作的服务
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.MoveRes> Move(global::Protobuf.MoveMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 回复
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Recover(global::Protobuf.RecoverMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 开采经济资源
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Produce(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 给建筑回血
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Rebuild(global::Protobuf.ConstructMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 修建建筑
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Construct(global::Protobuf.ConstructMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修建陷阱
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> ConstructTrap(global::Protobuf.ConstructTrapMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 买装备
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Equip(global::Protobuf.EquipMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 普通攻击
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Attack(global::Protobuf.AttackMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 释放技能
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Cast(global::Protobuf.CastMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///攻击建筑
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> AttackConstruction(global::Protobuf.AttackConstructionMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///攻击加成资源
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> AttackAdditionResource(global::Protobuf.AttackAdditionResourceMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 传递信息
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Send(global::Protobuf.SendMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 游戏过程中核心角色可以另外执行操作的服务
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> CreatCharacter(global::Protobuf.CreatCharacterMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 获取角色编号
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.CreatCharacterRes> CreatCharacterRID(global::Protobuf.CreatCharacterMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> EndAllAction(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AvailableService</summary>
    public partial class AvailableServiceClient : grpc::ClientBase<AvailableServiceClient>
    {
      /// <summary>Creates a new client for AvailableService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AvailableServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AvailableService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AvailableServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AvailableServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AvailableServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes TryConnection(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TryConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes TryConnection(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TryConnection, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> TryConnectionAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TryConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> TryConnectionAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TryConnection, null, options, request);
      }
      /// <summary>
      /// 游戏开局调用一次的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Protobuf.MessageToClient> AddCharacter(global::Protobuf.CharacterMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 游戏开局调用一次的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Protobuf.MessageToClient> AddCharacter(global::Protobuf.CharacterMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_AddCharacter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.MessageOfMap GetMap(global::Protobuf.NullRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMap(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.MessageOfMap GetMap(global::Protobuf.NullRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMap, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.MessageOfMap> GetMapAsync(global::Protobuf.NullRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMapAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.MessageOfMap> GetMapAsync(global::Protobuf.NullRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMap, null, options, request);
      }
      /// <summary>
      /// 游戏过程中普通角色执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.MoveRes Move(global::Protobuf.MoveMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Move(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 游戏过程中普通角色执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.MoveRes Move(global::Protobuf.MoveMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Move, null, options, request);
      }
      /// <summary>
      /// 游戏过程中普通角色执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.MoveRes> MoveAsync(global::Protobuf.MoveMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 游戏过程中普通角色执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.MoveRes> MoveAsync(global::Protobuf.MoveMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Move, null, options, request);
      }
      /// <summary>
      /// 回复
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Recover(global::Protobuf.RecoverMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Recover(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 回复
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Recover(global::Protobuf.RecoverMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Recover, null, options, request);
      }
      /// <summary>
      /// 回复
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> RecoverAsync(global::Protobuf.RecoverMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RecoverAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 回复
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> RecoverAsync(global::Protobuf.RecoverMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Recover, null, options, request);
      }
      /// <summary>
      /// 开采经济资源
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Produce(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Produce(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 开采经济资源
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Produce(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Produce, null, options, request);
      }
      /// <summary>
      /// 开采经济资源
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> ProduceAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProduceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 开采经济资源
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> ProduceAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Produce, null, options, request);
      }
      /// <summary>
      /// 给建筑回血
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Rebuild(global::Protobuf.ConstructMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Rebuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 给建筑回血
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Rebuild(global::Protobuf.ConstructMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Rebuild, null, options, request);
      }
      /// <summary>
      /// 给建筑回血
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> RebuildAsync(global::Protobuf.ConstructMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RebuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 给建筑回血
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> RebuildAsync(global::Protobuf.ConstructMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Rebuild, null, options, request);
      }
      /// <summary>
      /// 修建建筑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Construct(global::Protobuf.ConstructMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Construct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 修建建筑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Construct(global::Protobuf.ConstructMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Construct, null, options, request);
      }
      /// <summary>
      /// 修建建筑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> ConstructAsync(global::Protobuf.ConstructMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConstructAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 修建建筑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> ConstructAsync(global::Protobuf.ConstructMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Construct, null, options, request);
      }
      /// <summary>
      ///修建陷阱
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes ConstructTrap(global::Protobuf.ConstructTrapMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConstructTrap(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修建陷阱
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes ConstructTrap(global::Protobuf.ConstructTrapMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConstructTrap, null, options, request);
      }
      /// <summary>
      ///修建陷阱
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> ConstructTrapAsync(global::Protobuf.ConstructTrapMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConstructTrapAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修建陷阱
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> ConstructTrapAsync(global::Protobuf.ConstructTrapMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConstructTrap, null, options, request);
      }
      /// <summary>
      /// 买装备
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Equip(global::Protobuf.EquipMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Equip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 买装备
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Equip(global::Protobuf.EquipMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Equip, null, options, request);
      }
      /// <summary>
      /// 买装备
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> EquipAsync(global::Protobuf.EquipMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EquipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 买装备
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> EquipAsync(global::Protobuf.EquipMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Equip, null, options, request);
      }
      /// <summary>
      /// 普通攻击
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Attack(global::Protobuf.AttackMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Attack(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 普通攻击
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Attack(global::Protobuf.AttackMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Attack, null, options, request);
      }
      /// <summary>
      /// 普通攻击
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> AttackAsync(global::Protobuf.AttackMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttackAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 普通攻击
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> AttackAsync(global::Protobuf.AttackMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Attack, null, options, request);
      }
      /// <summary>
      /// 释放技能
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Cast(global::Protobuf.CastMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Cast(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 释放技能
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Cast(global::Protobuf.CastMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Cast, null, options, request);
      }
      /// <summary>
      /// 释放技能
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> CastAsync(global::Protobuf.CastMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CastAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 释放技能
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> CastAsync(global::Protobuf.CastMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Cast, null, options, request);
      }
      /// <summary>
      ///攻击建筑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes AttackConstruction(global::Protobuf.AttackConstructionMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttackConstruction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///攻击建筑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes AttackConstruction(global::Protobuf.AttackConstructionMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AttackConstruction, null, options, request);
      }
      /// <summary>
      ///攻击建筑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> AttackConstructionAsync(global::Protobuf.AttackConstructionMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttackConstructionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///攻击建筑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> AttackConstructionAsync(global::Protobuf.AttackConstructionMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AttackConstruction, null, options, request);
      }
      /// <summary>
      ///攻击加成资源
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes AttackAdditionResource(global::Protobuf.AttackAdditionResourceMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttackAdditionResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///攻击加成资源
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes AttackAdditionResource(global::Protobuf.AttackAdditionResourceMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AttackAdditionResource, null, options, request);
      }
      /// <summary>
      ///攻击加成资源
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> AttackAdditionResourceAsync(global::Protobuf.AttackAdditionResourceMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttackAdditionResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///攻击加成资源
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> AttackAdditionResourceAsync(global::Protobuf.AttackAdditionResourceMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AttackAdditionResource, null, options, request);
      }
      /// <summary>
      /// 传递信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Send(global::Protobuf.SendMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 传递信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Send(global::Protobuf.SendMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Send, null, options, request);
      }
      /// <summary>
      /// 传递信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> SendAsync(global::Protobuf.SendMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 传递信息
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> SendAsync(global::Protobuf.SendMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Send, null, options, request);
      }
      /// <summary>
      /// 游戏过程中核心角色可以另外执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes CreatCharacter(global::Protobuf.CreatCharacterMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 游戏过程中核心角色可以另外执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes CreatCharacter(global::Protobuf.CreatCharacterMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatCharacter, null, options, request);
      }
      /// <summary>
      /// 游戏过程中核心角色可以另外执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> CreatCharacterAsync(global::Protobuf.CreatCharacterMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 游戏过程中核心角色可以另外执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> CreatCharacterAsync(global::Protobuf.CreatCharacterMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatCharacter, null, options, request);
      }
      /// <summary>
      /// 获取角色编号
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.CreatCharacterRes CreatCharacterRID(global::Protobuf.CreatCharacterMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatCharacterRID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 获取角色编号
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.CreatCharacterRes CreatCharacterRID(global::Protobuf.CreatCharacterMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatCharacterRID, null, options, request);
      }
      /// <summary>
      /// 获取角色编号
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.CreatCharacterRes> CreatCharacterRIDAsync(global::Protobuf.CreatCharacterMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatCharacterRIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 获取角色编号
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.CreatCharacterRes> CreatCharacterRIDAsync(global::Protobuf.CreatCharacterMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatCharacterRID, null, options, request);
      }
      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes EndAllAction(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EndAllAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes EndAllAction(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EndAllAction, null, options, request);
      }
      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> EndAllActionAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EndAllActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> EndAllActionAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EndAllAction, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AvailableServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AvailableServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AvailableServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_TryConnection, serviceImpl.TryConnection)
          .AddMethod(__Method_AddCharacter, serviceImpl.AddCharacter)
          .AddMethod(__Method_GetMap, serviceImpl.GetMap)
          .AddMethod(__Method_Move, serviceImpl.Move)
          .AddMethod(__Method_Recover, serviceImpl.Recover)
          .AddMethod(__Method_Produce, serviceImpl.Produce)
          .AddMethod(__Method_Rebuild, serviceImpl.Rebuild)
          .AddMethod(__Method_Construct, serviceImpl.Construct)
          .AddMethod(__Method_ConstructTrap, serviceImpl.ConstructTrap)
          .AddMethod(__Method_Equip, serviceImpl.Equip)
          .AddMethod(__Method_Attack, serviceImpl.Attack)
          .AddMethod(__Method_Cast, serviceImpl.Cast)
          .AddMethod(__Method_AttackConstruction, serviceImpl.AttackConstruction)
          .AddMethod(__Method_AttackAdditionResource, serviceImpl.AttackAdditionResource)
          .AddMethod(__Method_Send, serviceImpl.Send)
          .AddMethod(__Method_CreatCharacter, serviceImpl.CreatCharacter)
          .AddMethod(__Method_CreatCharacterRID, serviceImpl.CreatCharacterRID)
          .AddMethod(__Method_EndAllAction, serviceImpl.EndAllAction).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AvailableServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_TryConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.TryConnection));
      serviceBinder.AddMethod(__Method_AddCharacter, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Protobuf.CharacterMsg, global::Protobuf.MessageToClient>(serviceImpl.AddCharacter));
      serviceBinder.AddMethod(__Method_GetMap, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.NullRequest, global::Protobuf.MessageOfMap>(serviceImpl.GetMap));
      serviceBinder.AddMethod(__Method_Move, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.MoveMsg, global::Protobuf.MoveRes>(serviceImpl.Move));
      serviceBinder.AddMethod(__Method_Recover, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.RecoverMsg, global::Protobuf.BoolRes>(serviceImpl.Recover));
      serviceBinder.AddMethod(__Method_Produce, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.Produce));
      serviceBinder.AddMethod(__Method_Rebuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.ConstructMsg, global::Protobuf.BoolRes>(serviceImpl.Rebuild));
      serviceBinder.AddMethod(__Method_Construct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.ConstructMsg, global::Protobuf.BoolRes>(serviceImpl.Construct));
      serviceBinder.AddMethod(__Method_ConstructTrap, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.ConstructTrapMsg, global::Protobuf.BoolRes>(serviceImpl.ConstructTrap));
      serviceBinder.AddMethod(__Method_Equip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.EquipMsg, global::Protobuf.BoolRes>(serviceImpl.Equip));
      serviceBinder.AddMethod(__Method_Attack, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.AttackMsg, global::Protobuf.BoolRes>(serviceImpl.Attack));
      serviceBinder.AddMethod(__Method_Cast, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.CastMsg, global::Protobuf.BoolRes>(serviceImpl.Cast));
      serviceBinder.AddMethod(__Method_AttackConstruction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.AttackConstructionMsg, global::Protobuf.BoolRes>(serviceImpl.AttackConstruction));
      serviceBinder.AddMethod(__Method_AttackAdditionResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.AttackAdditionResourceMsg, global::Protobuf.BoolRes>(serviceImpl.AttackAdditionResource));
      serviceBinder.AddMethod(__Method_Send, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.SendMsg, global::Protobuf.BoolRes>(serviceImpl.Send));
      serviceBinder.AddMethod(__Method_CreatCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.CreatCharacterMsg, global::Protobuf.BoolRes>(serviceImpl.CreatCharacter));
      serviceBinder.AddMethod(__Method_CreatCharacterRID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.CreatCharacterMsg, global::Protobuf.CreatCharacterRes>(serviceImpl.CreatCharacterRID));
      serviceBinder.AddMethod(__Method_EndAllAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.EndAllAction));
    }

  }
}
#endregion
#endif