// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message2Server.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Message2Server_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Message2Server_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "MessageType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Message2Server_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Message2Server_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Message2Server_2eproto;
namespace protobuf {
class AdditionResourceMsg;
struct AdditionResourceMsgDefaultTypeInternal;
extern AdditionResourceMsgDefaultTypeInternal _AdditionResourceMsg_default_instance_;
class AttackAdditionResourceMsg;
struct AttackAdditionResourceMsgDefaultTypeInternal;
extern AttackAdditionResourceMsgDefaultTypeInternal _AttackAdditionResourceMsg_default_instance_;
class AttackConstructionMsg;
struct AttackConstructionMsgDefaultTypeInternal;
extern AttackConstructionMsgDefaultTypeInternal _AttackConstructionMsg_default_instance_;
class AttackMsg;
struct AttackMsgDefaultTypeInternal;
extern AttackMsgDefaultTypeInternal _AttackMsg_default_instance_;
class CastMsg;
struct CastMsgDefaultTypeInternal;
extern CastMsgDefaultTypeInternal _CastMsg_default_instance_;
class CharacterMsg;
struct CharacterMsgDefaultTypeInternal;
extern CharacterMsgDefaultTypeInternal _CharacterMsg_default_instance_;
class ConstructMsg;
struct ConstructMsgDefaultTypeInternal;
extern ConstructMsgDefaultTypeInternal _ConstructMsg_default_instance_;
class ConstructionMsg;
struct ConstructionMsgDefaultTypeInternal;
extern ConstructionMsgDefaultTypeInternal _ConstructionMsg_default_instance_;
class CreatCharacterMsg;
struct CreatCharacterMsgDefaultTypeInternal;
extern CreatCharacterMsgDefaultTypeInternal _CreatCharacterMsg_default_instance_;
class EconomyReourceMsg;
struct EconomyReourceMsgDefaultTypeInternal;
extern EconomyReourceMsgDefaultTypeInternal _EconomyReourceMsg_default_instance_;
class EquipMsg;
struct EquipMsgDefaultTypeInternal;
extern EquipMsgDefaultTypeInternal _EquipMsg_default_instance_;
class IDMsg;
struct IDMsgDefaultTypeInternal;
extern IDMsgDefaultTypeInternal _IDMsg_default_instance_;
class MoveMsg;
struct MoveMsgDefaultTypeInternal;
extern MoveMsgDefaultTypeInternal _MoveMsg_default_instance_;
class NullRequest;
struct NullRequestDefaultTypeInternal;
extern NullRequestDefaultTypeInternal _NullRequest_default_instance_;
class RecoverMsg;
struct RecoverMsgDefaultTypeInternal;
extern RecoverMsgDefaultTypeInternal _RecoverMsg_default_instance_;
class SendMsg;
struct SendMsgDefaultTypeInternal;
extern SendMsgDefaultTypeInternal _SendMsg_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::AdditionResourceMsg* Arena::CreateMaybeMessage<::protobuf::AdditionResourceMsg>(Arena*);
template<> ::protobuf::AttackAdditionResourceMsg* Arena::CreateMaybeMessage<::protobuf::AttackAdditionResourceMsg>(Arena*);
template<> ::protobuf::AttackConstructionMsg* Arena::CreateMaybeMessage<::protobuf::AttackConstructionMsg>(Arena*);
template<> ::protobuf::AttackMsg* Arena::CreateMaybeMessage<::protobuf::AttackMsg>(Arena*);
template<> ::protobuf::CastMsg* Arena::CreateMaybeMessage<::protobuf::CastMsg>(Arena*);
template<> ::protobuf::CharacterMsg* Arena::CreateMaybeMessage<::protobuf::CharacterMsg>(Arena*);
template<> ::protobuf::ConstructMsg* Arena::CreateMaybeMessage<::protobuf::ConstructMsg>(Arena*);
template<> ::protobuf::ConstructionMsg* Arena::CreateMaybeMessage<::protobuf::ConstructionMsg>(Arena*);
template<> ::protobuf::CreatCharacterMsg* Arena::CreateMaybeMessage<::protobuf::CreatCharacterMsg>(Arena*);
template<> ::protobuf::EconomyReourceMsg* Arena::CreateMaybeMessage<::protobuf::EconomyReourceMsg>(Arena*);
template<> ::protobuf::EquipMsg* Arena::CreateMaybeMessage<::protobuf::EquipMsg>(Arena*);
template<> ::protobuf::IDMsg* Arena::CreateMaybeMessage<::protobuf::IDMsg>(Arena*);
template<> ::protobuf::MoveMsg* Arena::CreateMaybeMessage<::protobuf::MoveMsg>(Arena*);
template<> ::protobuf::NullRequest* Arena::CreateMaybeMessage<::protobuf::NullRequest>(Arena*);
template<> ::protobuf::RecoverMsg* Arena::CreateMaybeMessage<::protobuf::RecoverMsg>(Arena*);
template<> ::protobuf::SendMsg* Arena::CreateMaybeMessage<::protobuf::SendMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {

// ===================================================================

class NullRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:protobuf.NullRequest) */ {
 public:
  inline NullRequest() : NullRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR NullRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NullRequest(const NullRequest& from);
  NullRequest(NullRequest&& from) noexcept
    : NullRequest() {
    *this = ::std::move(from);
  }

  inline NullRequest& operator=(const NullRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NullRequest& operator=(NullRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NullRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NullRequest* internal_default_instance() {
    return reinterpret_cast<const NullRequest*>(
               &_NullRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NullRequest& a, NullRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NullRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NullRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NullRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NullRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NullRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NullRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.NullRequest";
  }
  protected:
  explicit NullRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf.NullRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class IDMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.IDMsg) */ {
 public:
  inline IDMsg() : IDMsg(nullptr) {}
  ~IDMsg() override;
  explicit PROTOBUF_CONSTEXPR IDMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IDMsg(const IDMsg& from);
  IDMsg(IDMsg&& from) noexcept
    : IDMsg() {
    *this = ::std::move(from);
  }

  inline IDMsg& operator=(const IDMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline IDMsg& operator=(IDMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IDMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const IDMsg* internal_default_instance() {
    return reinterpret_cast<const IDMsg*>(
               &_IDMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(IDMsg& a, IDMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(IDMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IDMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IDMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IDMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IDMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const IDMsg& from) {
    IDMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IDMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.IDMsg";
  }
  protected:
  explicit IDMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterIdFieldNumber = 1,
    kTeamIdFieldNumber = 2,
  };
  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // int64 team_id = 2;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.IDMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t character_id_;
    int64_t team_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class CharacterMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.CharacterMsg) */ {
 public:
  inline CharacterMsg() : CharacterMsg(nullptr) {}
  ~CharacterMsg() override;
  explicit PROTOBUF_CONSTEXPR CharacterMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CharacterMsg(const CharacterMsg& from);
  CharacterMsg(CharacterMsg&& from) noexcept
    : CharacterMsg() {
    *this = ::std::move(from);
  }

  inline CharacterMsg& operator=(const CharacterMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacterMsg& operator=(CharacterMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CharacterMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CharacterMsg* internal_default_instance() {
    return reinterpret_cast<const CharacterMsg*>(
               &_CharacterMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CharacterMsg& a, CharacterMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CharacterMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CharacterMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CharacterMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CharacterMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CharacterMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CharacterMsg& from) {
    CharacterMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.CharacterMsg";
  }
  protected:
  explicit CharacterMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterIdFieldNumber = 1,
    kTeamIdFieldNumber = 2,
    kCharacterTypeFieldNumber = 3,
    kSideFlagFieldNumber = 4,
  };
  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // int64 team_id = 2;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // .protobuf.CharacterType character_type = 3;
  void clear_character_type();
  ::protobuf::CharacterType character_type() const;
  void set_character_type(::protobuf::CharacterType value);
  private:
  ::protobuf::CharacterType _internal_character_type() const;
  void _internal_set_character_type(::protobuf::CharacterType value);
  public:

  // int32 side_flag = 4;
  void clear_side_flag();
  int32_t side_flag() const;
  void set_side_flag(int32_t value);
  private:
  int32_t _internal_side_flag() const;
  void _internal_set_side_flag(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.CharacterMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t character_id_;
    int64_t team_id_;
    int character_type_;
    int32_t side_flag_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class EconomyReourceMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.EconomyReourceMsg) */ {
 public:
  inline EconomyReourceMsg() : EconomyReourceMsg(nullptr) {}
  ~EconomyReourceMsg() override;
  explicit PROTOBUF_CONSTEXPR EconomyReourceMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EconomyReourceMsg(const EconomyReourceMsg& from);
  EconomyReourceMsg(EconomyReourceMsg&& from) noexcept
    : EconomyReourceMsg() {
    *this = ::std::move(from);
  }

  inline EconomyReourceMsg& operator=(const EconomyReourceMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline EconomyReourceMsg& operator=(EconomyReourceMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EconomyReourceMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const EconomyReourceMsg* internal_default_instance() {
    return reinterpret_cast<const EconomyReourceMsg*>(
               &_EconomyReourceMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EconomyReourceMsg& a, EconomyReourceMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(EconomyReourceMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EconomyReourceMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EconomyReourceMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EconomyReourceMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EconomyReourceMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EconomyReourceMsg& from) {
    EconomyReourceMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EconomyReourceMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.EconomyReourceMsg";
  }
  protected:
  explicit EconomyReourceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kProcessFieldNumber = 2,
    kEconomyResourceTypeFieldNumber = 3,
  };
  // int64 team_id = 1;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int32 process = 2;
  void clear_process();
  int32_t process() const;
  void set_process(int32_t value);
  private:
  int32_t _internal_process() const;
  void _internal_set_process(int32_t value);
  public:

  // .protobuf.EconomyResourceType economy_resource_type = 3;
  void clear_economy_resource_type();
  ::protobuf::EconomyResourceType economy_resource_type() const;
  void set_economy_resource_type(::protobuf::EconomyResourceType value);
  private:
  ::protobuf::EconomyResourceType _internal_economy_resource_type() const;
  void _internal_set_economy_resource_type(::protobuf::EconomyResourceType value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.EconomyReourceMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t team_id_;
    int32_t process_;
    int economy_resource_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class AdditionResourceMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.AdditionResourceMsg) */ {
 public:
  inline AdditionResourceMsg() : AdditionResourceMsg(nullptr) {}
  ~AdditionResourceMsg() override;
  explicit PROTOBUF_CONSTEXPR AdditionResourceMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AdditionResourceMsg(const AdditionResourceMsg& from);
  AdditionResourceMsg(AdditionResourceMsg&& from) noexcept
    : AdditionResourceMsg() {
    *this = ::std::move(from);
  }

  inline AdditionResourceMsg& operator=(const AdditionResourceMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdditionResourceMsg& operator=(AdditionResourceMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdditionResourceMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdditionResourceMsg* internal_default_instance() {
    return reinterpret_cast<const AdditionResourceMsg*>(
               &_AdditionResourceMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AdditionResourceMsg& a, AdditionResourceMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AdditionResourceMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdditionResourceMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdditionResourceMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AdditionResourceMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AdditionResourceMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AdditionResourceMsg& from) {
    AdditionResourceMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdditionResourceMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.AdditionResourceMsg";
  }
  protected:
  explicit AdditionResourceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kHpFieldNumber = 2,
    kAdditionResourceTypeFieldNumber = 3,
  };
  // int64 team_id = 1;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int32 hp = 2;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // .protobuf.AdditionResourceType addition_resource_type = 3;
  void clear_addition_resource_type();
  ::protobuf::AdditionResourceType addition_resource_type() const;
  void set_addition_resource_type(::protobuf::AdditionResourceType value);
  private:
  ::protobuf::AdditionResourceType _internal_addition_resource_type() const;
  void _internal_set_addition_resource_type(::protobuf::AdditionResourceType value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.AdditionResourceMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t team_id_;
    int32_t hp_;
    int addition_resource_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class ConstructionMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.ConstructionMsg) */ {
 public:
  inline ConstructionMsg() : ConstructionMsg(nullptr) {}
  ~ConstructionMsg() override;
  explicit PROTOBUF_CONSTEXPR ConstructionMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConstructionMsg(const ConstructionMsg& from);
  ConstructionMsg(ConstructionMsg&& from) noexcept
    : ConstructionMsg() {
    *this = ::std::move(from);
  }

  inline ConstructionMsg& operator=(const ConstructionMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstructionMsg& operator=(ConstructionMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConstructionMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConstructionMsg* internal_default_instance() {
    return reinterpret_cast<const ConstructionMsg*>(
               &_ConstructionMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ConstructionMsg& a, ConstructionMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstructionMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConstructionMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConstructionMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConstructionMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ConstructionMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ConstructionMsg& from) {
    ConstructionMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstructionMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.ConstructionMsg";
  }
  protected:
  explicit ConstructionMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kHpFieldNumber = 2,
    kConstructionTypeFieldNumber = 3,
  };
  // int64 team_id = 1;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int32 hp = 2;
  void clear_hp();
  int32_t hp() const;
  void set_hp(int32_t value);
  private:
  int32_t _internal_hp() const;
  void _internal_set_hp(int32_t value);
  public:

  // .protobuf.ConstructionType construction_type = 3;
  void clear_construction_type();
  ::protobuf::ConstructionType construction_type() const;
  void set_construction_type(::protobuf::ConstructionType value);
  private:
  ::protobuf::ConstructionType _internal_construction_type() const;
  void _internal_set_construction_type(::protobuf::ConstructionType value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.ConstructionMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t team_id_;
    int32_t hp_;
    int construction_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class MoveMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MoveMsg) */ {
 public:
  inline MoveMsg() : MoveMsg(nullptr) {}
  ~MoveMsg() override;
  explicit PROTOBUF_CONSTEXPR MoveMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MoveMsg(const MoveMsg& from);
  MoveMsg(MoveMsg&& from) noexcept
    : MoveMsg() {
    *this = ::std::move(from);
  }

  inline MoveMsg& operator=(const MoveMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveMsg& operator=(MoveMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveMsg* internal_default_instance() {
    return reinterpret_cast<const MoveMsg*>(
               &_MoveMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MoveMsg& a, MoveMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(MoveMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MoveMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MoveMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MoveMsg& from) {
    MoveMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.MoveMsg";
  }
  protected:
  explicit MoveMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterIdFieldNumber = 1,
    kAngleFieldNumber = 2,
    kTimeInMillisecondsFieldNumber = 3,
    kTeamIdFieldNumber = 4,
  };
  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // double angle = 2;
  void clear_angle();
  double angle() const;
  void set_angle(double value);
  private:
  double _internal_angle() const;
  void _internal_set_angle(double value);
  public:

  // int64 time_in_milliseconds = 3;
  void clear_time_in_milliseconds();
  int64_t time_in_milliseconds() const;
  void set_time_in_milliseconds(int64_t value);
  private:
  int64_t _internal_time_in_milliseconds() const;
  void _internal_set_time_in_milliseconds(int64_t value);
  public:

  // int64 team_id = 4;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.MoveMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t character_id_;
    double angle_;
    int64_t time_in_milliseconds_;
    int64_t team_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class SendMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.SendMsg) */ {
 public:
  inline SendMsg() : SendMsg(nullptr) {}
  ~SendMsg() override;
  explicit PROTOBUF_CONSTEXPR SendMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SendMsg(const SendMsg& from);
  SendMsg(SendMsg&& from) noexcept
    : SendMsg() {
    *this = ::std::move(from);
  }

  inline SendMsg& operator=(const SendMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMsg& operator=(SendMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMsg& default_instance() {
    return *internal_default_instance();
  }
  enum MessageCase {
    kTextMessage = 3,
    kBinaryMessage = 4,
    MESSAGE_NOT_SET = 0,
  };

  static inline const SendMsg* internal_default_instance() {
    return reinterpret_cast<const SendMsg*>(
               &_SendMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SendMsg& a, SendMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(SendMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SendMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SendMsg& from) {
    SendMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.SendMsg";
  }
  protected:
  explicit SendMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterIdFieldNumber = 1,
    kToCharacterIdFieldNumber = 2,
    kTeamIdFieldNumber = 5,
    kTextMessageFieldNumber = 3,
    kBinaryMessageFieldNumber = 4,
  };
  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // int64 to_character_id = 2;
  void clear_to_character_id();
  int64_t to_character_id() const;
  void set_to_character_id(int64_t value);
  private:
  int64_t _internal_to_character_id() const;
  void _internal_set_to_character_id(int64_t value);
  public:

  // int64 team_id = 5;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // string text_message = 3;
  bool has_text_message() const;
  private:
  bool _internal_has_text_message() const;
  public:
  void clear_text_message();
  const std::string& text_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_text_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_text_message();
  PROTOBUF_NODISCARD std::string* release_text_message();
  void set_allocated_text_message(std::string* text_message);
  private:
  const std::string& _internal_text_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text_message(const std::string& value);
  std::string* _internal_mutable_text_message();
  public:

  // bytes binary_message = 4;
  bool has_binary_message() const;
  private:
  bool _internal_has_binary_message() const;
  public:
  void clear_binary_message();
  const std::string& binary_message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_binary_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_binary_message();
  PROTOBUF_NODISCARD std::string* release_binary_message();
  void set_allocated_binary_message(std::string* binary_message);
  private:
  const std::string& _internal_binary_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_binary_message(const std::string& value);
  std::string* _internal_mutable_binary_message();
  public:

  void clear_message();
  MessageCase message_case() const;
  // @@protoc_insertion_point(class_scope:protobuf.SendMsg)
 private:
  class _Internal;
  void set_has_text_message();
  void set_has_binary_message();

  inline bool has_message() const;
  inline void clear_has_message();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t character_id_;
    int64_t to_character_id_;
    int64_t team_id_;
    union MessageUnion {
      constexpr MessageUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_message_;
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr binary_message_;
    } message_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class AttackMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.AttackMsg) */ {
 public:
  inline AttackMsg() : AttackMsg(nullptr) {}
  ~AttackMsg() override;
  explicit PROTOBUF_CONSTEXPR AttackMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AttackMsg(const AttackMsg& from);
  AttackMsg(AttackMsg&& from) noexcept
    : AttackMsg() {
    *this = ::std::move(from);
  }

  inline AttackMsg& operator=(const AttackMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttackMsg& operator=(AttackMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttackMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttackMsg* internal_default_instance() {
    return reinterpret_cast<const AttackMsg*>(
               &_AttackMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AttackMsg& a, AttackMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AttackMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttackMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttackMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttackMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AttackMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AttackMsg& from) {
    AttackMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttackMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.AttackMsg";
  }
  protected:
  explicit AttackMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterIdFieldNumber = 1,
    kTeamIdFieldNumber = 2,
    kAttackedCharacterIdFieldNumber = 4,
    kAttackedTeamFieldNumber = 5,
    kAttackRangeFieldNumber = 3,
  };
  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // int64 team_id = 2;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int64 attacked_character_id = 4;
  void clear_attacked_character_id();
  int64_t attacked_character_id() const;
  void set_attacked_character_id(int64_t value);
  private:
  int64_t _internal_attacked_character_id() const;
  void _internal_set_attacked_character_id(int64_t value);
  public:

  // int64 attacked_team = 5;
  void clear_attacked_team();
  int64_t attacked_team() const;
  void set_attacked_team(int64_t value);
  private:
  int64_t _internal_attacked_team() const;
  void _internal_set_attacked_team(int64_t value);
  public:

  // int32 attack_range = 3;
  void clear_attack_range();
  int32_t attack_range() const;
  void set_attack_range(int32_t value);
  private:
  int32_t _internal_attack_range() const;
  void _internal_set_attack_range(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.AttackMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t character_id_;
    int64_t team_id_;
    int64_t attacked_character_id_;
    int64_t attacked_team_;
    int32_t attack_range_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class CastMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.CastMsg) */ {
 public:
  inline CastMsg() : CastMsg(nullptr) {}
  ~CastMsg() override;
  explicit PROTOBUF_CONSTEXPR CastMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CastMsg(const CastMsg& from);
  CastMsg(CastMsg&& from) noexcept
    : CastMsg() {
    *this = ::std::move(from);
  }

  inline CastMsg& operator=(const CastMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CastMsg& operator=(CastMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CastMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CastMsg* internal_default_instance() {
    return reinterpret_cast<const CastMsg*>(
               &_CastMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CastMsg& a, CastMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CastMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CastMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CastMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CastMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CastMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CastMsg& from) {
    CastMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CastMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.CastMsg";
  }
  protected:
  explicit CastMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCastedCharacterIdFieldNumber = 3,
    kCharacterIdFieldNumber = 1,
    kSkillIdFieldNumber = 2,
    kTeamIdFieldNumber = 4,
    kAttackRangeFieldNumber = 5,
    kXFieldNumber = 6,
    kAngleFieldNumber = 8,
    kYFieldNumber = 7,
  };
  // repeated int64 casted_character_id = 3;
  int casted_character_id_size() const;
  private:
  int _internal_casted_character_id_size() const;
  public:
  void clear_casted_character_id();
  private:
  int64_t _internal_casted_character_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_casted_character_id() const;
  void _internal_add_casted_character_id(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_casted_character_id();
  public:
  int64_t casted_character_id(int index) const;
  void set_casted_character_id(int index, int64_t value);
  void add_casted_character_id(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      casted_character_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_casted_character_id();

  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // int64 skill_id = 2;
  void clear_skill_id();
  int64_t skill_id() const;
  void set_skill_id(int64_t value);
  private:
  int64_t _internal_skill_id() const;
  void _internal_set_skill_id(int64_t value);
  public:

  // int64 team_id = 4;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int32 attack_range = 5;
  void clear_attack_range();
  int32_t attack_range() const;
  void set_attack_range(int32_t value);
  private:
  int32_t _internal_attack_range() const;
  void _internal_set_attack_range(int32_t value);
  public:

  // optional int32 x = 6;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // optional double angle = 8;
  bool has_angle() const;
  private:
  bool _internal_has_angle() const;
  public:
  void clear_angle();
  double angle() const;
  void set_angle(double value);
  private:
  double _internal_angle() const;
  void _internal_set_angle(double value);
  public:

  // optional int32 y = 7;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.CastMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > casted_character_id_;
    mutable std::atomic<int> _casted_character_id_cached_byte_size_;
    int64_t character_id_;
    int64_t skill_id_;
    int64_t team_id_;
    int32_t attack_range_;
    int32_t x_;
    double angle_;
    int32_t y_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class AttackConstructionMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.AttackConstructionMsg) */ {
 public:
  inline AttackConstructionMsg() : AttackConstructionMsg(nullptr) {}
  ~AttackConstructionMsg() override;
  explicit PROTOBUF_CONSTEXPR AttackConstructionMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AttackConstructionMsg(const AttackConstructionMsg& from);
  AttackConstructionMsg(AttackConstructionMsg&& from) noexcept
    : AttackConstructionMsg() {
    *this = ::std::move(from);
  }

  inline AttackConstructionMsg& operator=(const AttackConstructionMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttackConstructionMsg& operator=(AttackConstructionMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttackConstructionMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttackConstructionMsg* internal_default_instance() {
    return reinterpret_cast<const AttackConstructionMsg*>(
               &_AttackConstructionMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(AttackConstructionMsg& a, AttackConstructionMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AttackConstructionMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttackConstructionMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttackConstructionMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttackConstructionMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AttackConstructionMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AttackConstructionMsg& from) {
    AttackConstructionMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttackConstructionMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.AttackConstructionMsg";
  }
  protected:
  explicit AttackConstructionMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // int64 team_id = 1;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int64 character_id = 2;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.AttackConstructionMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t team_id_;
    int64_t character_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class AttackAdditionResourceMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.AttackAdditionResourceMsg) */ {
 public:
  inline AttackAdditionResourceMsg() : AttackAdditionResourceMsg(nullptr) {}
  ~AttackAdditionResourceMsg() override;
  explicit PROTOBUF_CONSTEXPR AttackAdditionResourceMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AttackAdditionResourceMsg(const AttackAdditionResourceMsg& from);
  AttackAdditionResourceMsg(AttackAdditionResourceMsg&& from) noexcept
    : AttackAdditionResourceMsg() {
    *this = ::std::move(from);
  }

  inline AttackAdditionResourceMsg& operator=(const AttackAdditionResourceMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttackAdditionResourceMsg& operator=(AttackAdditionResourceMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttackAdditionResourceMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttackAdditionResourceMsg* internal_default_instance() {
    return reinterpret_cast<const AttackAdditionResourceMsg*>(
               &_AttackAdditionResourceMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(AttackAdditionResourceMsg& a, AttackAdditionResourceMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(AttackAdditionResourceMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttackAdditionResourceMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttackAdditionResourceMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttackAdditionResourceMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AttackAdditionResourceMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AttackAdditionResourceMsg& from) {
    AttackAdditionResourceMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttackAdditionResourceMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.AttackAdditionResourceMsg";
  }
  protected:
  explicit AttackAdditionResourceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kCharacterIdFieldNumber = 2,
  };
  // int64 team_id = 1;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // int64 character_id = 2;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.AttackAdditionResourceMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t team_id_;
    int64_t character_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class ConstructMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.ConstructMsg) */ {
 public:
  inline ConstructMsg() : ConstructMsg(nullptr) {}
  ~ConstructMsg() override;
  explicit PROTOBUF_CONSTEXPR ConstructMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ConstructMsg(const ConstructMsg& from);
  ConstructMsg(ConstructMsg&& from) noexcept
    : ConstructMsg() {
    *this = ::std::move(from);
  }

  inline ConstructMsg& operator=(const ConstructMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstructMsg& operator=(ConstructMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConstructMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConstructMsg* internal_default_instance() {
    return reinterpret_cast<const ConstructMsg*>(
               &_ConstructMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ConstructMsg& a, ConstructMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstructMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConstructMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConstructMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConstructMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ConstructMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ConstructMsg& from) {
    ConstructMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstructMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.ConstructMsg";
  }
  protected:
  explicit ConstructMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterIdFieldNumber = 1,
    kTeamIdFieldNumber = 2,
    kConstructionTypeFieldNumber = 3,
  };
  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // int64 team_id = 2;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // .protobuf.ConstructionType construction_type = 3;
  void clear_construction_type();
  ::protobuf::ConstructionType construction_type() const;
  void set_construction_type(::protobuf::ConstructionType value);
  private:
  ::protobuf::ConstructionType _internal_construction_type() const;
  void _internal_set_construction_type(::protobuf::ConstructionType value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.ConstructMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t character_id_;
    int64_t team_id_;
    int construction_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class EquipMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.EquipMsg) */ {
 public:
  inline EquipMsg() : EquipMsg(nullptr) {}
  ~EquipMsg() override;
  explicit PROTOBUF_CONSTEXPR EquipMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EquipMsg(const EquipMsg& from);
  EquipMsg(EquipMsg&& from) noexcept
    : EquipMsg() {
    *this = ::std::move(from);
  }

  inline EquipMsg& operator=(const EquipMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline EquipMsg& operator=(EquipMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EquipMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const EquipMsg* internal_default_instance() {
    return reinterpret_cast<const EquipMsg*>(
               &_EquipMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(EquipMsg& a, EquipMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(EquipMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EquipMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EquipMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EquipMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EquipMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EquipMsg& from) {
    EquipMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EquipMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.EquipMsg";
  }
  protected:
  explicit EquipMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterIdFieldNumber = 1,
    kTeamIdFieldNumber = 3,
    kEquipmentTypeFieldNumber = 2,
  };
  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // int64 team_id = 3;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // .protobuf.EquipmentType equipment_type = 2;
  void clear_equipment_type();
  ::protobuf::EquipmentType equipment_type() const;
  void set_equipment_type(::protobuf::EquipmentType value);
  private:
  ::protobuf::EquipmentType _internal_equipment_type() const;
  void _internal_set_equipment_type(::protobuf::EquipmentType value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.EquipMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t character_id_;
    int64_t team_id_;
    int equipment_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class RecoverMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.RecoverMsg) */ {
 public:
  inline RecoverMsg() : RecoverMsg(nullptr) {}
  ~RecoverMsg() override;
  explicit PROTOBUF_CONSTEXPR RecoverMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RecoverMsg(const RecoverMsg& from);
  RecoverMsg(RecoverMsg&& from) noexcept
    : RecoverMsg() {
    *this = ::std::move(from);
  }

  inline RecoverMsg& operator=(const RecoverMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecoverMsg& operator=(RecoverMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecoverMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecoverMsg* internal_default_instance() {
    return reinterpret_cast<const RecoverMsg*>(
               &_RecoverMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(RecoverMsg& a, RecoverMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(RecoverMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecoverMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecoverMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RecoverMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RecoverMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const RecoverMsg& from) {
    RecoverMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecoverMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.RecoverMsg";
  }
  protected:
  explicit RecoverMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterIdFieldNumber = 1,
    kRecoveredHpFieldNumber = 2,
    kTeamIdFieldNumber = 3,
  };
  // int64 character_id = 1;
  void clear_character_id();
  int64_t character_id() const;
  void set_character_id(int64_t value);
  private:
  int64_t _internal_character_id() const;
  void _internal_set_character_id(int64_t value);
  public:

  // int64 recovered_hp = 2;
  void clear_recovered_hp();
  int64_t recovered_hp() const;
  void set_recovered_hp(int64_t value);
  private:
  int64_t _internal_recovered_hp() const;
  void _internal_set_recovered_hp(int64_t value);
  public:

  // int64 team_id = 3;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.RecoverMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t character_id_;
    int64_t recovered_hp_;
    int64_t team_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// -------------------------------------------------------------------

class CreatCharacterMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.CreatCharacterMsg) */ {
 public:
  inline CreatCharacterMsg() : CreatCharacterMsg(nullptr) {}
  ~CreatCharacterMsg() override;
  explicit PROTOBUF_CONSTEXPR CreatCharacterMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreatCharacterMsg(const CreatCharacterMsg& from);
  CreatCharacterMsg(CreatCharacterMsg&& from) noexcept
    : CreatCharacterMsg() {
    *this = ::std::move(from);
  }

  inline CreatCharacterMsg& operator=(const CreatCharacterMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatCharacterMsg& operator=(CreatCharacterMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreatCharacterMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreatCharacterMsg* internal_default_instance() {
    return reinterpret_cast<const CreatCharacterMsg*>(
               &_CreatCharacterMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CreatCharacterMsg& a, CreatCharacterMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatCharacterMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatCharacterMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreatCharacterMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreatCharacterMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreatCharacterMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreatCharacterMsg& from) {
    CreatCharacterMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatCharacterMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf.CreatCharacterMsg";
  }
  protected:
  explicit CreatCharacterMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 2,
    kCharacterTypeFieldNumber = 1,
    kBirthpointIndexFieldNumber = 3,
  };
  // int64 team_id = 2;
  void clear_team_id();
  int64_t team_id() const;
  void set_team_id(int64_t value);
  private:
  int64_t _internal_team_id() const;
  void _internal_set_team_id(int64_t value);
  public:

  // .protobuf.CharacterType character_type = 1;
  void clear_character_type();
  ::protobuf::CharacterType character_type() const;
  void set_character_type(::protobuf::CharacterType value);
  private:
  ::protobuf::CharacterType _internal_character_type() const;
  void _internal_set_character_type(::protobuf::CharacterType value);
  public:

  // int32 birthpoint_index = 3;
  void clear_birthpoint_index();
  int32_t birthpoint_index() const;
  void set_birthpoint_index(int32_t value);
  private:
  int32_t _internal_birthpoint_index() const;
  void _internal_set_birthpoint_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf.CreatCharacterMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t team_id_;
    int character_type_;
    int32_t birthpoint_index_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Message2Server_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NullRequest

// -------------------------------------------------------------------

// IDMsg

// int64 character_id = 1;
inline void IDMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t IDMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t IDMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.IDMsg.character_id)
  return _internal_character_id();
}
inline void IDMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void IDMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.IDMsg.character_id)
}

// int64 team_id = 2;
inline void IDMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t IDMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t IDMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.IDMsg.team_id)
  return _internal_team_id();
}
inline void IDMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void IDMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.IDMsg.team_id)
}

// -------------------------------------------------------------------

// CharacterMsg

// int64 character_id = 1;
inline void CharacterMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t CharacterMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t CharacterMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.CharacterMsg.character_id)
  return _internal_character_id();
}
inline void CharacterMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void CharacterMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.CharacterMsg.character_id)
}

// int64 team_id = 2;
inline void CharacterMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t CharacterMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t CharacterMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.CharacterMsg.team_id)
  return _internal_team_id();
}
inline void CharacterMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void CharacterMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.CharacterMsg.team_id)
}

// .protobuf.CharacterType character_type = 3;
inline void CharacterMsg::clear_character_type() {
  _impl_.character_type_ = 0;
}
inline ::protobuf::CharacterType CharacterMsg::_internal_character_type() const {
  return static_cast< ::protobuf::CharacterType >(_impl_.character_type_);
}
inline ::protobuf::CharacterType CharacterMsg::character_type() const {
  // @@protoc_insertion_point(field_get:protobuf.CharacterMsg.character_type)
  return _internal_character_type();
}
inline void CharacterMsg::_internal_set_character_type(::protobuf::CharacterType value) {
  
  _impl_.character_type_ = value;
}
inline void CharacterMsg::set_character_type(::protobuf::CharacterType value) {
  _internal_set_character_type(value);
  // @@protoc_insertion_point(field_set:protobuf.CharacterMsg.character_type)
}

// int32 side_flag = 4;
inline void CharacterMsg::clear_side_flag() {
  _impl_.side_flag_ = 0;
}
inline int32_t CharacterMsg::_internal_side_flag() const {
  return _impl_.side_flag_;
}
inline int32_t CharacterMsg::side_flag() const {
  // @@protoc_insertion_point(field_get:protobuf.CharacterMsg.side_flag)
  return _internal_side_flag();
}
inline void CharacterMsg::_internal_set_side_flag(int32_t value) {
  
  _impl_.side_flag_ = value;
}
inline void CharacterMsg::set_side_flag(int32_t value) {
  _internal_set_side_flag(value);
  // @@protoc_insertion_point(field_set:protobuf.CharacterMsg.side_flag)
}

// -------------------------------------------------------------------

// EconomyReourceMsg

// int64 team_id = 1;
inline void EconomyReourceMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t EconomyReourceMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t EconomyReourceMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.EconomyReourceMsg.team_id)
  return _internal_team_id();
}
inline void EconomyReourceMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void EconomyReourceMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.EconomyReourceMsg.team_id)
}

// int32 process = 2;
inline void EconomyReourceMsg::clear_process() {
  _impl_.process_ = 0;
}
inline int32_t EconomyReourceMsg::_internal_process() const {
  return _impl_.process_;
}
inline int32_t EconomyReourceMsg::process() const {
  // @@protoc_insertion_point(field_get:protobuf.EconomyReourceMsg.process)
  return _internal_process();
}
inline void EconomyReourceMsg::_internal_set_process(int32_t value) {
  
  _impl_.process_ = value;
}
inline void EconomyReourceMsg::set_process(int32_t value) {
  _internal_set_process(value);
  // @@protoc_insertion_point(field_set:protobuf.EconomyReourceMsg.process)
}

// .protobuf.EconomyResourceType economy_resource_type = 3;
inline void EconomyReourceMsg::clear_economy_resource_type() {
  _impl_.economy_resource_type_ = 0;
}
inline ::protobuf::EconomyResourceType EconomyReourceMsg::_internal_economy_resource_type() const {
  return static_cast< ::protobuf::EconomyResourceType >(_impl_.economy_resource_type_);
}
inline ::protobuf::EconomyResourceType EconomyReourceMsg::economy_resource_type() const {
  // @@protoc_insertion_point(field_get:protobuf.EconomyReourceMsg.economy_resource_type)
  return _internal_economy_resource_type();
}
inline void EconomyReourceMsg::_internal_set_economy_resource_type(::protobuf::EconomyResourceType value) {
  
  _impl_.economy_resource_type_ = value;
}
inline void EconomyReourceMsg::set_economy_resource_type(::protobuf::EconomyResourceType value) {
  _internal_set_economy_resource_type(value);
  // @@protoc_insertion_point(field_set:protobuf.EconomyReourceMsg.economy_resource_type)
}

// -------------------------------------------------------------------

// AdditionResourceMsg

// int64 team_id = 1;
inline void AdditionResourceMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t AdditionResourceMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t AdditionResourceMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.AdditionResourceMsg.team_id)
  return _internal_team_id();
}
inline void AdditionResourceMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void AdditionResourceMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.AdditionResourceMsg.team_id)
}

// int32 hp = 2;
inline void AdditionResourceMsg::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t AdditionResourceMsg::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t AdditionResourceMsg::hp() const {
  // @@protoc_insertion_point(field_get:protobuf.AdditionResourceMsg.hp)
  return _internal_hp();
}
inline void AdditionResourceMsg::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void AdditionResourceMsg::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.AdditionResourceMsg.hp)
}

// .protobuf.AdditionResourceType addition_resource_type = 3;
inline void AdditionResourceMsg::clear_addition_resource_type() {
  _impl_.addition_resource_type_ = 0;
}
inline ::protobuf::AdditionResourceType AdditionResourceMsg::_internal_addition_resource_type() const {
  return static_cast< ::protobuf::AdditionResourceType >(_impl_.addition_resource_type_);
}
inline ::protobuf::AdditionResourceType AdditionResourceMsg::addition_resource_type() const {
  // @@protoc_insertion_point(field_get:protobuf.AdditionResourceMsg.addition_resource_type)
  return _internal_addition_resource_type();
}
inline void AdditionResourceMsg::_internal_set_addition_resource_type(::protobuf::AdditionResourceType value) {
  
  _impl_.addition_resource_type_ = value;
}
inline void AdditionResourceMsg::set_addition_resource_type(::protobuf::AdditionResourceType value) {
  _internal_set_addition_resource_type(value);
  // @@protoc_insertion_point(field_set:protobuf.AdditionResourceMsg.addition_resource_type)
}

// -------------------------------------------------------------------

// ConstructionMsg

// int64 team_id = 1;
inline void ConstructionMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t ConstructionMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t ConstructionMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.ConstructionMsg.team_id)
  return _internal_team_id();
}
inline void ConstructionMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void ConstructionMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.ConstructionMsg.team_id)
}

// int32 hp = 2;
inline void ConstructionMsg::clear_hp() {
  _impl_.hp_ = 0;
}
inline int32_t ConstructionMsg::_internal_hp() const {
  return _impl_.hp_;
}
inline int32_t ConstructionMsg::hp() const {
  // @@protoc_insertion_point(field_get:protobuf.ConstructionMsg.hp)
  return _internal_hp();
}
inline void ConstructionMsg::_internal_set_hp(int32_t value) {
  
  _impl_.hp_ = value;
}
inline void ConstructionMsg::set_hp(int32_t value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.ConstructionMsg.hp)
}

// .protobuf.ConstructionType construction_type = 3;
inline void ConstructionMsg::clear_construction_type() {
  _impl_.construction_type_ = 0;
}
inline ::protobuf::ConstructionType ConstructionMsg::_internal_construction_type() const {
  return static_cast< ::protobuf::ConstructionType >(_impl_.construction_type_);
}
inline ::protobuf::ConstructionType ConstructionMsg::construction_type() const {
  // @@protoc_insertion_point(field_get:protobuf.ConstructionMsg.construction_type)
  return _internal_construction_type();
}
inline void ConstructionMsg::_internal_set_construction_type(::protobuf::ConstructionType value) {
  
  _impl_.construction_type_ = value;
}
inline void ConstructionMsg::set_construction_type(::protobuf::ConstructionType value) {
  _internal_set_construction_type(value);
  // @@protoc_insertion_point(field_set:protobuf.ConstructionMsg.construction_type)
}

// -------------------------------------------------------------------

// MoveMsg

// int64 character_id = 1;
inline void MoveMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t MoveMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t MoveMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MoveMsg.character_id)
  return _internal_character_id();
}
inline void MoveMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void MoveMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MoveMsg.character_id)
}

// double angle = 2;
inline void MoveMsg::clear_angle() {
  _impl_.angle_ = 0;
}
inline double MoveMsg::_internal_angle() const {
  return _impl_.angle_;
}
inline double MoveMsg::angle() const {
  // @@protoc_insertion_point(field_get:protobuf.MoveMsg.angle)
  return _internal_angle();
}
inline void MoveMsg::_internal_set_angle(double value) {
  
  _impl_.angle_ = value;
}
inline void MoveMsg::set_angle(double value) {
  _internal_set_angle(value);
  // @@protoc_insertion_point(field_set:protobuf.MoveMsg.angle)
}

// int64 time_in_milliseconds = 3;
inline void MoveMsg::clear_time_in_milliseconds() {
  _impl_.time_in_milliseconds_ = int64_t{0};
}
inline int64_t MoveMsg::_internal_time_in_milliseconds() const {
  return _impl_.time_in_milliseconds_;
}
inline int64_t MoveMsg::time_in_milliseconds() const {
  // @@protoc_insertion_point(field_get:protobuf.MoveMsg.time_in_milliseconds)
  return _internal_time_in_milliseconds();
}
inline void MoveMsg::_internal_set_time_in_milliseconds(int64_t value) {
  
  _impl_.time_in_milliseconds_ = value;
}
inline void MoveMsg::set_time_in_milliseconds(int64_t value) {
  _internal_set_time_in_milliseconds(value);
  // @@protoc_insertion_point(field_set:protobuf.MoveMsg.time_in_milliseconds)
}

// int64 team_id = 4;
inline void MoveMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t MoveMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t MoveMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MoveMsg.team_id)
  return _internal_team_id();
}
inline void MoveMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void MoveMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.MoveMsg.team_id)
}

// -------------------------------------------------------------------

// SendMsg

// int64 character_id = 1;
inline void SendMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t SendMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t SendMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.SendMsg.character_id)
  return _internal_character_id();
}
inline void SendMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void SendMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.SendMsg.character_id)
}

// int64 to_character_id = 2;
inline void SendMsg::clear_to_character_id() {
  _impl_.to_character_id_ = int64_t{0};
}
inline int64_t SendMsg::_internal_to_character_id() const {
  return _impl_.to_character_id_;
}
inline int64_t SendMsg::to_character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.SendMsg.to_character_id)
  return _internal_to_character_id();
}
inline void SendMsg::_internal_set_to_character_id(int64_t value) {
  
  _impl_.to_character_id_ = value;
}
inline void SendMsg::set_to_character_id(int64_t value) {
  _internal_set_to_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.SendMsg.to_character_id)
}

// string text_message = 3;
inline bool SendMsg::_internal_has_text_message() const {
  return message_case() == kTextMessage;
}
inline bool SendMsg::has_text_message() const {
  return _internal_has_text_message();
}
inline void SendMsg::set_has_text_message() {
  _impl_._oneof_case_[0] = kTextMessage;
}
inline void SendMsg::clear_text_message() {
  if (_internal_has_text_message()) {
    _impl_.message_.text_message_.Destroy();
    clear_has_message();
  }
}
inline const std::string& SendMsg::text_message() const {
  // @@protoc_insertion_point(field_get:protobuf.SendMsg.text_message)
  return _internal_text_message();
}
template <typename ArgT0, typename... ArgT>
inline void SendMsg::set_text_message(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_text_message()) {
    clear_message();
    set_has_text_message();
    _impl_.message_.text_message_.InitDefault();
  }
  _impl_.message_.text_message_.Set( static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf.SendMsg.text_message)
}
inline std::string* SendMsg::mutable_text_message() {
  std::string* _s = _internal_mutable_text_message();
  // @@protoc_insertion_point(field_mutable:protobuf.SendMsg.text_message)
  return _s;
}
inline const std::string& SendMsg::_internal_text_message() const {
  if (_internal_has_text_message()) {
    return _impl_.message_.text_message_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void SendMsg::_internal_set_text_message(const std::string& value) {
  if (!_internal_has_text_message()) {
    clear_message();
    set_has_text_message();
    _impl_.message_.text_message_.InitDefault();
  }
  _impl_.message_.text_message_.Set(value, GetArenaForAllocation());
}
inline std::string* SendMsg::_internal_mutable_text_message() {
  if (!_internal_has_text_message()) {
    clear_message();
    set_has_text_message();
    _impl_.message_.text_message_.InitDefault();
  }
  return _impl_.message_.text_message_.Mutable(      GetArenaForAllocation());
}
inline std::string* SendMsg::release_text_message() {
  // @@protoc_insertion_point(field_release:protobuf.SendMsg.text_message)
  if (_internal_has_text_message()) {
    clear_has_message();
    return _impl_.message_.text_message_.Release();
  } else {
    return nullptr;
  }
}
inline void SendMsg::set_allocated_text_message(std::string* text_message) {
  if (has_message()) {
    clear_message();
  }
  if (text_message != nullptr) {
    set_has_text_message();
    _impl_.message_.text_message_.InitAllocated(text_message, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.SendMsg.text_message)
}

// bytes binary_message = 4;
inline bool SendMsg::_internal_has_binary_message() const {
  return message_case() == kBinaryMessage;
}
inline bool SendMsg::has_binary_message() const {
  return _internal_has_binary_message();
}
inline void SendMsg::set_has_binary_message() {
  _impl_._oneof_case_[0] = kBinaryMessage;
}
inline void SendMsg::clear_binary_message() {
  if (_internal_has_binary_message()) {
    _impl_.message_.binary_message_.Destroy();
    clear_has_message();
  }
}
inline const std::string& SendMsg::binary_message() const {
  // @@protoc_insertion_point(field_get:protobuf.SendMsg.binary_message)
  return _internal_binary_message();
}
template <typename ArgT0, typename... ArgT>
inline void SendMsg::set_binary_message(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_binary_message()) {
    clear_message();
    set_has_binary_message();
    _impl_.message_.binary_message_.InitDefault();
  }
  _impl_.message_.binary_message_.SetBytes( static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf.SendMsg.binary_message)
}
inline std::string* SendMsg::mutable_binary_message() {
  std::string* _s = _internal_mutable_binary_message();
  // @@protoc_insertion_point(field_mutable:protobuf.SendMsg.binary_message)
  return _s;
}
inline const std::string& SendMsg::_internal_binary_message() const {
  if (_internal_has_binary_message()) {
    return _impl_.message_.binary_message_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void SendMsg::_internal_set_binary_message(const std::string& value) {
  if (!_internal_has_binary_message()) {
    clear_message();
    set_has_binary_message();
    _impl_.message_.binary_message_.InitDefault();
  }
  _impl_.message_.binary_message_.Set(value, GetArenaForAllocation());
}
inline std::string* SendMsg::_internal_mutable_binary_message() {
  if (!_internal_has_binary_message()) {
    clear_message();
    set_has_binary_message();
    _impl_.message_.binary_message_.InitDefault();
  }
  return _impl_.message_.binary_message_.Mutable(      GetArenaForAllocation());
}
inline std::string* SendMsg::release_binary_message() {
  // @@protoc_insertion_point(field_release:protobuf.SendMsg.binary_message)
  if (_internal_has_binary_message()) {
    clear_has_message();
    return _impl_.message_.binary_message_.Release();
  } else {
    return nullptr;
  }
}
inline void SendMsg::set_allocated_binary_message(std::string* binary_message) {
  if (has_message()) {
    clear_message();
  }
  if (binary_message != nullptr) {
    set_has_binary_message();
    _impl_.message_.binary_message_.InitAllocated(binary_message, GetArenaForAllocation());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.SendMsg.binary_message)
}

// int64 team_id = 5;
inline void SendMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t SendMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t SendMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.SendMsg.team_id)
  return _internal_team_id();
}
inline void SendMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void SendMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.SendMsg.team_id)
}

inline bool SendMsg::has_message() const {
  return message_case() != MESSAGE_NOT_SET;
}
inline void SendMsg::clear_has_message() {
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}
inline SendMsg::MessageCase SendMsg::message_case() const {
  return SendMsg::MessageCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// AttackMsg

// int64 character_id = 1;
inline void AttackMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t AttackMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t AttackMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackMsg.character_id)
  return _internal_character_id();
}
inline void AttackMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void AttackMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackMsg.character_id)
}

// int64 team_id = 2;
inline void AttackMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t AttackMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t AttackMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackMsg.team_id)
  return _internal_team_id();
}
inline void AttackMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void AttackMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackMsg.team_id)
}

// int32 attack_range = 3;
inline void AttackMsg::clear_attack_range() {
  _impl_.attack_range_ = 0;
}
inline int32_t AttackMsg::_internal_attack_range() const {
  return _impl_.attack_range_;
}
inline int32_t AttackMsg::attack_range() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackMsg.attack_range)
  return _internal_attack_range();
}
inline void AttackMsg::_internal_set_attack_range(int32_t value) {
  
  _impl_.attack_range_ = value;
}
inline void AttackMsg::set_attack_range(int32_t value) {
  _internal_set_attack_range(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackMsg.attack_range)
}

// int64 attacked_character_id = 4;
inline void AttackMsg::clear_attacked_character_id() {
  _impl_.attacked_character_id_ = int64_t{0};
}
inline int64_t AttackMsg::_internal_attacked_character_id() const {
  return _impl_.attacked_character_id_;
}
inline int64_t AttackMsg::attacked_character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackMsg.attacked_character_id)
  return _internal_attacked_character_id();
}
inline void AttackMsg::_internal_set_attacked_character_id(int64_t value) {
  
  _impl_.attacked_character_id_ = value;
}
inline void AttackMsg::set_attacked_character_id(int64_t value) {
  _internal_set_attacked_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackMsg.attacked_character_id)
}

// int64 attacked_team = 5;
inline void AttackMsg::clear_attacked_team() {
  _impl_.attacked_team_ = int64_t{0};
}
inline int64_t AttackMsg::_internal_attacked_team() const {
  return _impl_.attacked_team_;
}
inline int64_t AttackMsg::attacked_team() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackMsg.attacked_team)
  return _internal_attacked_team();
}
inline void AttackMsg::_internal_set_attacked_team(int64_t value) {
  
  _impl_.attacked_team_ = value;
}
inline void AttackMsg::set_attacked_team(int64_t value) {
  _internal_set_attacked_team(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackMsg.attacked_team)
}

// -------------------------------------------------------------------

// CastMsg

// int64 character_id = 1;
inline void CastMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t CastMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t CastMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.CastMsg.character_id)
  return _internal_character_id();
}
inline void CastMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void CastMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.CastMsg.character_id)
}

// int64 skill_id = 2;
inline void CastMsg::clear_skill_id() {
  _impl_.skill_id_ = int64_t{0};
}
inline int64_t CastMsg::_internal_skill_id() const {
  return _impl_.skill_id_;
}
inline int64_t CastMsg::skill_id() const {
  // @@protoc_insertion_point(field_get:protobuf.CastMsg.skill_id)
  return _internal_skill_id();
}
inline void CastMsg::_internal_set_skill_id(int64_t value) {
  
  _impl_.skill_id_ = value;
}
inline void CastMsg::set_skill_id(int64_t value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:protobuf.CastMsg.skill_id)
}

// repeated int64 casted_character_id = 3;
inline int CastMsg::_internal_casted_character_id_size() const {
  return _impl_.casted_character_id_.size();
}
inline int CastMsg::casted_character_id_size() const {
  return _internal_casted_character_id_size();
}
inline void CastMsg::clear_casted_character_id() {
  _impl_.casted_character_id_.Clear();
}
inline int64_t CastMsg::_internal_casted_character_id(int index) const {
  return _impl_.casted_character_id_.Get(index);
}
inline int64_t CastMsg::casted_character_id(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.CastMsg.casted_character_id)
  return _internal_casted_character_id(index);
}
inline void CastMsg::set_casted_character_id(int index, int64_t value) {
  _impl_.casted_character_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.CastMsg.casted_character_id)
}
inline void CastMsg::_internal_add_casted_character_id(int64_t value) {
  _impl_.casted_character_id_.Add(value);
}
inline void CastMsg::add_casted_character_id(int64_t value) {
  _internal_add_casted_character_id(value);
  // @@protoc_insertion_point(field_add:protobuf.CastMsg.casted_character_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
CastMsg::_internal_casted_character_id() const {
  return _impl_.casted_character_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
CastMsg::casted_character_id() const {
  // @@protoc_insertion_point(field_list:protobuf.CastMsg.casted_character_id)
  return _internal_casted_character_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
CastMsg::_internal_mutable_casted_character_id() {
  return &_impl_.casted_character_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
CastMsg::mutable_casted_character_id() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.CastMsg.casted_character_id)
  return _internal_mutable_casted_character_id();
}

// int64 team_id = 4;
inline void CastMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t CastMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t CastMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.CastMsg.team_id)
  return _internal_team_id();
}
inline void CastMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void CastMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.CastMsg.team_id)
}

// int32 attack_range = 5;
inline void CastMsg::clear_attack_range() {
  _impl_.attack_range_ = 0;
}
inline int32_t CastMsg::_internal_attack_range() const {
  return _impl_.attack_range_;
}
inline int32_t CastMsg::attack_range() const {
  // @@protoc_insertion_point(field_get:protobuf.CastMsg.attack_range)
  return _internal_attack_range();
}
inline void CastMsg::_internal_set_attack_range(int32_t value) {
  
  _impl_.attack_range_ = value;
}
inline void CastMsg::set_attack_range(int32_t value) {
  _internal_set_attack_range(value);
  // @@protoc_insertion_point(field_set:protobuf.CastMsg.attack_range)
}

// optional int32 x = 6;
inline bool CastMsg::_internal_has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CastMsg::has_x() const {
  return _internal_has_x();
}
inline void CastMsg::clear_x() {
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CastMsg::_internal_x() const {
  return _impl_.x_;
}
inline int32_t CastMsg::x() const {
  // @@protoc_insertion_point(field_get:protobuf.CastMsg.x)
  return _internal_x();
}
inline void CastMsg::_internal_set_x(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.x_ = value;
}
inline void CastMsg::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.CastMsg.x)
}

// optional int32 y = 7;
inline bool CastMsg::_internal_has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CastMsg::has_y() const {
  return _internal_has_y();
}
inline void CastMsg::clear_y() {
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CastMsg::_internal_y() const {
  return _impl_.y_;
}
inline int32_t CastMsg::y() const {
  // @@protoc_insertion_point(field_get:protobuf.CastMsg.y)
  return _internal_y();
}
inline void CastMsg::_internal_set_y(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.y_ = value;
}
inline void CastMsg::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.CastMsg.y)
}

// optional double angle = 8;
inline bool CastMsg::_internal_has_angle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CastMsg::has_angle() const {
  return _internal_has_angle();
}
inline void CastMsg::clear_angle() {
  _impl_.angle_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double CastMsg::_internal_angle() const {
  return _impl_.angle_;
}
inline double CastMsg::angle() const {
  // @@protoc_insertion_point(field_get:protobuf.CastMsg.angle)
  return _internal_angle();
}
inline void CastMsg::_internal_set_angle(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.angle_ = value;
}
inline void CastMsg::set_angle(double value) {
  _internal_set_angle(value);
  // @@protoc_insertion_point(field_set:protobuf.CastMsg.angle)
}

// -------------------------------------------------------------------

// AttackConstructionMsg

// int64 team_id = 1;
inline void AttackConstructionMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t AttackConstructionMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t AttackConstructionMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackConstructionMsg.team_id)
  return _internal_team_id();
}
inline void AttackConstructionMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void AttackConstructionMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackConstructionMsg.team_id)
}

// int64 character_id = 2;
inline void AttackConstructionMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t AttackConstructionMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t AttackConstructionMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackConstructionMsg.character_id)
  return _internal_character_id();
}
inline void AttackConstructionMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void AttackConstructionMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackConstructionMsg.character_id)
}

// -------------------------------------------------------------------

// AttackAdditionResourceMsg

// int64 team_id = 1;
inline void AttackAdditionResourceMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t AttackAdditionResourceMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t AttackAdditionResourceMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackAdditionResourceMsg.team_id)
  return _internal_team_id();
}
inline void AttackAdditionResourceMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void AttackAdditionResourceMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackAdditionResourceMsg.team_id)
}

// int64 character_id = 2;
inline void AttackAdditionResourceMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t AttackAdditionResourceMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t AttackAdditionResourceMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.AttackAdditionResourceMsg.character_id)
  return _internal_character_id();
}
inline void AttackAdditionResourceMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void AttackAdditionResourceMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.AttackAdditionResourceMsg.character_id)
}

// -------------------------------------------------------------------

// ConstructMsg

// int64 character_id = 1;
inline void ConstructMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t ConstructMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t ConstructMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.ConstructMsg.character_id)
  return _internal_character_id();
}
inline void ConstructMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void ConstructMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.ConstructMsg.character_id)
}

// int64 team_id = 2;
inline void ConstructMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t ConstructMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t ConstructMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.ConstructMsg.team_id)
  return _internal_team_id();
}
inline void ConstructMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void ConstructMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.ConstructMsg.team_id)
}

// .protobuf.ConstructionType construction_type = 3;
inline void ConstructMsg::clear_construction_type() {
  _impl_.construction_type_ = 0;
}
inline ::protobuf::ConstructionType ConstructMsg::_internal_construction_type() const {
  return static_cast< ::protobuf::ConstructionType >(_impl_.construction_type_);
}
inline ::protobuf::ConstructionType ConstructMsg::construction_type() const {
  // @@protoc_insertion_point(field_get:protobuf.ConstructMsg.construction_type)
  return _internal_construction_type();
}
inline void ConstructMsg::_internal_set_construction_type(::protobuf::ConstructionType value) {
  
  _impl_.construction_type_ = value;
}
inline void ConstructMsg::set_construction_type(::protobuf::ConstructionType value) {
  _internal_set_construction_type(value);
  // @@protoc_insertion_point(field_set:protobuf.ConstructMsg.construction_type)
}

// -------------------------------------------------------------------

// EquipMsg

// int64 character_id = 1;
inline void EquipMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t EquipMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t EquipMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.EquipMsg.character_id)
  return _internal_character_id();
}
inline void EquipMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void EquipMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.EquipMsg.character_id)
}

// .protobuf.EquipmentType equipment_type = 2;
inline void EquipMsg::clear_equipment_type() {
  _impl_.equipment_type_ = 0;
}
inline ::protobuf::EquipmentType EquipMsg::_internal_equipment_type() const {
  return static_cast< ::protobuf::EquipmentType >(_impl_.equipment_type_);
}
inline ::protobuf::EquipmentType EquipMsg::equipment_type() const {
  // @@protoc_insertion_point(field_get:protobuf.EquipMsg.equipment_type)
  return _internal_equipment_type();
}
inline void EquipMsg::_internal_set_equipment_type(::protobuf::EquipmentType value) {
  
  _impl_.equipment_type_ = value;
}
inline void EquipMsg::set_equipment_type(::protobuf::EquipmentType value) {
  _internal_set_equipment_type(value);
  // @@protoc_insertion_point(field_set:protobuf.EquipMsg.equipment_type)
}

// int64 team_id = 3;
inline void EquipMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t EquipMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t EquipMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.EquipMsg.team_id)
  return _internal_team_id();
}
inline void EquipMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void EquipMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.EquipMsg.team_id)
}

// -------------------------------------------------------------------

// RecoverMsg

// int64 character_id = 1;
inline void RecoverMsg::clear_character_id() {
  _impl_.character_id_ = int64_t{0};
}
inline int64_t RecoverMsg::_internal_character_id() const {
  return _impl_.character_id_;
}
inline int64_t RecoverMsg::character_id() const {
  // @@protoc_insertion_point(field_get:protobuf.RecoverMsg.character_id)
  return _internal_character_id();
}
inline void RecoverMsg::_internal_set_character_id(int64_t value) {
  
  _impl_.character_id_ = value;
}
inline void RecoverMsg::set_character_id(int64_t value) {
  _internal_set_character_id(value);
  // @@protoc_insertion_point(field_set:protobuf.RecoverMsg.character_id)
}

// int64 recovered_hp = 2;
inline void RecoverMsg::clear_recovered_hp() {
  _impl_.recovered_hp_ = int64_t{0};
}
inline int64_t RecoverMsg::_internal_recovered_hp() const {
  return _impl_.recovered_hp_;
}
inline int64_t RecoverMsg::recovered_hp() const {
  // @@protoc_insertion_point(field_get:protobuf.RecoverMsg.recovered_hp)
  return _internal_recovered_hp();
}
inline void RecoverMsg::_internal_set_recovered_hp(int64_t value) {
  
  _impl_.recovered_hp_ = value;
}
inline void RecoverMsg::set_recovered_hp(int64_t value) {
  _internal_set_recovered_hp(value);
  // @@protoc_insertion_point(field_set:protobuf.RecoverMsg.recovered_hp)
}

// int64 team_id = 3;
inline void RecoverMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t RecoverMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t RecoverMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.RecoverMsg.team_id)
  return _internal_team_id();
}
inline void RecoverMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void RecoverMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.RecoverMsg.team_id)
}

// -------------------------------------------------------------------

// CreatCharacterMsg

// .protobuf.CharacterType character_type = 1;
inline void CreatCharacterMsg::clear_character_type() {
  _impl_.character_type_ = 0;
}
inline ::protobuf::CharacterType CreatCharacterMsg::_internal_character_type() const {
  return static_cast< ::protobuf::CharacterType >(_impl_.character_type_);
}
inline ::protobuf::CharacterType CreatCharacterMsg::character_type() const {
  // @@protoc_insertion_point(field_get:protobuf.CreatCharacterMsg.character_type)
  return _internal_character_type();
}
inline void CreatCharacterMsg::_internal_set_character_type(::protobuf::CharacterType value) {
  
  _impl_.character_type_ = value;
}
inline void CreatCharacterMsg::set_character_type(::protobuf::CharacterType value) {
  _internal_set_character_type(value);
  // @@protoc_insertion_point(field_set:protobuf.CreatCharacterMsg.character_type)
}

// int64 team_id = 2;
inline void CreatCharacterMsg::clear_team_id() {
  _impl_.team_id_ = int64_t{0};
}
inline int64_t CreatCharacterMsg::_internal_team_id() const {
  return _impl_.team_id_;
}
inline int64_t CreatCharacterMsg::team_id() const {
  // @@protoc_insertion_point(field_get:protobuf.CreatCharacterMsg.team_id)
  return _internal_team_id();
}
inline void CreatCharacterMsg::_internal_set_team_id(int64_t value) {
  
  _impl_.team_id_ = value;
}
inline void CreatCharacterMsg::set_team_id(int64_t value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:protobuf.CreatCharacterMsg.team_id)
}

// int32 birthpoint_index = 3;
inline void CreatCharacterMsg::clear_birthpoint_index() {
  _impl_.birthpoint_index_ = 0;
}
inline int32_t CreatCharacterMsg::_internal_birthpoint_index() const {
  return _impl_.birthpoint_index_;
}
inline int32_t CreatCharacterMsg::birthpoint_index() const {
  // @@protoc_insertion_point(field_get:protobuf.CreatCharacterMsg.birthpoint_index)
  return _internal_birthpoint_index();
}
inline void CreatCharacterMsg::_internal_set_birthpoint_index(int32_t value) {
  
  _impl_.birthpoint_index_ = value;
}
inline void CreatCharacterMsg::set_birthpoint_index(int32_t value) {
  _internal_set_birthpoint_index(value);
  // @@protoc_insertion_point(field_set:protobuf.CreatCharacterMsg.birthpoint_index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Message2Server_2eproto
