// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message2Server.proto

#include "Message2Server.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protobuf {
PROTOBUF_CONSTEXPR NullRequest::NullRequest(
    ::_pbi::ConstantInitialized) {}
struct NullRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NullRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NullRequestDefaultTypeInternal() {}
  union {
    NullRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NullRequestDefaultTypeInternal _NullRequest_default_instance_;
PROTOBUF_CONSTEXPR IDMsg::IDMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IDMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IDMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IDMsgDefaultTypeInternal() {}
  union {
    IDMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IDMsgDefaultTypeInternal _IDMsg_default_instance_;
PROTOBUF_CONSTEXPR CharacterMsg::CharacterMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.character_type_)*/0
  , /*decltype(_impl_.side_flag_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterMsgDefaultTypeInternal() {}
  union {
    CharacterMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterMsgDefaultTypeInternal _CharacterMsg_default_instance_;
PROTOBUF_CONSTEXPR EconomyReourceMsg::EconomyReourceMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.process_)*/0
  , /*decltype(_impl_.economy_resource_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EconomyReourceMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EconomyReourceMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EconomyReourceMsgDefaultTypeInternal() {}
  union {
    EconomyReourceMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EconomyReourceMsgDefaultTypeInternal _EconomyReourceMsg_default_instance_;
PROTOBUF_CONSTEXPR AdditionResourceMsg::AdditionResourceMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.hp_)*/0
  , /*decltype(_impl_.addition_resource_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AdditionResourceMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdditionResourceMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdditionResourceMsgDefaultTypeInternal() {}
  union {
    AdditionResourceMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdditionResourceMsgDefaultTypeInternal _AdditionResourceMsg_default_instance_;
PROTOBUF_CONSTEXPR ConstructionMsg::ConstructionMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.hp_)*/0
  , /*decltype(_impl_.construction_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConstructionMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstructionMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstructionMsgDefaultTypeInternal() {}
  union {
    ConstructionMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstructionMsgDefaultTypeInternal _ConstructionMsg_default_instance_;
PROTOBUF_CONSTEXPR MoveMsg::MoveMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.angle_)*/0
  , /*decltype(_impl_.time_in_milliseconds_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MoveMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveMsgDefaultTypeInternal() {}
  union {
    MoveMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveMsgDefaultTypeInternal _MoveMsg_default_instance_;
PROTOBUF_CONSTEXPR SendMsg::SendMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.to_character_id_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.message_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct SendMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMsgDefaultTypeInternal() {}
  union {
    SendMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMsgDefaultTypeInternal _SendMsg_default_instance_;
PROTOBUF_CONSTEXPR AttackMsg::AttackMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.attacked_character_id_)*/int64_t{0}
  , /*decltype(_impl_.attacked_team_)*/int64_t{0}
  , /*decltype(_impl_.attack_range_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AttackMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttackMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttackMsgDefaultTypeInternal() {}
  union {
    AttackMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttackMsgDefaultTypeInternal _AttackMsg_default_instance_;
PROTOBUF_CONSTEXPR CastMsg::CastMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.casted_character_id_)*/{}
  , /*decltype(_impl_._casted_character_id_cached_byte_size_)*/{0}
  , /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.skill_id_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.attack_range_)*/0
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.angle_)*/0
  , /*decltype(_impl_.y_)*/0} {}
struct CastMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CastMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CastMsgDefaultTypeInternal() {}
  union {
    CastMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CastMsgDefaultTypeInternal _CastMsg_default_instance_;
PROTOBUF_CONSTEXPR AttackConstructionMsg::AttackConstructionMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AttackConstructionMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttackConstructionMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttackConstructionMsgDefaultTypeInternal() {}
  union {
    AttackConstructionMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttackConstructionMsgDefaultTypeInternal _AttackConstructionMsg_default_instance_;
PROTOBUF_CONSTEXPR AttackAdditionResourceMsg::AttackAdditionResourceMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AttackAdditionResourceMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttackAdditionResourceMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttackAdditionResourceMsgDefaultTypeInternal() {}
  union {
    AttackAdditionResourceMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttackAdditionResourceMsgDefaultTypeInternal _AttackAdditionResourceMsg_default_instance_;
PROTOBUF_CONSTEXPR ConstructMsg::ConstructMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.construction_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConstructMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstructMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstructMsgDefaultTypeInternal() {}
  union {
    ConstructMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstructMsgDefaultTypeInternal _ConstructMsg_default_instance_;
PROTOBUF_CONSTEXPR EquipMsg::EquipMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.equipment_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EquipMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipMsgDefaultTypeInternal() {}
  union {
    EquipMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipMsgDefaultTypeInternal _EquipMsg_default_instance_;
PROTOBUF_CONSTEXPR RecoverMsg::RecoverMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_id_)*/int64_t{0}
  , /*decltype(_impl_.recovered_hp_)*/int64_t{0}
  , /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RecoverMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecoverMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecoverMsgDefaultTypeInternal() {}
  union {
    RecoverMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecoverMsgDefaultTypeInternal _RecoverMsg_default_instance_;
PROTOBUF_CONSTEXPR CreatCharacterMsg::CreatCharacterMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.team_id_)*/int64_t{0}
  , /*decltype(_impl_.character_type_)*/0
  , /*decltype(_impl_.birthpoint_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreatCharacterMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatCharacterMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatCharacterMsgDefaultTypeInternal() {}
  union {
    CreatCharacterMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatCharacterMsgDefaultTypeInternal _CreatCharacterMsg_default_instance_;
}  // namespace protobuf
static ::_pb::Metadata file_level_metadata_Message2Server_2eproto[16];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Message2Server_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Message2Server_2eproto = nullptr;

const uint32_t TableStruct_Message2Server_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::NullRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::IDMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::IDMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::IDMsg, _impl_.team_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::CharacterMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::CharacterMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CharacterMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CharacterMsg, _impl_.character_type_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CharacterMsg, _impl_.side_flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::EconomyReourceMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::EconomyReourceMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::EconomyReourceMsg, _impl_.process_),
  PROTOBUF_FIELD_OFFSET(::protobuf::EconomyReourceMsg, _impl_.economy_resource_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::AdditionResourceMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::AdditionResourceMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::AdditionResourceMsg, _impl_.hp_),
  PROTOBUF_FIELD_OFFSET(::protobuf::AdditionResourceMsg, _impl_.addition_resource_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::ConstructionMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::ConstructionMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ConstructionMsg, _impl_.hp_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ConstructionMsg, _impl_.construction_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::MoveMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::MoveMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::MoveMsg, _impl_.angle_),
  PROTOBUF_FIELD_OFFSET(::protobuf::MoveMsg, _impl_.time_in_milliseconds_),
  PROTOBUF_FIELD_OFFSET(::protobuf::MoveMsg, _impl_.team_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::SendMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::protobuf::SendMsg, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::SendMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::SendMsg, _impl_.to_character_id_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::protobuf::SendMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::SendMsg, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackMsg, _impl_.attack_range_),
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackMsg, _impl_.attacked_character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackMsg, _impl_.attacked_team_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_.skill_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_.casted_character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_.attack_range_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CastMsg, _impl_.angle_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  2,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackConstructionMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackConstructionMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackConstructionMsg, _impl_.character_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackAdditionResourceMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackAdditionResourceMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::AttackAdditionResourceMsg, _impl_.character_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::ConstructMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::ConstructMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ConstructMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::ConstructMsg, _impl_.construction_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::EquipMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::EquipMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::EquipMsg, _impl_.equipment_type_),
  PROTOBUF_FIELD_OFFSET(::protobuf::EquipMsg, _impl_.team_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::RecoverMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::RecoverMsg, _impl_.character_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::RecoverMsg, _impl_.recovered_hp_),
  PROTOBUF_FIELD_OFFSET(::protobuf::RecoverMsg, _impl_.team_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::CreatCharacterMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protobuf::CreatCharacterMsg, _impl_.character_type_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CreatCharacterMsg, _impl_.team_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::CreatCharacterMsg, _impl_.birthpoint_index_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::protobuf::NullRequest)},
  { 6, -1, -1, sizeof(::protobuf::IDMsg)},
  { 14, -1, -1, sizeof(::protobuf::CharacterMsg)},
  { 24, -1, -1, sizeof(::protobuf::EconomyReourceMsg)},
  { 33, -1, -1, sizeof(::protobuf::AdditionResourceMsg)},
  { 42, -1, -1, sizeof(::protobuf::ConstructionMsg)},
  { 51, -1, -1, sizeof(::protobuf::MoveMsg)},
  { 61, -1, -1, sizeof(::protobuf::SendMsg)},
  { 73, -1, -1, sizeof(::protobuf::AttackMsg)},
  { 84, 98, -1, sizeof(::protobuf::CastMsg)},
  { 106, -1, -1, sizeof(::protobuf::AttackConstructionMsg)},
  { 114, -1, -1, sizeof(::protobuf::AttackAdditionResourceMsg)},
  { 122, -1, -1, sizeof(::protobuf::ConstructMsg)},
  { 131, -1, -1, sizeof(::protobuf::EquipMsg)},
  { 140, -1, -1, sizeof(::protobuf::RecoverMsg)},
  { 149, -1, -1, sizeof(::protobuf::CreatCharacterMsg)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protobuf::_NullRequest_default_instance_._instance,
  &::protobuf::_IDMsg_default_instance_._instance,
  &::protobuf::_CharacterMsg_default_instance_._instance,
  &::protobuf::_EconomyReourceMsg_default_instance_._instance,
  &::protobuf::_AdditionResourceMsg_default_instance_._instance,
  &::protobuf::_ConstructionMsg_default_instance_._instance,
  &::protobuf::_MoveMsg_default_instance_._instance,
  &::protobuf::_SendMsg_default_instance_._instance,
  &::protobuf::_AttackMsg_default_instance_._instance,
  &::protobuf::_CastMsg_default_instance_._instance,
  &::protobuf::_AttackConstructionMsg_default_instance_._instance,
  &::protobuf::_AttackAdditionResourceMsg_default_instance_._instance,
  &::protobuf::_ConstructMsg_default_instance_._instance,
  &::protobuf::_EquipMsg_default_instance_._instance,
  &::protobuf::_RecoverMsg_default_instance_._instance,
  &::protobuf::_CreatCharacterMsg_default_instance_._instance,
};

const char descriptor_table_protodef_Message2Server_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024Message2Server.proto\022\010protobuf\032\021Messag"
  "eType.proto\"\r\n\013NullRequest\".\n\005IDMsg\022\024\n\014c"
  "haracter_id\030\001 \001(\003\022\017\n\007team_id\030\002 \001(\003\"y\n\014Ch"
  "aracterMsg\022\024\n\014character_id\030\001 \001(\003\022\017\n\007team"
  "_id\030\002 \001(\003\022/\n\016character_type\030\003 \001(\0162\027.prot"
  "obuf.CharacterType\022\021\n\tside_flag\030\004 \001(\005\"s\n"
  "\021EconomyReourceMsg\022\017\n\007team_id\030\001 \001(\003\022\017\n\007p"
  "rocess\030\002 \001(\005\022<\n\025economy_resource_type\030\003 "
  "\001(\0162\035.protobuf.EconomyResourceType\"r\n\023Ad"
  "ditionResourceMsg\022\017\n\007team_id\030\001 \001(\003\022\n\n\002hp"
  "\030\002 \001(\005\022>\n\026addition_resource_type\030\003 \001(\0162\036"
  ".protobuf.AdditionResourceType\"e\n\017Constr"
  "uctionMsg\022\017\n\007team_id\030\001 \001(\003\022\n\n\002hp\030\002 \001(\005\0225"
  "\n\021construction_type\030\003 \001(\0162\032.protobuf.Con"
  "structionType\"]\n\007MoveMsg\022\024\n\014character_id"
  "\030\001 \001(\003\022\r\n\005angle\030\002 \001(\001\022\034\n\024time_in_millise"
  "conds\030\003 \001(\003\022\017\n\007team_id\030\004 \001(\003\"\206\001\n\007SendMsg"
  "\022\024\n\014character_id\030\001 \001(\003\022\027\n\017to_character_i"
  "d\030\002 \001(\003\022\026\n\014text_message\030\003 \001(\tH\000\022\030\n\016binar"
  "y_message\030\004 \001(\014H\000\022\017\n\007team_id\030\005 \001(\003B\t\n\007me"
  "ssage\"~\n\tAttackMsg\022\024\n\014character_id\030\001 \001(\003"
  "\022\017\n\007team_id\030\002 \001(\003\022\024\n\014attack_range\030\003 \001(\005\022"
  "\035\n\025attacked_character_id\030\004 \001(\003\022\025\n\rattack"
  "ed_team\030\005 \001(\003\"\277\001\n\007CastMsg\022\024\n\014character_i"
  "d\030\001 \001(\003\022\020\n\010skill_id\030\002 \001(\003\022\033\n\023casted_char"
  "acter_id\030\003 \003(\003\022\017\n\007team_id\030\004 \001(\003\022\024\n\014attac"
  "k_range\030\005 \001(\005\022\016\n\001x\030\006 \001(\005H\000\210\001\001\022\016\n\001y\030\007 \001(\005"
  "H\001\210\001\001\022\022\n\005angle\030\010 \001(\001H\002\210\001\001B\004\n\002_xB\004\n\002_yB\010\n"
  "\006_angle\">\n\025AttackConstructionMsg\022\017\n\007team"
  "_id\030\001 \001(\003\022\024\n\014character_id\030\002 \001(\003\"B\n\031Attac"
  "kAdditionResourceMsg\022\017\n\007team_id\030\001 \001(\003\022\024\n"
  "\014character_id\030\002 \001(\003\"l\n\014ConstructMsg\022\024\n\014c"
  "haracter_id\030\001 \001(\003\022\017\n\007team_id\030\002 \001(\003\0225\n\021co"
  "nstruction_type\030\003 \001(\0162\032.protobuf.Constru"
  "ctionType\"b\n\010EquipMsg\022\024\n\014character_id\030\001 "
  "\001(\003\022/\n\016equipment_type\030\002 \001(\0162\027.protobuf.E"
  "quipmentType\022\017\n\007team_id\030\003 \001(\003\"I\n\nRecover"
  "Msg\022\024\n\014character_id\030\001 \001(\003\022\024\n\014recovered_h"
  "p\030\002 \001(\003\022\017\n\007team_id\030\003 \001(\003\"o\n\021CreatCharact"
  "erMsg\022/\n\016character_type\030\001 \001(\0162\027.protobuf"
  ".CharacterType\022\017\n\007team_id\030\002 \001(\003\022\030\n\020birth"
  "point_index\030\003 \001(\005b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Message2Server_2eproto_deps[1] = {
  &::descriptor_table_MessageType_2eproto,
};
static ::_pbi::once_flag descriptor_table_Message2Server_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Message2Server_2eproto = {
    false, false, 1665, descriptor_table_protodef_Message2Server_2eproto,
    "Message2Server.proto",
    &descriptor_table_Message2Server_2eproto_once, descriptor_table_Message2Server_2eproto_deps, 1, 16,
    schemas, file_default_instances, TableStruct_Message2Server_2eproto::offsets,
    file_level_metadata_Message2Server_2eproto, file_level_enum_descriptors_Message2Server_2eproto,
    file_level_service_descriptors_Message2Server_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Message2Server_2eproto_getter() {
  return &descriptor_table_Message2Server_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Message2Server_2eproto(&descriptor_table_Message2Server_2eproto);
namespace protobuf {

// ===================================================================

class NullRequest::_Internal {
 public:
};

NullRequest::NullRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protobuf.NullRequest)
}
NullRequest::NullRequest(const NullRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  NullRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf.NullRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NullRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NullRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NullRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[0]);
}

// ===================================================================

class IDMsg::_Internal {
 public:
};

IDMsg::IDMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.IDMsg)
}
IDMsg::IDMsg(const IDMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IDMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){}
    , decltype(_impl_.team_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.team_id_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.team_id_));
  // @@protoc_insertion_point(copy_constructor:protobuf.IDMsg)
}

inline void IDMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

IDMsg::~IDMsg() {
  // @@protoc_insertion_point(destructor:protobuf.IDMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IDMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IDMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IDMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.IDMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.team_id_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.team_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IDMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.IDMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_team_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.IDMsg)
  return target;
}

size_t IDMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.IDMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IDMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IDMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IDMsg::GetClassData() const { return &_class_data_; }


void IDMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IDMsg*>(&to_msg);
  auto& from = static_cast<const IDMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.IDMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IDMsg::CopyFrom(const IDMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.IDMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDMsg::IsInitialized() const {
  return true;
}

void IDMsg::InternalSwap(IDMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IDMsg, _impl_.team_id_)
      + sizeof(IDMsg::_impl_.team_id_)
      - PROTOBUF_FIELD_OFFSET(IDMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IDMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[1]);
}

// ===================================================================

class CharacterMsg::_Internal {
 public:
};

CharacterMsg::CharacterMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.CharacterMsg)
}
CharacterMsg::CharacterMsg(const CharacterMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){}
    , decltype(_impl_.team_id_){}
    , decltype(_impl_.character_type_){}
    , decltype(_impl_.side_flag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.side_flag_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.side_flag_));
  // @@protoc_insertion_point(copy_constructor:protobuf.CharacterMsg)
}

inline void CharacterMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.character_type_){0}
    , decltype(_impl_.side_flag_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CharacterMsg::~CharacterMsg() {
  // @@protoc_insertion_point(destructor:protobuf.CharacterMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CharacterMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.CharacterMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.side_flag_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.side_flag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protobuf.CharacterType character_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_character_type(static_cast<::protobuf::CharacterType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 side_flag = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.side_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.CharacterMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_team_id(), target);
  }

  // .protobuf.CharacterType character_type = 3;
  if (this->_internal_character_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_character_type(), target);
  }

  // int32 side_flag = 4;
  if (this->_internal_side_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_side_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.CharacterMsg)
  return target;
}

size_t CharacterMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.CharacterMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // .protobuf.CharacterType character_type = 3;
  if (this->_internal_character_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_character_type());
  }

  // int32 side_flag = 4;
  if (this->_internal_side_flag() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_side_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterMsg::GetClassData() const { return &_class_data_; }


void CharacterMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterMsg*>(&to_msg);
  auto& from = static_cast<const CharacterMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.CharacterMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_character_type() != 0) {
    _this->_internal_set_character_type(from._internal_character_type());
  }
  if (from._internal_side_flag() != 0) {
    _this->_internal_set_side_flag(from._internal_side_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterMsg::CopyFrom(const CharacterMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.CharacterMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterMsg::IsInitialized() const {
  return true;
}

void CharacterMsg::InternalSwap(CharacterMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterMsg, _impl_.side_flag_)
      + sizeof(CharacterMsg::_impl_.side_flag_)
      - PROTOBUF_FIELD_OFFSET(CharacterMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[2]);
}

// ===================================================================

class EconomyReourceMsg::_Internal {
 public:
};

EconomyReourceMsg::EconomyReourceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.EconomyReourceMsg)
}
EconomyReourceMsg::EconomyReourceMsg(const EconomyReourceMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EconomyReourceMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){}
    , decltype(_impl_.process_){}
    , decltype(_impl_.economy_resource_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.team_id_, &from._impl_.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.economy_resource_type_) -
    reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.economy_resource_type_));
  // @@protoc_insertion_point(copy_constructor:protobuf.EconomyReourceMsg)
}

inline void EconomyReourceMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.process_){0}
    , decltype(_impl_.economy_resource_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EconomyReourceMsg::~EconomyReourceMsg() {
  // @@protoc_insertion_point(destructor:protobuf.EconomyReourceMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EconomyReourceMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EconomyReourceMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EconomyReourceMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.EconomyReourceMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.economy_resource_type_) -
      reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.economy_resource_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EconomyReourceMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 team_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 process = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.process_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protobuf.EconomyResourceType economy_resource_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_economy_resource_type(static_cast<::protobuf::EconomyResourceType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EconomyReourceMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.EconomyReourceMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_team_id(), target);
  }

  // int32 process = 2;
  if (this->_internal_process() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_process(), target);
  }

  // .protobuf.EconomyResourceType economy_resource_type = 3;
  if (this->_internal_economy_resource_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_economy_resource_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.EconomyReourceMsg)
  return target;
}

size_t EconomyReourceMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.EconomyReourceMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // int32 process = 2;
  if (this->_internal_process() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_process());
  }

  // .protobuf.EconomyResourceType economy_resource_type = 3;
  if (this->_internal_economy_resource_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_economy_resource_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EconomyReourceMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EconomyReourceMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EconomyReourceMsg::GetClassData() const { return &_class_data_; }


void EconomyReourceMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EconomyReourceMsg*>(&to_msg);
  auto& from = static_cast<const EconomyReourceMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.EconomyReourceMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_process() != 0) {
    _this->_internal_set_process(from._internal_process());
  }
  if (from._internal_economy_resource_type() != 0) {
    _this->_internal_set_economy_resource_type(from._internal_economy_resource_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EconomyReourceMsg::CopyFrom(const EconomyReourceMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.EconomyReourceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EconomyReourceMsg::IsInitialized() const {
  return true;
}

void EconomyReourceMsg::InternalSwap(EconomyReourceMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EconomyReourceMsg, _impl_.economy_resource_type_)
      + sizeof(EconomyReourceMsg::_impl_.economy_resource_type_)
      - PROTOBUF_FIELD_OFFSET(EconomyReourceMsg, _impl_.team_id_)>(
          reinterpret_cast<char*>(&_impl_.team_id_),
          reinterpret_cast<char*>(&other->_impl_.team_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EconomyReourceMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[3]);
}

// ===================================================================

class AdditionResourceMsg::_Internal {
 public:
};

AdditionResourceMsg::AdditionResourceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.AdditionResourceMsg)
}
AdditionResourceMsg::AdditionResourceMsg(const AdditionResourceMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AdditionResourceMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){}
    , decltype(_impl_.hp_){}
    , decltype(_impl_.addition_resource_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.team_id_, &from._impl_.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.addition_resource_type_) -
    reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.addition_resource_type_));
  // @@protoc_insertion_point(copy_constructor:protobuf.AdditionResourceMsg)
}

inline void AdditionResourceMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.hp_){0}
    , decltype(_impl_.addition_resource_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AdditionResourceMsg::~AdditionResourceMsg() {
  // @@protoc_insertion_point(destructor:protobuf.AdditionResourceMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AdditionResourceMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AdditionResourceMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AdditionResourceMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.AdditionResourceMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.addition_resource_type_) -
      reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.addition_resource_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdditionResourceMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 team_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protobuf.AdditionResourceType addition_resource_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_addition_resource_type(static_cast<::protobuf::AdditionResourceType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AdditionResourceMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.AdditionResourceMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_team_id(), target);
  }

  // int32 hp = 2;
  if (this->_internal_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_hp(), target);
  }

  // .protobuf.AdditionResourceType addition_resource_type = 3;
  if (this->_internal_addition_resource_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_addition_resource_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.AdditionResourceMsg)
  return target;
}

size_t AdditionResourceMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.AdditionResourceMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // int32 hp = 2;
  if (this->_internal_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hp());
  }

  // .protobuf.AdditionResourceType addition_resource_type = 3;
  if (this->_internal_addition_resource_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_addition_resource_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AdditionResourceMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AdditionResourceMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AdditionResourceMsg::GetClassData() const { return &_class_data_; }


void AdditionResourceMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AdditionResourceMsg*>(&to_msg);
  auto& from = static_cast<const AdditionResourceMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.AdditionResourceMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_hp() != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  if (from._internal_addition_resource_type() != 0) {
    _this->_internal_set_addition_resource_type(from._internal_addition_resource_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AdditionResourceMsg::CopyFrom(const AdditionResourceMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.AdditionResourceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdditionResourceMsg::IsInitialized() const {
  return true;
}

void AdditionResourceMsg::InternalSwap(AdditionResourceMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AdditionResourceMsg, _impl_.addition_resource_type_)
      + sizeof(AdditionResourceMsg::_impl_.addition_resource_type_)
      - PROTOBUF_FIELD_OFFSET(AdditionResourceMsg, _impl_.team_id_)>(
          reinterpret_cast<char*>(&_impl_.team_id_),
          reinterpret_cast<char*>(&other->_impl_.team_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AdditionResourceMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[4]);
}

// ===================================================================

class ConstructionMsg::_Internal {
 public:
};

ConstructionMsg::ConstructionMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.ConstructionMsg)
}
ConstructionMsg::ConstructionMsg(const ConstructionMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConstructionMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){}
    , decltype(_impl_.hp_){}
    , decltype(_impl_.construction_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.team_id_, &from._impl_.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.construction_type_) -
    reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.construction_type_));
  // @@protoc_insertion_point(copy_constructor:protobuf.ConstructionMsg)
}

inline void ConstructionMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.hp_){0}
    , decltype(_impl_.construction_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ConstructionMsg::~ConstructionMsg() {
  // @@protoc_insertion_point(destructor:protobuf.ConstructionMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConstructionMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ConstructionMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConstructionMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ConstructionMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.construction_type_) -
      reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.construction_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConstructionMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 team_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protobuf.ConstructionType construction_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_construction_type(static_cast<::protobuf::ConstructionType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConstructionMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ConstructionMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_team_id(), target);
  }

  // int32 hp = 2;
  if (this->_internal_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_hp(), target);
  }

  // .protobuf.ConstructionType construction_type = 3;
  if (this->_internal_construction_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_construction_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ConstructionMsg)
  return target;
}

size_t ConstructionMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ConstructionMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // int32 hp = 2;
  if (this->_internal_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hp());
  }

  // .protobuf.ConstructionType construction_type = 3;
  if (this->_internal_construction_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_construction_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConstructionMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConstructionMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConstructionMsg::GetClassData() const { return &_class_data_; }


void ConstructionMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConstructionMsg*>(&to_msg);
  auto& from = static_cast<const ConstructionMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ConstructionMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_hp() != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  if (from._internal_construction_type() != 0) {
    _this->_internal_set_construction_type(from._internal_construction_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConstructionMsg::CopyFrom(const ConstructionMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ConstructionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstructionMsg::IsInitialized() const {
  return true;
}

void ConstructionMsg::InternalSwap(ConstructionMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConstructionMsg, _impl_.construction_type_)
      + sizeof(ConstructionMsg::_impl_.construction_type_)
      - PROTOBUF_FIELD_OFFSET(ConstructionMsg, _impl_.team_id_)>(
          reinterpret_cast<char*>(&_impl_.team_id_),
          reinterpret_cast<char*>(&other->_impl_.team_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConstructionMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[5]);
}

// ===================================================================

class MoveMsg::_Internal {
 public:
};

MoveMsg::MoveMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.MoveMsg)
}
MoveMsg::MoveMsg(const MoveMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MoveMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){}
    , decltype(_impl_.angle_){}
    , decltype(_impl_.time_in_milliseconds_){}
    , decltype(_impl_.team_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.team_id_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.team_id_));
  // @@protoc_insertion_point(copy_constructor:protobuf.MoveMsg)
}

inline void MoveMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.angle_){0}
    , decltype(_impl_.time_in_milliseconds_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MoveMsg::~MoveMsg() {
  // @@protoc_insertion_point(destructor:protobuf.MoveMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MoveMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MoveMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MoveMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.MoveMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.team_id_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.team_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MoveMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double angle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // int64 time_in_milliseconds = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.time_in_milliseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MoveMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.MoveMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // double angle = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_angle = this->_internal_angle();
  uint64_t raw_angle;
  memcpy(&raw_angle, &tmp_angle, sizeof(tmp_angle));
  if (raw_angle != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_angle(), target);
  }

  // int64 time_in_milliseconds = 3;
  if (this->_internal_time_in_milliseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_time_in_milliseconds(), target);
  }

  // int64 team_id = 4;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_team_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.MoveMsg)
  return target;
}

size_t MoveMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.MoveMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // double angle = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_angle = this->_internal_angle();
  uint64_t raw_angle;
  memcpy(&raw_angle, &tmp_angle, sizeof(tmp_angle));
  if (raw_angle != 0) {
    total_size += 1 + 8;
  }

  // int64 time_in_milliseconds = 3;
  if (this->_internal_time_in_milliseconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time_in_milliseconds());
  }

  // int64 team_id = 4;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MoveMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MoveMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MoveMsg::GetClassData() const { return &_class_data_; }


void MoveMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MoveMsg*>(&to_msg);
  auto& from = static_cast<const MoveMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MoveMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_angle = from._internal_angle();
  uint64_t raw_angle;
  memcpy(&raw_angle, &tmp_angle, sizeof(tmp_angle));
  if (raw_angle != 0) {
    _this->_internal_set_angle(from._internal_angle());
  }
  if (from._internal_time_in_milliseconds() != 0) {
    _this->_internal_set_time_in_milliseconds(from._internal_time_in_milliseconds());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MoveMsg::CopyFrom(const MoveMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MoveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveMsg::IsInitialized() const {
  return true;
}

void MoveMsg::InternalSwap(MoveMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveMsg, _impl_.team_id_)
      + sizeof(MoveMsg::_impl_.team_id_)
      - PROTOBUF_FIELD_OFFSET(MoveMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MoveMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[6]);
}

// ===================================================================

class SendMsg::_Internal {
 public:
};

SendMsg::SendMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.SendMsg)
}
SendMsg::SendMsg(const SendMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){}
    , decltype(_impl_.to_character_id_){}
    , decltype(_impl_.team_id_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.team_id_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.team_id_));
  clear_has_message();
  switch (from.message_case()) {
    case kTextMessage: {
      _this->_internal_set_text_message(from._internal_text_message());
      break;
    }
    case kBinaryMessage: {
      _this->_internal_set_binary_message(from._internal_binary_message());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protobuf.SendMsg)
}

inline void SendMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.to_character_id_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_message();
}

SendMsg::~SendMsg() {
  // @@protoc_insertion_point(destructor:protobuf.SendMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void SendMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendMsg::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:protobuf.SendMsg)
  switch (message_case()) {
    case kTextMessage: {
      _impl_.message_.text_message_.Destroy();
      break;
    }
    case kBinaryMessage: {
      _impl_.message_.binary_message_.Destroy();
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


void SendMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.SendMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.team_id_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.team_id_));
  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 to_character_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.to_character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string text_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_text_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protobuf.SendMsg.text_message"));
        } else
          goto handle_unusual;
        continue;
      // bytes binary_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_binary_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.SendMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // int64 to_character_id = 2;
  if (this->_internal_to_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_to_character_id(), target);
  }

  // string text_message = 3;
  if (_internal_has_text_message()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text_message().data(), static_cast<int>(this->_internal_text_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protobuf.SendMsg.text_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text_message(), target);
  }

  // bytes binary_message = 4;
  if (_internal_has_binary_message()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_binary_message(), target);
  }

  // int64 team_id = 5;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_team_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.SendMsg)
  return target;
}

size_t SendMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.SendMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // int64 to_character_id = 2;
  if (this->_internal_to_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_to_character_id());
  }

  // int64 team_id = 5;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  switch (message_case()) {
    // string text_message = 3;
    case kTextMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text_message());
      break;
    }
    // bytes binary_message = 4;
    case kBinaryMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_binary_message());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendMsg::GetClassData() const { return &_class_data_; }


void SendMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendMsg*>(&to_msg);
  auto& from = static_cast<const SendMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.SendMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (from._internal_to_character_id() != 0) {
    _this->_internal_set_to_character_id(from._internal_to_character_id());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  switch (from.message_case()) {
    case kTextMessage: {
      _this->_internal_set_text_message(from._internal_text_message());
      break;
    }
    case kBinaryMessage: {
      _this->_internal_set_binary_message(from._internal_binary_message());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendMsg::CopyFrom(const SendMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.SendMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMsg::IsInitialized() const {
  return true;
}

void SendMsg::InternalSwap(SendMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMsg, _impl_.team_id_)
      + sizeof(SendMsg::_impl_.team_id_)
      - PROTOBUF_FIELD_OFFSET(SendMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[7]);
}

// ===================================================================

class AttackMsg::_Internal {
 public:
};

AttackMsg::AttackMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.AttackMsg)
}
AttackMsg::AttackMsg(const AttackMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AttackMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){}
    , decltype(_impl_.team_id_){}
    , decltype(_impl_.attacked_character_id_){}
    , decltype(_impl_.attacked_team_){}
    , decltype(_impl_.attack_range_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.attack_range_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.attack_range_));
  // @@protoc_insertion_point(copy_constructor:protobuf.AttackMsg)
}

inline void AttackMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.attacked_character_id_){int64_t{0}}
    , decltype(_impl_.attacked_team_){int64_t{0}}
    , decltype(_impl_.attack_range_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AttackMsg::~AttackMsg() {
  // @@protoc_insertion_point(destructor:protobuf.AttackMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AttackMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AttackMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AttackMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.AttackMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.attack_range_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.attack_range_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttackMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 attack_range = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.attack_range_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 attacked_character_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.attacked_character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 attacked_team = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.attacked_team_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AttackMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.AttackMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_team_id(), target);
  }

  // int32 attack_range = 3;
  if (this->_internal_attack_range() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_attack_range(), target);
  }

  // int64 attacked_character_id = 4;
  if (this->_internal_attacked_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_attacked_character_id(), target);
  }

  // int64 attacked_team = 5;
  if (this->_internal_attacked_team() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_attacked_team(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.AttackMsg)
  return target;
}

size_t AttackMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.AttackMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // int64 attacked_character_id = 4;
  if (this->_internal_attacked_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_attacked_character_id());
  }

  // int64 attacked_team = 5;
  if (this->_internal_attacked_team() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_attacked_team());
  }

  // int32 attack_range = 3;
  if (this->_internal_attack_range() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_attack_range());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AttackMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AttackMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AttackMsg::GetClassData() const { return &_class_data_; }


void AttackMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AttackMsg*>(&to_msg);
  auto& from = static_cast<const AttackMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.AttackMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_attacked_character_id() != 0) {
    _this->_internal_set_attacked_character_id(from._internal_attacked_character_id());
  }
  if (from._internal_attacked_team() != 0) {
    _this->_internal_set_attacked_team(from._internal_attacked_team());
  }
  if (from._internal_attack_range() != 0) {
    _this->_internal_set_attack_range(from._internal_attack_range());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AttackMsg::CopyFrom(const AttackMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.AttackMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackMsg::IsInitialized() const {
  return true;
}

void AttackMsg::InternalSwap(AttackMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttackMsg, _impl_.attack_range_)
      + sizeof(AttackMsg::_impl_.attack_range_)
      - PROTOBUF_FIELD_OFFSET(AttackMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AttackMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[8]);
}

// ===================================================================

class CastMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<CastMsg>()._impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CastMsg::CastMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.CastMsg)
}
CastMsg::CastMsg(const CastMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CastMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.casted_character_id_){from._impl_.casted_character_id_}
    , /*decltype(_impl_._casted_character_id_cached_byte_size_)*/{0}
    , decltype(_impl_.character_id_){}
    , decltype(_impl_.skill_id_){}
    , decltype(_impl_.team_id_){}
    , decltype(_impl_.attack_range_){}
    , decltype(_impl_.x_){}
    , decltype(_impl_.angle_){}
    , decltype(_impl_.y_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.y_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.y_));
  // @@protoc_insertion_point(copy_constructor:protobuf.CastMsg)
}

inline void CastMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.casted_character_id_){arena}
    , /*decltype(_impl_._casted_character_id_cached_byte_size_)*/{0}
    , decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.skill_id_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.attack_range_){0}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.angle_){0}
    , decltype(_impl_.y_){0}
  };
}

CastMsg::~CastMsg() {
  // @@protoc_insertion_point(destructor:protobuf.CastMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CastMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.casted_character_id_.~RepeatedField();
}

void CastMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CastMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.CastMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.casted_character_id_.Clear();
  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.attack_range_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.attack_range_));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.y_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CastMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 skill_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.skill_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 casted_character_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_casted_character_id(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_casted_character_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 attack_range = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.attack_range_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 x = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_x(&has_bits);
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 y = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_y(&has_bits);
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional double angle = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 65)) {
          _Internal::set_has_angle(&has_bits);
          _impl_.angle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CastMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.CastMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // int64 skill_id = 2;
  if (this->_internal_skill_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_skill_id(), target);
  }

  // repeated int64 casted_character_id = 3;
  {
    int byte_size = _impl_._casted_character_id_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_casted_character_id(), byte_size, target);
    }
  }

  // int64 team_id = 4;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_team_id(), target);
  }

  // int32 attack_range = 5;
  if (this->_internal_attack_range() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_attack_range(), target);
  }

  // optional int32 x = 6;
  if (_internal_has_x()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_x(), target);
  }

  // optional int32 y = 7;
  if (_internal_has_y()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_y(), target);
  }

  // optional double angle = 8;
  if (_internal_has_angle()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(8, this->_internal_angle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.CastMsg)
  return target;
}

size_t CastMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.CastMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 casted_character_id = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.casted_character_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._casted_character_id_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // int64 skill_id = 2;
  if (this->_internal_skill_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_skill_id());
  }

  // int64 team_id = 4;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // int32 attack_range = 5;
  if (this->_internal_attack_range() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_attack_range());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 x = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
    }

    // optional double angle = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional int32 y = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CastMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CastMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CastMsg::GetClassData() const { return &_class_data_; }


void CastMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CastMsg*>(&to_msg);
  auto& from = static_cast<const CastMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.CastMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.casted_character_id_.MergeFrom(from._impl_.casted_character_id_);
  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (from._internal_skill_id() != 0) {
    _this->_internal_set_skill_id(from._internal_skill_id());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_attack_range() != 0) {
    _this->_internal_set_attack_range(from._internal_attack_range());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.angle_ = from._impl_.angle_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CastMsg::CopyFrom(const CastMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.CastMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CastMsg::IsInitialized() const {
  return true;
}

void CastMsg::InternalSwap(CastMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.casted_character_id_.InternalSwap(&other->_impl_.casted_character_id_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CastMsg, _impl_.y_)
      + sizeof(CastMsg::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(CastMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CastMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[9]);
}

// ===================================================================

class AttackConstructionMsg::_Internal {
 public:
};

AttackConstructionMsg::AttackConstructionMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.AttackConstructionMsg)
}
AttackConstructionMsg::AttackConstructionMsg(const AttackConstructionMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AttackConstructionMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){}
    , decltype(_impl_.character_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.team_id_, &from._impl_.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.character_id_) -
    reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.character_id_));
  // @@protoc_insertion_point(copy_constructor:protobuf.AttackConstructionMsg)
}

inline void AttackConstructionMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.character_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AttackConstructionMsg::~AttackConstructionMsg() {
  // @@protoc_insertion_point(destructor:protobuf.AttackConstructionMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AttackConstructionMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AttackConstructionMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AttackConstructionMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.AttackConstructionMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.character_id_) -
      reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.character_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttackConstructionMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 team_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 character_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AttackConstructionMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.AttackConstructionMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_team_id(), target);
  }

  // int64 character_id = 2;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_character_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.AttackConstructionMsg)
  return target;
}

size_t AttackConstructionMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.AttackConstructionMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // int64 character_id = 2;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AttackConstructionMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AttackConstructionMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AttackConstructionMsg::GetClassData() const { return &_class_data_; }


void AttackConstructionMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AttackConstructionMsg*>(&to_msg);
  auto& from = static_cast<const AttackConstructionMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.AttackConstructionMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AttackConstructionMsg::CopyFrom(const AttackConstructionMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.AttackConstructionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackConstructionMsg::IsInitialized() const {
  return true;
}

void AttackConstructionMsg::InternalSwap(AttackConstructionMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttackConstructionMsg, _impl_.character_id_)
      + sizeof(AttackConstructionMsg::_impl_.character_id_)
      - PROTOBUF_FIELD_OFFSET(AttackConstructionMsg, _impl_.team_id_)>(
          reinterpret_cast<char*>(&_impl_.team_id_),
          reinterpret_cast<char*>(&other->_impl_.team_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AttackConstructionMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[10]);
}

// ===================================================================

class AttackAdditionResourceMsg::_Internal {
 public:
};

AttackAdditionResourceMsg::AttackAdditionResourceMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.AttackAdditionResourceMsg)
}
AttackAdditionResourceMsg::AttackAdditionResourceMsg(const AttackAdditionResourceMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AttackAdditionResourceMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){}
    , decltype(_impl_.character_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.team_id_, &from._impl_.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.character_id_) -
    reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.character_id_));
  // @@protoc_insertion_point(copy_constructor:protobuf.AttackAdditionResourceMsg)
}

inline void AttackAdditionResourceMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.character_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AttackAdditionResourceMsg::~AttackAdditionResourceMsg() {
  // @@protoc_insertion_point(destructor:protobuf.AttackAdditionResourceMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AttackAdditionResourceMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AttackAdditionResourceMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AttackAdditionResourceMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.AttackAdditionResourceMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.character_id_) -
      reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.character_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AttackAdditionResourceMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 team_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 character_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AttackAdditionResourceMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.AttackAdditionResourceMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_team_id(), target);
  }

  // int64 character_id = 2;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_character_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.AttackAdditionResourceMsg)
  return target;
}

size_t AttackAdditionResourceMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.AttackAdditionResourceMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 team_id = 1;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // int64 character_id = 2;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AttackAdditionResourceMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AttackAdditionResourceMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AttackAdditionResourceMsg::GetClassData() const { return &_class_data_; }


void AttackAdditionResourceMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AttackAdditionResourceMsg*>(&to_msg);
  auto& from = static_cast<const AttackAdditionResourceMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.AttackAdditionResourceMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AttackAdditionResourceMsg::CopyFrom(const AttackAdditionResourceMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.AttackAdditionResourceMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackAdditionResourceMsg::IsInitialized() const {
  return true;
}

void AttackAdditionResourceMsg::InternalSwap(AttackAdditionResourceMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttackAdditionResourceMsg, _impl_.character_id_)
      + sizeof(AttackAdditionResourceMsg::_impl_.character_id_)
      - PROTOBUF_FIELD_OFFSET(AttackAdditionResourceMsg, _impl_.team_id_)>(
          reinterpret_cast<char*>(&_impl_.team_id_),
          reinterpret_cast<char*>(&other->_impl_.team_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AttackAdditionResourceMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[11]);
}

// ===================================================================

class ConstructMsg::_Internal {
 public:
};

ConstructMsg::ConstructMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.ConstructMsg)
}
ConstructMsg::ConstructMsg(const ConstructMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConstructMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){}
    , decltype(_impl_.team_id_){}
    , decltype(_impl_.construction_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.construction_type_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.construction_type_));
  // @@protoc_insertion_point(copy_constructor:protobuf.ConstructMsg)
}

inline void ConstructMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.construction_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ConstructMsg::~ConstructMsg() {
  // @@protoc_insertion_point(destructor:protobuf.ConstructMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConstructMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ConstructMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConstructMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ConstructMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.construction_type_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.construction_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConstructMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protobuf.ConstructionType construction_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_construction_type(static_cast<::protobuf::ConstructionType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConstructMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ConstructMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_team_id(), target);
  }

  // .protobuf.ConstructionType construction_type = 3;
  if (this->_internal_construction_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_construction_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ConstructMsg)
  return target;
}

size_t ConstructMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ConstructMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // .protobuf.ConstructionType construction_type = 3;
  if (this->_internal_construction_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_construction_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConstructMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConstructMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConstructMsg::GetClassData() const { return &_class_data_; }


void ConstructMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConstructMsg*>(&to_msg);
  auto& from = static_cast<const ConstructMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ConstructMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_construction_type() != 0) {
    _this->_internal_set_construction_type(from._internal_construction_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConstructMsg::CopyFrom(const ConstructMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ConstructMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstructMsg::IsInitialized() const {
  return true;
}

void ConstructMsg::InternalSwap(ConstructMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConstructMsg, _impl_.construction_type_)
      + sizeof(ConstructMsg::_impl_.construction_type_)
      - PROTOBUF_FIELD_OFFSET(ConstructMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConstructMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[12]);
}

// ===================================================================

class EquipMsg::_Internal {
 public:
};

EquipMsg::EquipMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.EquipMsg)
}
EquipMsg::EquipMsg(const EquipMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EquipMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){}
    , decltype(_impl_.team_id_){}
    , decltype(_impl_.equipment_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.equipment_type_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.equipment_type_));
  // @@protoc_insertion_point(copy_constructor:protobuf.EquipMsg)
}

inline void EquipMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.equipment_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EquipMsg::~EquipMsg() {
  // @@protoc_insertion_point(destructor:protobuf.EquipMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EquipMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EquipMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EquipMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.EquipMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.equipment_type_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.equipment_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protobuf.EquipmentType equipment_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_equipment_type(static_cast<::protobuf::EquipmentType>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EquipMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.EquipMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // .protobuf.EquipmentType equipment_type = 2;
  if (this->_internal_equipment_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_equipment_type(), target);
  }

  // int64 team_id = 3;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_team_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.EquipMsg)
  return target;
}

size_t EquipMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.EquipMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // int64 team_id = 3;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // .protobuf.EquipmentType equipment_type = 2;
  if (this->_internal_equipment_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_equipment_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EquipMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EquipMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EquipMsg::GetClassData() const { return &_class_data_; }


void EquipMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EquipMsg*>(&to_msg);
  auto& from = static_cast<const EquipMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.EquipMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_equipment_type() != 0) {
    _this->_internal_set_equipment_type(from._internal_equipment_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EquipMsg::CopyFrom(const EquipMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.EquipMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipMsg::IsInitialized() const {
  return true;
}

void EquipMsg::InternalSwap(EquipMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EquipMsg, _impl_.equipment_type_)
      + sizeof(EquipMsg::_impl_.equipment_type_)
      - PROTOBUF_FIELD_OFFSET(EquipMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[13]);
}

// ===================================================================

class RecoverMsg::_Internal {
 public:
};

RecoverMsg::RecoverMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.RecoverMsg)
}
RecoverMsg::RecoverMsg(const RecoverMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RecoverMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){}
    , decltype(_impl_.recovered_hp_){}
    , decltype(_impl_.team_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.character_id_, &from._impl_.character_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.team_id_) -
    reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.team_id_));
  // @@protoc_insertion_point(copy_constructor:protobuf.RecoverMsg)
}

inline void RecoverMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_id_){int64_t{0}}
    , decltype(_impl_.recovered_hp_){int64_t{0}}
    , decltype(_impl_.team_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RecoverMsg::~RecoverMsg() {
  // @@protoc_insertion_point(destructor:protobuf.RecoverMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RecoverMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RecoverMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RecoverMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.RecoverMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.character_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.team_id_) -
      reinterpret_cast<char*>(&_impl_.character_id_)) + sizeof(_impl_.team_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecoverMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.character_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 recovered_hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.recovered_hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RecoverMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.RecoverMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_character_id(), target);
  }

  // int64 recovered_hp = 2;
  if (this->_internal_recovered_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_recovered_hp(), target);
  }

  // int64 team_id = 3;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_team_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.RecoverMsg)
  return target;
}

size_t RecoverMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.RecoverMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 character_id = 1;
  if (this->_internal_character_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_character_id());
  }

  // int64 recovered_hp = 2;
  if (this->_internal_recovered_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_recovered_hp());
  }

  // int64 team_id = 3;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RecoverMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RecoverMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RecoverMsg::GetClassData() const { return &_class_data_; }


void RecoverMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RecoverMsg*>(&to_msg);
  auto& from = static_cast<const RecoverMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.RecoverMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_character_id() != 0) {
    _this->_internal_set_character_id(from._internal_character_id());
  }
  if (from._internal_recovered_hp() != 0) {
    _this->_internal_set_recovered_hp(from._internal_recovered_hp());
  }
  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RecoverMsg::CopyFrom(const RecoverMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.RecoverMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverMsg::IsInitialized() const {
  return true;
}

void RecoverMsg::InternalSwap(RecoverMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecoverMsg, _impl_.team_id_)
      + sizeof(RecoverMsg::_impl_.team_id_)
      - PROTOBUF_FIELD_OFFSET(RecoverMsg, _impl_.character_id_)>(
          reinterpret_cast<char*>(&_impl_.character_id_),
          reinterpret_cast<char*>(&other->_impl_.character_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RecoverMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[14]);
}

// ===================================================================

class CreatCharacterMsg::_Internal {
 public:
};

CreatCharacterMsg::CreatCharacterMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protobuf.CreatCharacterMsg)
}
CreatCharacterMsg::CreatCharacterMsg(const CreatCharacterMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreatCharacterMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){}
    , decltype(_impl_.character_type_){}
    , decltype(_impl_.birthpoint_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.team_id_, &from._impl_.team_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.birthpoint_index_) -
    reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.birthpoint_index_));
  // @@protoc_insertion_point(copy_constructor:protobuf.CreatCharacterMsg)
}

inline void CreatCharacterMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.team_id_){int64_t{0}}
    , decltype(_impl_.character_type_){0}
    , decltype(_impl_.birthpoint_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreatCharacterMsg::~CreatCharacterMsg() {
  // @@protoc_insertion_point(destructor:protobuf.CreatCharacterMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreatCharacterMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CreatCharacterMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreatCharacterMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.CreatCharacterMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.team_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.birthpoint_index_) -
      reinterpret_cast<char*>(&_impl_.team_id_)) + sizeof(_impl_.birthpoint_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatCharacterMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protobuf.CharacterType character_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_character_type(static_cast<::protobuf::CharacterType>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 team_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.team_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 birthpoint_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.birthpoint_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreatCharacterMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.CreatCharacterMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protobuf.CharacterType character_type = 1;
  if (this->_internal_character_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_character_type(), target);
  }

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_team_id(), target);
  }

  // int32 birthpoint_index = 3;
  if (this->_internal_birthpoint_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_birthpoint_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.CreatCharacterMsg)
  return target;
}

size_t CreatCharacterMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.CreatCharacterMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 team_id = 2;
  if (this->_internal_team_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_team_id());
  }

  // .protobuf.CharacterType character_type = 1;
  if (this->_internal_character_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_character_type());
  }

  // int32 birthpoint_index = 3;
  if (this->_internal_birthpoint_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_birthpoint_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatCharacterMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreatCharacterMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatCharacterMsg::GetClassData() const { return &_class_data_; }


void CreatCharacterMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreatCharacterMsg*>(&to_msg);
  auto& from = static_cast<const CreatCharacterMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.CreatCharacterMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_team_id() != 0) {
    _this->_internal_set_team_id(from._internal_team_id());
  }
  if (from._internal_character_type() != 0) {
    _this->_internal_set_character_type(from._internal_character_type());
  }
  if (from._internal_birthpoint_index() != 0) {
    _this->_internal_set_birthpoint_index(from._internal_birthpoint_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatCharacterMsg::CopyFrom(const CreatCharacterMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.CreatCharacterMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatCharacterMsg::IsInitialized() const {
  return true;
}

void CreatCharacterMsg::InternalSwap(CreatCharacterMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreatCharacterMsg, _impl_.birthpoint_index_)
      + sizeof(CreatCharacterMsg::_impl_.birthpoint_index_)
      - PROTOBUF_FIELD_OFFSET(CreatCharacterMsg, _impl_.team_id_)>(
          reinterpret_cast<char*>(&_impl_.team_id_),
          reinterpret_cast<char*>(&other->_impl_.team_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatCharacterMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message2Server_2eproto_getter, &descriptor_table_Message2Server_2eproto_once,
      file_level_metadata_Message2Server_2eproto[15]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf::NullRequest*
Arena::CreateMaybeMessage< ::protobuf::NullRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::NullRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::IDMsg*
Arena::CreateMaybeMessage< ::protobuf::IDMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::IDMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::CharacterMsg*
Arena::CreateMaybeMessage< ::protobuf::CharacterMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::CharacterMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::EconomyReourceMsg*
Arena::CreateMaybeMessage< ::protobuf::EconomyReourceMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::EconomyReourceMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::AdditionResourceMsg*
Arena::CreateMaybeMessage< ::protobuf::AdditionResourceMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::AdditionResourceMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::ConstructionMsg*
Arena::CreateMaybeMessage< ::protobuf::ConstructionMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::ConstructionMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::MoveMsg*
Arena::CreateMaybeMessage< ::protobuf::MoveMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::MoveMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::SendMsg*
Arena::CreateMaybeMessage< ::protobuf::SendMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::SendMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::AttackMsg*
Arena::CreateMaybeMessage< ::protobuf::AttackMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::AttackMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::CastMsg*
Arena::CreateMaybeMessage< ::protobuf::CastMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::CastMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::AttackConstructionMsg*
Arena::CreateMaybeMessage< ::protobuf::AttackConstructionMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::AttackConstructionMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::AttackAdditionResourceMsg*
Arena::CreateMaybeMessage< ::protobuf::AttackAdditionResourceMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::AttackAdditionResourceMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::ConstructMsg*
Arena::CreateMaybeMessage< ::protobuf::ConstructMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::ConstructMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::EquipMsg*
Arena::CreateMaybeMessage< ::protobuf::EquipMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::EquipMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::RecoverMsg*
Arena::CreateMaybeMessage< ::protobuf::RecoverMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::RecoverMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::CreatCharacterMsg*
Arena::CreateMaybeMessage< ::protobuf::CreatCharacterMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::CreatCharacterMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
